{"version":3,"file":"index.es.js","sources":["../src/interfaces.ts","../src/interfaces.internal.ts","../src/resource/resource.internal.ts","../src/constants.ts","../src/resource/resource.ts","../src/formats/jsonLd.ts","../src/rdf.internal.ts","../src/datatypes.ts","../src/rdfjs.internal.ts","../src/formats/turtle.ts","../src/formats/prefixes.ts","../src/rdfjs.ts","../src/formats/solidDatasetAsTurtle.ts","../src/formats/index.ts","../src/resource/file.ts","../src/thing/thing.internal.ts","../src/thing/get.ts","../src/thing/thing.ts","../src/resource/iri.internal.ts","../src/resource/solidDataset.ts","../src/resource/mock.ts","../src/thing/add.ts","../src/thing/remove.ts","../src/thing/set.ts","../src/thing/build.ts","../src/thing/mock.ts","../src/acp/acp.internal.ts","../src/acl/acl.internal.ts","../src/acl/acl.ts","../src/acl/agent.ts","../src/acl/group.ts","../src/acl/class.ts","../src/acl/mock.internal.ts","../src/acl/mock.ts","../src/profile/jwks.ts","../src/profile/webid.ts","../src/universal/getAclServerResourceInfo.ts","../src/acp/constants.ts","../src/acp/control.ts","../src/acp/internal/getDefaultAccessControlUrl.ts","../src/acp/internal/getDefaultAccessControlThing.ts","../src/acp/internal/getModes.ts","../src/acp/internal/setAcr.ts","../src/acp/internal/setModes.ts","../src/acp/util/setVcAccess.ts","../src/acp/util/getVcAccess.ts","../src/acp/acp.ts","../src/acp/control.internal.ts","../src/acp/internal/getAccessControlResourceThing.ts","../src/acp/accessControl/getAccessControlUrlAll.ts","../src/acp/internal/getPolicyUrls.ts","../src/acp/policy/getPolicyUrlAll.ts","../src/acp/policy/getAcrPolicyUrlAll.ts","../src/acp/policy/getAllowModes.ts","../src/acp/policy/getDenyModes.ts","../src/acp/util/getAgentAccess.ts","../src/access/wac.ts","../src/acp/util/getAcrUrl.ts","../src/acp/util/getResourceAcr.ts","../src/universal/getAgentAccess.ts","../src/acp/util/getAgentUrlAll.ts","../src/acp/util/getAgentAccessAll.ts","../src/universal/getAgentAccessAll.ts","../src/acp/util/getPublicAccess.ts","../src/universal/getPublicAccess.ts","../src/acp/internal/setAccessControlResourceThing.ts","../src/acp/internal/getDefaultAgentMatcherPolicyUrl.ts","../src/acp/internal/setDefaultAccessControlThingIfNotExist.ts","../src/acp/policy/addAcrPolicyUrl.ts","../src/acp/policy/addPolicyUrl.ts","../src/acp/internal/setDefaultAgentMatcherPolicyThingIfNotExist.ts","../src/acp/internal/getDefaultAgentMatcherPolicyMatcherUrl.ts","../src/acp/internal/setDefaultAgentMatcherPolicyMatcherThingIfNotExist.ts","../src/acp/matcher.ts","../src/acp/util/setAgentAccess.ts","../src/universal/setAgentAccess.ts","../src/acp/util/setPublicAccess.ts","../src/universal/setPublicAccess.ts","../src/universal/index.ts","../src/acp/policy/addMemberAcrPolicyUrl.ts","../src/acp/policy/addMemberPolicyUrl.ts","../src/acp/accessControl/getMemberAccessControlUrlAll.ts","../src/acp/policy/getMemberAcrPolicyUrlAll.ts","../src/acp/policy/getMemberPolicyUrlAll.ts","../src/acp/policy/removeAcrPolicyUrl.ts","../src/acp/policy/removeMemberAcrPolicyUrl.ts","../src/acp/policy/removeMemberPolicyUrl.ts","../src/acp/policy/removePolicyUrl.ts","../src/acp/policy/setResourcePolicy.ts","../src/acp/policy.ts","../src/acp/mock.ts","../src/acp/ess2.ts","../src/index.ts"],"sourcesContent":["//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { Quad, NamedNode } from \"@rdfjs/types\";\nimport type { Access } from \"./acl/acl\";\nimport type { ImmutableDataset, LocalNodeIri, Subject } from \"./rdf.internal\";\n\n/**\n * Alias to indicate where we expect to be given a URL represented as an RDF/JS NamedNode.\n */\nexport type Url = NamedNode;\n/** @hidden Alias of Url for those who prefer to use IRI terminology. */\nexport type Iri = Url;\n/**\n * Alias to indicate where we expect to be given a URL.\n */\nexport type UrlString = string;\n/** @hidden Alias of UrlString for those who prefer to use IRI terminology. */\nexport type IriString = UrlString;\n/**\n * Alias to indicate where we expect to be given a WebId.\n */\nexport type WebId = UrlString;\n\n/**\n * A SolidDataset represents all Quads from a single Resource.\n */\nexport type SolidDataset = ImmutableDataset;\n\n/**\n * A File is anything stored on a Pod in a format that solid-client does not have special affordances for, e.g. an image, or a plain JSON file.\n */\nexport type File = Blob;\n\n/**\n * A JSON data structure that represents a set of public keys as a JSON object.\n * See https://datatracker.ietf.org/doc/html/rfc7517 for details.\n */\nexport type Jwk = Record<string, string>;\n\n/**\n * A JSON data structure holding a list of JWK.\n */\nexport type Jwks = {\n  keys: Jwk[];\n};\n\n/**\n * A Resource is something that can be fetched from a Pod - either structured data in a [[SolidDataset]], or any other [[File]].\n */\nexport type Resource = SolidDataset | File;\n\n/**\n * A Thing represents all Quads with a given Subject URL and a given Named\n * Graph, from a single Resource.\n */\nexport type Thing = Subject;\n\n/**\n * A [[Thing]] for which we know what the full Subject URL is.\n */\nexport type ThingPersisted = Thing & { url: UrlString };\n/**\n * A [[Thing]] whose full Subject URL will be determined when it is persisted.\n */\nexport type ThingLocal = Thing & { url: LocalNodeIri };\n\n/**\n * Represents the BlankNode that will be initialised to a NamedNode when persisted.\n *\n * This is a Blank Node with a `name` property attached, which will be used to construct this\n * Node's full URL once it is persisted, where it will transform into a Named Node.\n *\n * @hidden Utility type; library users should not need to interact with LocalNodes directly.\n */\nexport type LocalNode = NamedNode<LocalNodeIri>;\n\n/**\n * Data that was sent to a Pod includes this metadata describing its relation to the Pod Resource it was sent to.\n *\n * **Do not read these properties directly**; their internal representation may change at any time.\n * Instead, use functions such as [[getSourceUrl]], [[isRawData]] and [[getContentType]].\n */\nexport type WithResourceInfo = {\n  /** @hidden */\n  internal_resourceInfo: {\n    sourceIri: UrlString;\n    isRawData: boolean;\n    contentType?: string;\n  };\n};\n\ntype internal_WacAllow = {\n  user: Access;\n  public: Access;\n};\n\n/**\n * What access the current user has to a particular Resource, and what access everybody has.\n *\n * Note that access for everybody is at the time of writing not returned by\n * servers implementing Access Control Policies, so the `public` property is\n * only available on servers that implement Web Access Control.\n *\n * @since 1.7.0\n */\nexport type EffectiveAccess = {\n  user: {\n    read: boolean;\n    append: boolean;\n    write: boolean;\n  };\n  public?: {\n    read: boolean;\n    append: boolean;\n    write: boolean;\n  };\n};\n\n/**\n * URLs of Resources linked to a given Resource, indexed by relation.\n *\n * @since 1.7.0\n */\nexport type LinkedResourceUrlAll = Record<UrlString | string, UrlString[]>;\n\n/**\n * Data that was fetched from a Pod includes this metadata describing its relation to the Pod Resource it was fetched from.\n *\n * **Do not read these properties directly**; their internal representation may change at any time.\n * Instead, use functions such as [[getSourceUrl]], [[isRawData]] and [[getContentType]].\n */\nexport type WithServerResourceInfo = WithResourceInfo & {\n  /** @hidden */\n  internal_resourceInfo: {\n    /**\n     * The URL reported by the server as possibly containing an ACL file. Note that this file might\n     * not necessarily exist, in which case the ACL of the nearest Container with an ACL applies.\n     *\n     * `linkedResources`, which this property is redundant with, was added later.\n     * Thus, this one will be removed at some point.\n     *\n     * @ignore We anticipate the Solid spec to change how the ACL gets accessed, which would result\n     *         in this API changing as well.\n     */\n    aclUrl?: UrlString;\n    /**\n     * Content-Location is the relative or absolute direct URL to use to access the resource when content negotiation happened.\n     */\n    contentLocation?: UrlString;\n    /**\n     * An object of the links in the `Link` header, keyed by their `rel`.\n     * @hidden\n     */\n    linkedResources: LinkedResourceUrlAll;\n    /**\n     * Location is the relative or absolute URL target of a redirection or the URL of a newly created resource.\n     */\n    location?: UrlString;\n    /**\n     * Access permissions for the current user and the general public for this resource.\n     *\n     * @ignore There is no consensus yet about how this functionality will be incorporated in the\n     *         final spec, so the final implementation might influence this API in the future.\n     * @see https://github.com/solid/solid-spec/blob/cb1373a369398d561b909009bd0e5a8c3fec953b/api-rest.md#wac-allow-headers\n     * @see https://github.com/solid/specification/issues/171\n     */\n    permissions?: internal_WacAllow;\n  };\n};\n\n/**\n * @hidden Data structure to keep track of operations done by us; should not be read or manipulated by the developer.\n */\nexport type WithChangeLog = SolidDataset & {\n  internal_changeLog: {\n    additions: Quad[];\n    deletions: Quad[];\n  };\n};\n\n/**\n * Verify whether a given SolidDataset includes metadata about where it was sent to.\n *\n * @param dataset A [[SolidDataset]] that may have metadata attached about the Resource it was retrieved from.\n * @returns True if `dataset` includes metadata about the Resource it was sent to, false if not.\n * @since 0.2.0\n */\nexport function hasResourceInfo<T>(\n  resource: T,\n): resource is T & WithResourceInfo {\n  const potentialResourceInfo = resource as T & WithResourceInfo;\n  return (\n    typeof potentialResourceInfo === \"object\" &&\n    typeof potentialResourceInfo.internal_resourceInfo === \"object\"\n  );\n}\n\n/**\n * Verify whether a given SolidDataset includes metadata about where it was retrieved from.\n *\n * @param dataset A [[SolidDataset]] that may have metadata attached about the Resource it was retrieved from.\n * @returns True if `dataset` includes metadata about the Resource it was retrieved from, false if not.\n * @since 0.6.0\n */\nexport function hasServerResourceInfo<T>(\n  resource: T,\n): resource is T & WithServerResourceInfo {\n  const potentialResourceInfo = resource as T & WithServerResourceInfo;\n  return (\n    typeof potentialResourceInfo === \"object\" &&\n    typeof potentialResourceInfo.internal_resourceInfo === \"object\" &&\n    typeof potentialResourceInfo.internal_resourceInfo.linkedResources ===\n      \"object\"\n  );\n}\n\n/** @internal */\nexport function hasChangelog<T extends SolidDataset>(\n  dataset: T,\n): dataset is T & WithChangeLog {\n  const potentialChangeLog = dataset as T & WithChangeLog;\n  return (\n    typeof potentialChangeLog.internal_changeLog === \"object\" &&\n    Array.isArray(potentialChangeLog.internal_changeLog.additions) &&\n    Array.isArray(potentialChangeLog.internal_changeLog.deletions)\n  );\n}\n\n/**\n * A RequestInit restriction where the method is set by the library\n *\n * Please note that this function is still experimental and can change in a non-major release.\n */\nexport type UploadRequestInit = Omit<RequestInit, \"method\">;\n\n/**\n * Errors thrown by solid-client extend this class, and can thereby be distinguished from errors\n * thrown in lower-level libraries.\n * @since 1.2.0\n */\nexport class SolidClientError extends Error {}\n\n/**\n * ```{note}\n * The ACP specification is a draft. As such, this function is experimental and\n * subject to change, even in a non-major release.\n * See also: https://solid.github.io/authorization-panel/acp-specification/\n * ```\n */\nexport type AccessModes = {\n  read: boolean;\n  append: boolean;\n  write: boolean;\n  controlRead: boolean;\n  controlWrite: boolean;\n};\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { Iri, IriString } from \"./interfaces\";\n\n/** @internal */\nexport function internal_toIriString(iri: Iri | IriString): IriString {\n  return typeof iri === \"string\" ? iri : iri.value;\n}\n\n/**\n * @hidden\n * @param inputUrl The URL to normalize\n * @param options If trailingSlash is set, a trailing slash will be respectively added/removed.\n * The input URL trailing slash is left unchanged if trailingSlash is undefined.\n * @returns the normalized URL, without relative components, slash sequences, and proper trailing slash.\n */\nexport function normalizeUrl(\n  inputUrl: IriString,\n  options: { trailingSlash?: boolean } = {},\n): IriString {\n  // Normalize relative components.\n  const normalizedUrl = new URL(inputUrl);\n\n  // Collapse slash sequences.\n  normalizedUrl.pathname = normalizedUrl.pathname.replace(/\\/\\/+/g, \"/\");\n\n  // Enforce a trailing slash is present/absent.\n  if (\n    options.trailingSlash === false &&\n    normalizedUrl.pathname.slice(-1) === \"/\"\n  ) {\n    normalizedUrl.pathname = normalizedUrl.pathname.slice(\n      0,\n      normalizedUrl.pathname.length - 1,\n    );\n  }\n  if (\n    options.trailingSlash === true &&\n    normalizedUrl.pathname.slice(-1) !== \"/\"\n  ) {\n    normalizedUrl.pathname = `${normalizedUrl.pathname}/`;\n  }\n\n  return normalizedUrl.href;\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport LinkHeader from \"http-link-header\";\nimport type { Access } from \"../acl/acl\";\nimport type { WithServerResourceInfo } from \"../interfaces\";\n\n/**\n * @internal\n */\nexport function internal_parseResourceInfo(\n  response: Response,\n): WithServerResourceInfo[\"internal_resourceInfo\"] {\n  const contentTypeParts =\n    response.headers.get(\"Content-Type\")?.split(\";\") ?? [];\n  // If the server offers a Turtle or JSON-LD serialisation on its own accord,\n  // that tells us whether it is RDF data that the server can understand\n  // (and hence can be updated with a PATCH request with SPARQL INSERT and DELETE statements),\n  // in which case our SolidDataset-related functions should handle it.\n  // For more context, see https://github.com/inrupt/solid-client-js/pull/214.\n  const isSolidDataset =\n    contentTypeParts.length > 0 &&\n    [\"text/turtle\", \"application/ld+json\"].includes(contentTypeParts[0]);\n\n  const resourceInfo: WithServerResourceInfo[\"internal_resourceInfo\"] = {\n    sourceIri: response.url,\n    isRawData: !isSolidDataset,\n    contentLocation: response.headers.get(\"Content-Location\") ?? undefined,\n    contentType: response.headers.get(\"Content-Type\") ?? undefined,\n    linkedResources: {},\n    location: response.headers.get(\"Location\") ?? undefined,\n  };\n\n  const linkHeader = response.headers.get(\"Link\");\n  if (linkHeader) {\n    const parsedLinks = LinkHeader.parse(linkHeader);\n    // Set ACL link\n    const aclLinks = parsedLinks.get(\"rel\", \"acl\");\n    if (aclLinks.length === 1) {\n      resourceInfo.aclUrl = new URL(\n        aclLinks[0].uri,\n        resourceInfo.sourceIri,\n      ).href;\n    }\n    // Parse all link headers and expose them in a standard way\n    // (this can replace the parsing of the ACL link above):\n    resourceInfo.linkedResources = parsedLinks.refs.reduce((rels, ref) => {\n      rels[ref.rel] ??= [];\n      rels[ref.rel].push(new URL(ref.uri, resourceInfo.sourceIri).href);\n      return rels;\n    }, resourceInfo.linkedResources);\n  }\n\n  const wacAllowHeader = response.headers.get(\"WAC-Allow\");\n  if (wacAllowHeader) {\n    resourceInfo.permissions = parseWacAllowHeader(wacAllowHeader);\n  }\n\n  return resourceInfo;\n}\n\n/**\n * Parse a WAC-Allow header into user and public access booleans.\n *\n * @param wacAllowHeader A WAC-Allow header in the format `user=\"read append write control\",public=\"read\"`\n * @see https://github.com/solid/solid-spec/blob/cb1373a369398d561b909009bd0e5a8c3fec953b/api-rest.md#wac-allow-headers\n */\nfunction parseWacAllowHeader(wacAllowHeader: string) {\n  function parsePermissionStatement(permissionStatement: string): Access {\n    const permissions = permissionStatement.split(\" \");\n    const writePermission = permissions.includes(\"write\");\n    return writePermission\n      ? {\n          read: permissions.includes(\"read\"),\n          append: true,\n          write: true,\n          control: permissions.includes(\"control\"),\n        }\n      : {\n          read: permissions.includes(\"read\"),\n          append: permissions.includes(\"append\"),\n          write: false,\n          control: permissions.includes(\"control\"),\n        };\n  }\n  function getStatementFor(header: string, scope: \"user\" | \"public\") {\n    const relevantEntries = header\n      .split(\",\")\n      .map((rawEntry) => rawEntry.split(\"=\"))\n      .filter((parts) => parts.length === 2 && parts[0].trim() === scope);\n\n    // There should only be one statement with the given scope:\n    if (relevantEntries.length !== 1) {\n      return \"\";\n    }\n    const relevantStatement = relevantEntries[0][1].trim();\n\n    // The given statement should be wrapped in double quotes to be valid:\n    if (\n      relevantStatement.charAt(0) !== '\"' ||\n      relevantStatement.charAt(relevantStatement.length - 1) !== '\"'\n    ) {\n      return \"\";\n    }\n    // Return the statment without the wrapping quotes, e.g.: read append write control\n    return relevantStatement.substring(1, relevantStatement.length - 1);\n  }\n\n  return {\n    user: parsePermissionStatement(getStatementFor(wacAllowHeader, \"user\")),\n    public: parsePermissionStatement(getStatementFor(wacAllowHeader, \"public\")),\n  };\n}\n\n/** @hidden Used to instantiate a separate instance from input parameters */\nexport function internal_cloneResource<ResourceExt extends object>(\n  resource: ResourceExt,\n): ResourceExt {\n  let clonedResource;\n  if (typeof (resource as File).slice === \"function\") {\n    // If given Resource is a File:\n    clonedResource = Object.assign((resource as File).slice(), { ...resource });\n  } else {\n    // If it is just a plain object containing metadata:\n    clonedResource = { ...resource };\n  }\n\n  return clonedResource;\n}\n\n/** @internal */\nexport function internal_isUnsuccessfulResponse(\n  response: Response,\n): response is Response & { ok: false } {\n  return !response.ok;\n}\n\nexport function internal_isAuthenticationFailureResponse(\n  response: Response,\n): response is Response & { status: 401 | 403 } {\n  return response.status === 401 || response.status === 403;\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\n// TODO: These should be replaced by auto-generated constants,\n//       if we can ensure that unused constants will be excluded from bundles.\n\n/** @hidden */\nexport const acl = {\n  Authorization: \"http://www.w3.org/ns/auth/acl#Authorization\",\n  AuthenticatedAgent: \"http://www.w3.org/ns/auth/acl#AuthenticatedAgent\",\n  accessTo: \"http://www.w3.org/ns/auth/acl#accessTo\",\n  agent: \"http://www.w3.org/ns/auth/acl#agent\",\n  agentGroup: \"http://www.w3.org/ns/auth/acl#agentGroup\",\n  agentClass: \"http://www.w3.org/ns/auth/acl#agentClass\",\n  default: \"http://www.w3.org/ns/auth/acl#default\",\n  defaultForNew: \"http://www.w3.org/ns/auth/acl#defaultForNew\",\n  mode: \"http://www.w3.org/ns/auth/acl#mode\",\n  origin: \"http://www.w3.org/ns/auth/acl#origin\",\n} as const;\n\n/** @hidden */\nexport const rdf = {\n  type: \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\",\n} as const;\n\n/** @hidden */\nexport const rdfs = {\n  seeAlso: \"http://www.w3.org/2000/01/rdf-schema#seeAlso\",\n} as const;\n\n/** @hidden */\nexport const ldp = {\n  BasicContainer: \"http://www.w3.org/ns/ldp#BasicContainer\",\n  Container: \"http://www.w3.org/ns/ldp#Container\",\n  Resource: \"http://www.w3.org/ns/ldp#Resource\",\n  contains: \"http://www.w3.org/ns/ldp#contains\",\n} as const;\n\n/** @hidden */\nexport const foaf = {\n  Agent: \"http://xmlns.com/foaf/0.1/Agent\",\n  primaryTopic: \"http://xmlns.com/foaf/0.1/primaryTopic\",\n  isPrimaryTopicOf: \"http://xmlns.com/foaf/0.1/isPrimaryTopicOf\",\n} as const;\n\n/** @hidden */\nexport const acp = {\n  AccessControlResource: \"http://www.w3.org/ns/solid/acp#AccessControlResource\",\n  Policy: \"http://www.w3.org/ns/solid/acp#Policy\",\n  AccessControl: \"http://www.w3.org/ns/solid/acp#AccessControl\",\n  Read: \"http://www.w3.org/ns/solid/acp#Read\",\n  Append: \"http://www.w3.org/ns/solid/acp#Append\",\n  Write: \"http://www.w3.org/ns/solid/acp#Write\",\n  /** @deprecated Removed from the ACP proposal, to be replaced by Matchers. */\n  Rule: \"http://www.w3.org/ns/solid/acp#Rule\",\n  Matcher: \"http://www.w3.org/ns/solid/acp#Matcher\",\n  accessControl: \"http://www.w3.org/ns/solid/acp#accessControl\",\n  memberAccessControl: \"http://www.w3.org/ns/solid/acp#memberAccessControl\",\n  apply: \"http://www.w3.org/ns/solid/acp#apply\",\n  /** @deprecated Removed from the ACP proposal, to be replaced by memberAccessControls. */\n  applyMembers: \"http://www.w3.org/ns/solid/acp#applyMembers\",\n  allow: \"http://www.w3.org/ns/solid/acp#allow\",\n  deny: \"http://www.w3.org/ns/solid/acp#deny\",\n  allOf: \"http://www.w3.org/ns/solid/acp#allOf\",\n  anyOf: \"http://www.w3.org/ns/solid/acp#anyOf\",\n  noneOf: \"http://www.w3.org/ns/solid/acp#noneOf\",\n  access: \"http://www.w3.org/ns/solid/acp#access\",\n  /** @deprecated Removed from the ACP proposal, to be replaced by memberAccessControls. */\n  accessMembers: \"http://www.w3.org/ns/solid/acp#accessMembers\",\n  agent: \"http://www.w3.org/ns/solid/acp#agent\",\n  group: \"http://www.w3.org/ns/solid/acp#group\",\n  client: \"http://www.w3.org/ns/solid/acp#client\",\n  PublicAgent: \"http://www.w3.org/ns/solid/acp#PublicAgent\",\n  AuthenticatedAgent: \"http://www.w3.org/ns/solid/acp#AuthenticatedAgent\",\n  CreatorAgent: \"http://www.w3.org/ns/solid/acp#CreatorAgent\",\n} as const;\n\n/** @hidden */\nexport const solid = {\n  PublicOidcClient: \"http://www.w3.org/ns/solid/terms#PublicOidcClient\",\n} as const;\n\n/** @hidden */\nexport const security = {\n  publicKey: \"https://w3id.org/security#publicKey\",\n} as const;\n\n/** @hidden */\nexport const pim = {\n  storage: \"http://www.w3.org/ns/pim/space#storage\",\n} as const;\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type {\n  UrlString,\n  Url,\n  WebId,\n  Resource,\n  WithServerResourceInfo,\n  WithResourceInfo,\n  LinkedResourceUrlAll,\n  EffectiveAccess,\n} from \"../interfaces\";\nimport {\n  hasResourceInfo,\n  hasServerResourceInfo,\n  SolidClientError,\n} from \"../interfaces\";\nimport { internal_toIriString, normalizeUrl } from \"../interfaces.internal\";\nimport {\n  internal_isAuthenticationFailureResponse,\n  internal_isUnsuccessfulResponse,\n  internal_parseResourceInfo,\n} from \"./resource.internal\";\nimport { acp } from \"../constants\";\n\n/**\n * Retrieve the information about a resource (e.g. access permissions) without\n * fetching the resource itself.\n *\n * @param url URL to fetch Resource metadata from.\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters).\n * @returns Promise resolving to the metadata describing the given Resource, or rejecting if fetching it failed.\n * @since 0.4.0\n */\nexport async function getResourceInfo(\n  url: UrlString,\n  options?: {\n    fetch?: typeof fetch;\n    ignoreAuthenticationErrors?: boolean;\n  },\n): Promise<WithServerResourceInfo> {\n  const response = await (options?.fetch ?? fetch)(normalizeUrl(url), {\n    method: \"HEAD\",\n  });\n  return responseToResourceInfo(response, {\n    ignoreAuthenticationErrors: options?.ignoreAuthenticationErrors ?? false,\n  });\n}\n\n/**\n * Parse Solid metadata from a Response obtained by fetching a Resource from a Solid Pod,\n *\n * @param response A Fetch API Response. See {@link https://developer.mozilla.org/en-US/docs/Web/API/Response MDN}.\n * @returns Resource metadata readable by functions such as [[getSourceUrl]].\n * @hidden This interface is not exposed yet until we've tried it out in practice.\n */\nexport function responseToResourceInfo(\n  response: Response,\n  options: {\n    ignoreAuthenticationErrors: boolean;\n  } = { ignoreAuthenticationErrors: false },\n): WithServerResourceInfo {\n  if (\n    internal_isUnsuccessfulResponse(response) &&\n    (!internal_isAuthenticationFailureResponse(response) ||\n      !options.ignoreAuthenticationErrors)\n  ) {\n    throw new FetchError(\n      `Fetching the metadata of the Resource at [${response.url}] failed: [${response.status}] [${response.statusText}].`,\n      response,\n    );\n  }\n\n  const resourceInfo = internal_parseResourceInfo(response);\n\n  return { internal_resourceInfo: resourceInfo };\n}\n\n/**\n * @param resource Resource for which to check whether it is a Container.\n * @returns Whether `resource` is a Container.\n */\nexport function isContainer(\n  resource: Url | UrlString | WithResourceInfo,\n): boolean {\n  const containerUrl = hasResourceInfo(resource)\n    ? getSourceUrl(resource)\n    : internal_toIriString(resource);\n  return containerUrl.endsWith(\"/\");\n}\n\n/**\n * This function will tell you whether a given Resource contains raw data, or a SolidDataset.\n *\n * @param resource Resource for which to check whether it contains raw data.\n * @return Whether `resource` contains raw data.\n */\nexport function isRawData(resource: WithResourceInfo): boolean {\n  return resource.internal_resourceInfo.isRawData;\n}\n\n/**\n * @param resource Resource for which to determine the Content Type.\n * @returns The Content Type, if known, or null if not known.\n */\nexport function getContentType(resource: WithResourceInfo): string | null {\n  return resource.internal_resourceInfo.contentType ?? null;\n}\n\n/**\n * @param resource\n * @returns The URL from which the Resource has been fetched, or null if it is not known.\n */\nexport function getSourceUrl(resource: WithResourceInfo): string;\nexport function getSourceUrl(resource: Resource): string | null;\nexport function getSourceUrl(\n  resource: Resource | WithResourceInfo,\n): string | null {\n  if (hasResourceInfo(resource)) {\n    return resource.internal_resourceInfo.sourceIri;\n  }\n  return null;\n}\n/** @hidden Alias of getSourceUrl for those who prefer to use IRI terminology. */\nexport const getSourceIri = getSourceUrl;\n\n/**\n * Given a Resource that exposes information about the owner of the Pod it is in, returns the WebID of that owner.\n *\n * Data about the owner of the Pod is exposed when the following conditions hold:\n * - The Pod server supports exposing the Pod owner\n * - The current user is allowed to see who the Pod owner is.\n *\n * If one or more of those conditions are false, this function will return `null`.\n *\n * @param resource A Resource that contains information about the owner of the Pod it is in.\n * @returns The WebID of the owner of the Pod the Resource is in, if provided, or `null` if not.\n * @since 0.6.0\n */\nexport function getPodOwner(resource: WithServerResourceInfo): WebId | null {\n  if (!hasServerResourceInfo(resource)) {\n    return null;\n  }\n\n  const podOwners =\n    getLinkedResourceUrlAll(resource)[\n      \"http://www.w3.org/ns/solid/terms#podOwner\"\n    ] ?? [];\n\n  return podOwners.length === 1 ? podOwners[0] : null;\n}\n\n/**\n * Given a WebID and a Resource that exposes information about the owner of the Pod it is in, returns whether the given WebID is the owner of the Pod.\n *\n * Data about the owner of the Pod is exposed when the following conditions hold:\n * - The Pod server supports exposing the Pod owner\n * - The current user is allowed to see who the Pod owner is.\n *\n * If one or more of those conditions are false, this function will return `null`.\n *\n * @param webId The WebID of which to check whether it is the Pod Owner's.\n * @param resource A Resource that contains information about the owner of the Pod it is in.\n * @returns Whether the given WebID is the Pod Owner's, if the Pod Owner is exposed, or `null` if it is not exposed.\n * @since 0.6.0\n */\nexport function isPodOwner(\n  webId: WebId,\n  resource: WithServerResourceInfo,\n): boolean | null {\n  const podOwner = getPodOwner(resource);\n\n  if (typeof podOwner !== \"string\") {\n    return null;\n  }\n\n  return podOwner === webId;\n}\n\n/**\n * Get the URLs of Resources linked to the given Resource.\n *\n * Solid servers can link Resources to each other. For example, in servers\n * implementing Web Access Control, Resources can have an Access Control List\n * Resource linked to it via the `acl` relation.\n *\n * @param resource A Resource fetched from a Solid Pod.\n * @returns The URLs of Resources linked to the given Resource, indexed by the key that links them.\n * @since 1.7.0\n */\nexport function getLinkedResourceUrlAll(\n  resource: WithServerResourceInfo,\n): LinkedResourceUrlAll {\n  return resource.internal_resourceInfo.linkedResources;\n}\n\n/**\n * Get what access the current user has to the given Resource.\n *\n * This function can tell you what access the current user has for the given\n * Resource, allowing you to e.g. determine that changes to it will be rejected\n * before attempting to do so.\n * Additionally, for servers adhering to the Web Access Control specification,\n * it will tell you what access unauthenticated users have to the given Resource.\n *\n * @param resource A Resource fetched from a Solid Pod.\n * @returns What access the current user and, if supported by the server, unauthenticated users have to the given Resource.\n * @since 1.7.0\n */\nexport function getEffectiveAccess(\n  resource: WithServerResourceInfo,\n): EffectiveAccess {\n  if (typeof resource.internal_resourceInfo.permissions === \"object\") {\n    return {\n      user: {\n        read: resource.internal_resourceInfo.permissions.user.read,\n        append: resource.internal_resourceInfo.permissions.user.append,\n        write: resource.internal_resourceInfo.permissions.user.write,\n      },\n      public: {\n        read: resource.internal_resourceInfo.permissions.public.read,\n        append: resource.internal_resourceInfo.permissions.public.append,\n        write: resource.internal_resourceInfo.permissions.public.write,\n      },\n    };\n  }\n\n  const linkedResourceUrls = getLinkedResourceUrlAll(resource);\n  return {\n    user: {\n      read: linkedResourceUrls[acp.allow]?.includes(acp.Read) ?? false,\n      append:\n        (linkedResourceUrls[acp.allow]?.includes(acp.Append) ||\n          linkedResourceUrls[acp.allow]?.includes(acp.Write)) ??\n        false,\n      write: linkedResourceUrls[acp.allow]?.includes(acp.Write) ?? false,\n    },\n  };\n}\n\n/**\n * Extends the regular JavaScript error object with access to the status code and status message.\n * @since 1.2.0\n */\nexport class FetchError extends SolidClientError {\n  /** @since 1.3.0 */\n  public readonly response: Response & { ok: false };\n\n  get statusCode(): number {\n    return this.response.status;\n  }\n\n  get statusText(): string | undefined {\n    return this.response.statusText;\n  }\n\n  constructor(message: string, errorResponse: Response & { ok: false }) {\n    super(message);\n    this.response = errorResponse;\n  }\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\nimport { JsonLdParser } from \"jsonld-streaming-parser\";\nimport { FetchDocumentLoader } from \"jsonld-context-parser\";\nimport { getSourceUrl } from \"../resource/resource\";\nimport type { Parser } from \"../resource/solidDataset\";\n\n/**\n * ```{note} This function is still experimental and subject to change, even\n * in a non-major release.\n * ```\n * This returns a parser that transforms a JSON-LD string into a set of RDFJS quads.\n *\n * @returns A Parser object.\n * @since 1.15.0\n */\nexport const getJsonLdParser = (): Parser => {\n  const onQuadCallbacks: Array<Parameters<Parser[\"onQuad\"]>[0]> = [];\n  const onCompleteCallbacks: Array<Parameters<Parser[\"onComplete\"]>[0]> = [];\n  const onErrorCallbacks: Array<Parameters<Parser[\"onError\"]>[0]> = [];\n\n  return {\n    onQuad: (callback) => {\n      onQuadCallbacks.push(callback);\n    },\n    onError: (callback) => {\n      onErrorCallbacks.push(callback);\n    },\n    onComplete: (callback) => {\n      onCompleteCallbacks.push(callback);\n    },\n    // The following returns a Promise that can be awaited, which is undocumented\n    // behavior that doesn't match the type signature. It prevents a potentially\n    // breaking change, and will be updated on the next major release.\n    parse: (source, resourceInfo) =>\n      new Promise<void>((res) => {\n        const parser = new JsonLdParser({\n          baseIRI: getSourceUrl(resourceInfo),\n          documentLoader: new FetchDocumentLoader((...args) => fetch(...args)),\n        });\n\n        let endCalled = false;\n        function end() {\n          if (!endCalled) {\n            endCalled = true;\n            onCompleteCallbacks.forEach((callback) => callback());\n            res();\n          }\n        }\n\n        parser.on(\"end\", end);\n        parser.on(\"error\", (err) => {\n          onErrorCallbacks.forEach((callback) => callback(err));\n          end();\n        });\n        onQuadCallbacks.forEach((callback) => parser.on(\"data\", callback));\n\n        parser.write(source);\n        parser.end();\n      }),\n  };\n};\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\n// @rdfjs/dataset is a CommonJS module, so named imports break in Node.\n// Thus, import the default export, then obtain the `dataset` property from there.\nimport type * as RdfJs from \"@rdfjs/types\";\nimport { Store } from \"n3\";\nimport type { IriString } from \"./interfaces\";\nimport type { XmlSchemaTypeIri } from \"./datatypes\";\n\nexport const rdfJsDataset: RdfJs.DatasetCoreFactory<RdfJs.Quad>[\"dataset\"] = (\n  quads: RdfJs.Quad[],\n) => new Store(quads);\n\nexport const localNodeSkolemPrefix =\n  \"https://inrupt.com/.well-known/sdk-local-node/\" as const;\nexport type LocalNodeIri = `${typeof localNodeSkolemPrefix}${string}`;\nexport type LocalNodeName = string;\ntype DataTypeIriString = XmlSchemaTypeIri | IriString;\ntype LocaleString = string;\nexport type BlankNodeId = `_:${string}`;\n\nexport type Objects = Readonly<\n  Partial<{\n    literals: Readonly<Record<DataTypeIriString, readonly string[]>>;\n    langStrings: Readonly<Record<LocaleString, readonly string[]>>;\n    namedNodes: ReadonlyArray<LocalNodeIri | IriString>;\n    blankNodes: ReadonlyArray<Predicates | BlankNodeId>;\n  }>\n>;\n\nexport type Predicates = Readonly<Record<IriString, Objects>>;\n\nexport type Subject = Readonly<{\n  type: \"Subject\";\n  url: BlankNodeId | LocalNodeIri | IriString;\n  predicates: Predicates;\n}>;\n\nexport type Graph = Readonly<\n  Record<BlankNodeId | LocalNodeIri | IriString, Subject>\n>;\n\nexport type ImmutableDataset = Readonly<{\n  type: \"Dataset\";\n  graphs: Readonly<Record<IriString, Graph> & { default: Graph }>;\n}>;\n\n/**\n * Runtime freezing might be too much overhead;\n * if so, this function allows us to replace it by a function\n * that merely marks its input as Readonly<> for static analysis.\n */\nexport const { freeze } = Object;\n\nexport function isLocalNodeIri(\n  iri: LocalNodeIri | IriString,\n): iri is LocalNodeIri {\n  return (\n    iri.substring(0, localNodeSkolemPrefix.length) === localNodeSkolemPrefix\n  );\n}\nexport function getLocalNodeName(localNodeIri: LocalNodeIri): string {\n  return localNodeIri.substring(localNodeSkolemPrefix.length);\n}\nexport function getLocalNodeIri(localNodeName: string): LocalNodeIri {\n  return `${localNodeSkolemPrefix}${localNodeName}` as LocalNodeIri;\n}\n\nexport function isBlankNodeId<T>(value: T | BlankNodeId): value is BlankNodeId {\n  return typeof value === \"string\" && value.substring(0, 2) === \"_:\";\n}\n\nexport function getBlankNodeValue(blankNodeId: BlankNodeId): string {\n  return blankNodeId.substring(2);\n}\n\nexport function getBlankNodeId(blankNode: RdfJs.BlankNode): BlankNodeId {\n  return `_:${blankNode.value}` as const;\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { NamedNode, Literal, Term, Quad_Subject } from \"@rdfjs/types\";\nimport { DataFactory } from \"./rdfjs.internal\";\nimport type { IriString, Iri, LocalNode } from \"./interfaces\";\nimport { SolidClientError } from \"./interfaces\";\nimport { internal_toIriString } from \"./interfaces.internal\";\nimport { getLocalNodeName, isLocalNodeIri } from \"./rdf.internal\";\n\n/**\n * IRIs of the XML Schema data types we support\n */\nexport const xmlSchemaTypes = {\n  boolean: \"http://www.w3.org/2001/XMLSchema#boolean\",\n  dateTime: \"http://www.w3.org/2001/XMLSchema#dateTime\",\n  date: \"http://www.w3.org/2001/XMLSchema#date\",\n  time: \"http://www.w3.org/2001/XMLSchema#time\",\n  decimal: \"http://www.w3.org/2001/XMLSchema#decimal\",\n  integer: \"http://www.w3.org/2001/XMLSchema#integer\",\n  string: \"http://www.w3.org/2001/XMLSchema#string\",\n  langString: \"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\",\n} as const;\n\nexport type XmlSchemaTypeIri =\n  (typeof xmlSchemaTypes)[keyof typeof xmlSchemaTypes];\n\n/**\n * @internal\n * @param value Value to serialise.\n * @returns String representation of `value`.\n * @see https://www.w3.org/TR/xmlschema-2/#boolean-lexical-representation\n */\nexport function serializeBoolean(value: boolean): string {\n  return value ? \"true\" : \"false\";\n}\n/**\n * @internal\n * @param value Value to deserialise.\n * @returns Deserialized boolean, or null if the given value is not a valid serialised boolean.\n * @see https://www.w3.org/TR/xmlschema-2/#boolean-lexical-representation\n */\nexport function deserializeBoolean(value: string): boolean | null {\n  if (value === \"true\" || value === \"1\") {\n    return true;\n  }\n  if (value === \"false\" || value === \"0\") {\n    return false;\n  }\n  return null;\n}\n\n/**\n * Time type for time data type attributes\n *\n * @since 1.10.0\n */\nexport type Time = {\n  hour: number;\n  minute: number;\n  second: number;\n  millisecond?: number;\n  timezoneHourOffset?: number;\n  timezoneMinuteOffset?: number;\n};\n\n/**\n * @internal\n * @param value Value to serialise.\n * @returns String representation of `value` in UTC.\n * @see https://www.w3.org/TR/xmlschema-2/#time-lexical-repr\n */\nexport function serializeTime(value: Time): string {\n  let millisecondString;\n  let timezoneString;\n\n  if (value.millisecond) {\n    if (value.millisecond < 10) {\n      millisecondString = `00${value.millisecond}`;\n    } else if (value.millisecond < 100) {\n      millisecondString = `0${value.millisecond}`;\n    } else {\n      millisecondString = value.millisecond;\n    }\n  }\n\n  if (typeof value.timezoneHourOffset === \"number\") {\n    const timezoneFormatted =\n      Math.abs(value.timezoneHourOffset) < 10\n        ? `0${Math.abs(value.timezoneHourOffset)}`\n        : Math.abs(value.timezoneHourOffset);\n\n    timezoneString =\n      value.timezoneHourOffset >= 0\n        ? `+${timezoneFormatted}`\n        : `-${timezoneFormatted}`;\n\n    if (value.timezoneMinuteOffset) {\n      timezoneString = `${timezoneString}:${\n        value.timezoneMinuteOffset < 10\n          ? `0${value.timezoneMinuteOffset}`\n          : value.timezoneMinuteOffset\n      }`;\n    } else {\n      timezoneString += \":00\";\n    }\n  }\n\n  return `${value.hour < 10 ? `0${value.hour}` : value.hour}:${\n    value.minute < 10 ? `0${value.minute}` : value.minute\n  }:${value.second < 10 ? `0${value.second}` : value.second}${\n    value.millisecond ? `.${millisecondString}` : \"\"\n  }${timezoneString || \"\"}`;\n}\n\n/**\n * @internal\n * @param literalString Value to deserialise.\n * @returns Deserialized time, or null if the given value is not a valid serialised datetime.\n * @see https://www.w3.org/TR/xmlschema-2/#time-lexical-repr\n */\nexport function deserializeTime(literalString: string): Time | null {\n  // Time in the format described at\n  // https://www.w3.org/TR/xmlschema-2/#time-lexical-repr\n  // \\d\\d:\\d\\d:\\d\\d - Two digits for the hour, minute and second, respectively, separated by a `:`.\n  //                  Example: \"13:37:42\".\n  // (\\.\\d+)? - Optionally a `.` followed by one or more digits representing milliseconds.\n  //            Example: \".1337\".\n  // (Z|(\\+|-)\\d\\d:\\d\\d) - The letter Z indicating UTC, or a `+` or `-` followed by two digits for\n  //                       the hour offset and two for the minute offset, separated by a `:`.\n  //                       Example: \"+13:37\".\n  const timeRegEx = /\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(Z|(\\+|-)\\d\\d:\\d\\d)?/;\n  if (!timeRegEx.test(literalString)) {\n    return null;\n  }\n  const [timeString, timezoneString] = splitTimeFromTimezone(literalString);\n  const [hourString, minuteString, timeRest] = timeString.split(\":\");\n  let utcHours = Number.parseInt(hourString, 10);\n  let utcMinutes = Number.parseInt(minuteString, 10);\n  const [secondString, optionalMillisecondString] = timeRest.split(\".\");\n  const utcSeconds = Number.parseInt(secondString, 10);\n  const utcMilliseconds = optionalMillisecondString\n    ? Number.parseInt(optionalMillisecondString, 10)\n    : undefined;\n\n  if (utcMinutes >= 60) {\n    utcHours += 1;\n    utcMinutes -= 60;\n  }\n\n  const deserializedTime: Time = {\n    hour: utcHours,\n    minute: utcMinutes,\n    second: utcSeconds,\n  };\n  if (typeof utcMilliseconds === \"number\") {\n    deserializedTime.millisecond = utcMilliseconds;\n  }\n  if (typeof timezoneString === \"string\") {\n    const [hourOffset, minuteOffset] = getTimezoneOffsets(timezoneString);\n    if (\n      typeof hourOffset !== \"number\" ||\n      hourOffset > 24 ||\n      typeof minuteOffset !== \"number\" ||\n      minuteOffset > 59\n    ) {\n      return null;\n    }\n    deserializedTime.timezoneHourOffset = hourOffset;\n    deserializedTime.timezoneMinuteOffset = minuteOffset;\n  }\n  return deserializedTime;\n}\n\n/**\n * @internal\n * @param value Value to serialise.\n * @returns String representation of `value`.\n * @see https://www.w3.org/TR/xmlschema-2/#dateTime-lexical-representation\n */\nexport function serializeDatetime(value: Date): string {\n  // Although the XML Schema DateTime is not _exactly_ an ISO 8601 string\n  // (see https://www.w3.org/TR/xmlschema-2/#deviantformats),\n  // the deviations only affect the parsing, not the serialisation.\n  // Therefore, we can just use .toISOString():\n  return value.toISOString();\n}\n\n/**\n * @internal\n * @param value Value to deserialise.\n * @returns Deserialized datetime, or null if the given value is not a valid serialised datetime.\n * @see https://www.w3.org/TR/xmlschema-2/#dateTime-lexical-representation\n */\nexport function deserializeDatetime(literalString: string): Date | null {\n  // DateTime in the format described at\n  // https://www.w3.org/TR/xmlschema-2/#dateTime-lexical-representation\n  // (without constraints on the value).\n  // -? - An optional leading `-`.\n  // \\d{4,}- - Four or more digits followed by a `-` representing the year. Example: \"3000-\".\n  // \\d\\d-\\d\\d - Two digits representing the month and two representing the day of the month,\n  //             separated by a `-`. Example: \"11-03\".\n  // T - The letter T, separating the date from the time.\n  // \\d\\d:\\d\\d:\\d\\d - Two digits for the hour, minute and second, respectively, separated by a `:`.\n  //                  Example: \"13:37:42\".\n  // (\\.\\d+)? - Optionally a `.` followed by one or more digits representing milliseconds.\n  //            Example: \".1337\".\n  // (Z|(\\+|-)\\d\\d:\\d\\d) - The letter Z indicating UTC, or a `+` or `-` followed by two digits for\n  //                       the hour offset and two for the minute offset, separated by a `:`.\n  //                       Example: \"+13:37\".\n  const datetimeRegEx =\n    /-?\\d{4,}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(Z|(\\+|-)\\d\\d:\\d\\d)?/;\n  if (!datetimeRegEx.test(literalString)) {\n    return null;\n  }\n\n  const [signedDateString, rest] = literalString.split(\"T\");\n  // The date string can optionally be prefixed with `-`,\n  // in which case the year is negative:\n  const [yearMultiplier, dateString] =\n    signedDateString.charAt(0) === \"-\"\n      ? [-1, signedDateString.substring(1)]\n      : [1, signedDateString];\n  const [yearString, monthString, dayString] = dateString.split(\"-\");\n  const utcFullYear = Number.parseInt(yearString, 10) * yearMultiplier;\n  const utcMonth = Number.parseInt(monthString, 10) - 1;\n  const utcDate = Number.parseInt(dayString, 10);\n  const [timeString, timezoneString] = splitTimeFromTimezone(rest);\n  const [hourOffset, minuteOffset] =\n    typeof timezoneString === \"string\"\n      ? getTimezoneOffsets(timezoneString)\n      : [0, 0];\n  const [hourString, minuteString, timeRest] = timeString.split(\":\");\n  const utcHours = Number.parseInt(hourString, 10) + hourOffset;\n  const utcMinutes = Number.parseInt(minuteString, 10) + minuteOffset;\n  const [secondString, optionalMillisecondString] = timeRest.split(\".\");\n  const utcSeconds = Number.parseInt(secondString, 10);\n  const utcMilliseconds = optionalMillisecondString\n    ? Number.parseInt(optionalMillisecondString, 10)\n    : 0;\n  const date = new Date(\n    Date.UTC(\n      utcFullYear,\n      utcMonth,\n      utcDate,\n      utcHours,\n      utcMinutes,\n      utcSeconds,\n      utcMilliseconds,\n    ),\n  );\n\n  // For the year, values from 0 to 99 map to the years 1900 to 1999. Since the serialisation\n  // always writes out the years fully, we should correct this to actually map to the years 0 to 99.\n  // See\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/Date#Individual_date_and_time_component_values\n  if (utcFullYear >= 0 && utcFullYear < 100) {\n    // Note that we base it on the calculated year, rather than the year that was actually read.\n    // This is because the year might actually differ from the value listed in the serialisation,\n    // i.e. when moving the timezone offset to UTC pushes it into a different year:\n    date.setUTCFullYear(date.getUTCFullYear() - 1900);\n  }\n  return date;\n}\n\n/**\n * @internal\n * @param value Value to serialise.\n * @returns String representation of `value`.\n * @see https://www.w3.org/TR/xmlschema-2/#date-lexical-representation\n */\nexport function serializeDate(value: Date): string {\n  const year = value.getFullYear();\n  const month = value.getMonth() + 1;\n  const day = value.getDate();\n  const [, timezone] = splitTimeFromTimezone(value.toISOString());\n\n  return `${year}-${String(month).padStart(2, \"0\")}-${String(day).padStart(\n    2,\n    \"0\",\n  )}${timezone}`;\n}\n\n/**\n * @internal\n * @param value Value to deserialise.\n * @returns Deserialized datetime, or null if the given value is not a valid serialised datetime.\n * @see https://www.w3.org/TR/xmlschema-2/#date-lexical-representation\n */\nexport function deserializeDate(literalString: string): Date | null {\n  // Date in the format described at\n  // https://www.w3.org/TR/xmlschema-2/#date-lexical-representation\n  // (without constraints on the value).\n  // -? - An optional leading `-`.\n  // \\d{4,}- - Four or more digits followed by a `-` representing the year. Example: \"3000-\".\n  // \\d\\d-\\d\\d - Two digits representing the month and two representing the day of the month,\n  //             separated by a `-`. Example: \"11-03\".\n  // (Z|(\\+|-)\\d\\d:\\d\\d) - Optionally, the letter Z indicating UTC, or a `+` or `-` followed by two digits for\n  //                       the hour offset and two for the minute offset, separated by a `:`.\n  //                       Example: \"+13:37\".\n\n  const dateRegEx = /-?\\d{4,}-\\d\\d-\\d\\d(Z|(\\+|-)\\d\\d:\\d\\d)?/;\n  if (!dateRegEx.test(literalString)) {\n    return null;\n  }\n\n  const signedDateString = literalString;\n  // The date string can optionally be prefixed with `-`,\n  // in which case the year is negative:\n  const [yearMultiplier, dateString] =\n    signedDateString.charAt(0) === \"-\"\n      ? [-1, signedDateString.substring(1)]\n      : [1, signedDateString];\n  const [yearString, monthString, dayAndTimezoneString] = dateString.split(\"-\");\n\n  const dayString =\n    dayAndTimezoneString.length > 2\n      ? dayAndTimezoneString.substring(0, 2)\n      : dayAndTimezoneString;\n\n  const utcFullYear = Number.parseInt(yearString, 10) * yearMultiplier;\n  const utcMonth = Number.parseInt(monthString, 10) - 1;\n  const utcDate = Number.parseInt(dayString, 10);\n  const hour = 12;\n\n  // setting at 12:00 avoids all timezones\n  const date = new Date(Date.UTC(utcFullYear, utcMonth, utcDate, hour));\n\n  // For the year, values from 0 to 99 map to the years 1900 to 1999. Since the serialisation\n  // always writes out the years fully, we should correct this to actually map to the years 0 to 99.\n  // See\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/Date#Individual_date_and_time_component_values\n  if (utcFullYear >= 0 && utcFullYear < 100) {\n    date.setUTCFullYear(date.getUTCFullYear() - 1900);\n  }\n  return date;\n}\n\n/**\n * @param timeString An XML Schema time string.\n * @returns A tuple [timeString, timezoneString].\n * @see https://www.w3.org/TR/xmlschema-2/#time-lexical-repr\n */\nfunction splitTimeFromTimezone(timeString: string): [string, string?] {\n  if (timeString.endsWith(\"Z\")) {\n    return [timeString.substring(0, timeString.length - 1), \"Z\"];\n  }\n  const splitOnPlus = timeString.split(\"+\");\n  const splitOnMinus = timeString.split(\"-\");\n\n  if (splitOnPlus.length === 1 && splitOnMinus.length === 1) {\n    return [splitOnPlus[0], undefined];\n  }\n\n  return splitOnPlus.length > splitOnMinus.length\n    ? [splitOnPlus[0], `+${splitOnPlus[1]}`]\n    : [splitOnMinus[0], `-${splitOnMinus[1]}`];\n}\n\n/**\n * @param timezoneString Lexical representation of a time zone in XML Schema.\n * @returns A tuple of the hour and minute offset of the time zone.\n * @see https://www.w3.org/TR/xmlschema-2/#dateTime-timezones\n */\nfunction getTimezoneOffsets(timezoneString: string): [number, number] {\n  if (timezoneString === \"Z\") {\n    return [0, 0];\n  }\n  const multiplier = timezoneString.charAt(0) === \"+\" ? 1 : -1;\n  const [hourString, minuteString] = timezoneString.substring(1).split(\":\");\n  const hours = Number.parseInt(hourString, 10);\n  const minutes = Number.parseInt(minuteString, 10);\n  return [hours * multiplier, minutes * multiplier];\n}\n\n/**\n * @internal\n * @param value Value to serialise.\n * @returns String representation of `value`.\n * @see https://www.w3.org/TR/xmlschema-2/#decimal-lexical-representation\n */\nexport function serializeDecimal(value: number): string {\n  return value.toString();\n}\n/**\n * @internal\n * @param value Value to deserialise.\n * @returns Deserialized decimal, or null if the given value is not a valid serialised decimal.\n * @see https://www.w3.org/TR/xmlschema-2/#decimal-lexical-representation\n */\nexport function deserializeDecimal(literalString: string): number | null {\n  const deserialized = Number.parseFloat(literalString);\n  if (Number.isNaN(deserialized)) {\n    return null;\n  }\n  return deserialized;\n}\n\n/**\n * @internal\n * @param value Value to serialise.\n * @returns String representation of `value`.\n */\nexport function serializeInteger(value: number): string {\n  return value.toString();\n}\n/**\n * @internal\n * @param value Value to deserialise.\n * @returns Deserialized integer, or null if the given value is not a valid serialised integer.\n */\nexport function deserializeInteger(literalString: string): number | null {\n  const deserialized = Number.parseInt(literalString, 10);\n  if (Number.isNaN(deserialized)) {\n    return null;\n  }\n  return deserialized;\n}\n\n/**\n * @internal\n * @param locale Locale to transform into a consistent format.\n */\nexport function normalizeLocale(locale: string): string {\n  return locale.toLowerCase();\n}\n\n/**\n * @internal Library users shouldn't need to be exposed to raw NamedNodes.\n * @param value The value that might or might not be a Named Node.\n * @returns Whether `value` is a Named Node.\n */\nexport function isNamedNode<T>(value: T | NamedNode): value is NamedNode {\n  return isTerm(value) && value.termType === \"NamedNode\";\n}\n\n/**\n * @internal Library users shouldn't need to be exposed to raw Literals.\n * @param value The value that might or might not be a Literal.\n * @returns Whether `value` is a Literal.\n */\nexport function isLiteral<T>(value: T | Literal): value is Literal {\n  return isTerm(value) && value.termType === \"Literal\";\n}\n\n/**\n * @internal Library users shouldn't need to be exposed to raw Terms.\n * @param value The value that might or might not be a Term.\n * @returns Whether `value` is a Term.\n */\nexport function isTerm<T>(value: T | Term): value is Term {\n  return (\n    value !== null &&\n    typeof value === \"object\" &&\n    typeof (value as Term).termType === \"string\" &&\n    typeof (value as Term).value === \"string\" &&\n    typeof (value as Term).equals === \"function\"\n  );\n}\n\n/**\n * @internal Library users shouldn't need to be exposed to LocalNodes.\n * @param value The value that might or might not be a Node with no known IRI yet.\n * @returns Whether `value` is a Node with no known IRI yet.\n */\nexport function isLocalNode<T>(\n  value: T | Quad_Subject | LocalNode,\n): value is LocalNode {\n  return isNamedNode(value) && isLocalNodeIri(value.value);\n}\n\n/**\n * Ensure that a given value is a valid URL.\n *\n * @internal Library users shouldn't need to be exposed to raw URLs.\n * @param iri The value of which to verify that it is a valid URL.\n */\nexport function internal_isValidUrl(iri: Iri | IriString): iri is Iri {\n  const iriString = internal_toIriString(iri);\n  // If the runtime environment supports URL, instantiate one.\n  // If the given IRI is not a valid URL, it will throw an error.\n  // See: https://developer.mozilla.org/en-US/docs/Web/API/URL\n  /* istanbul ignore if [URL is available in our testing environment, so we cannot test the alternative] */\n  if (typeof URL !== \"function\") {\n    // If we can't validate the URL, do not throw an error:\n    return true;\n  }\n  try {\n    // eslint-disable-next-line no-new\n    new URL(iriString);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Ensure that a given value is a Named Node.\n *\n * If the given parameter is a Named Node already, it will be returned as-is. If it is a string, it\n * will check whether it is a valid IRI. If not, it will throw an error; otherwise a Named Node\n * representing the given IRI will be returned.\n *\n * @internal Library users shouldn't need to be exposed to raw NamedNodes.\n * @param iri The IRI that should be converted into a Named Node, if it isn't one yet.\n */\nexport function asNamedNode(iri: Iri | IriString): NamedNode {\n  if (!internal_isValidUrl(iri)) {\n    throw new ValidUrlExpectedError(iri);\n  }\n  if (isNamedNode(iri)) {\n    return iri;\n  }\n  return DataFactory.namedNode(iri);\n}\n\n/**\n * @internal Utility method; library users should not need to interact with LocalNodes directly.\n * @param localNode The LocalNode to resolve to a NamedNode.\n * @param resourceIri The Resource in which the Node will be saved.\n */\nexport function resolveIriForLocalNode(\n  localNode: LocalNode,\n  resourceIri: IriString,\n): NamedNode {\n  return DataFactory.namedNode(\n    resolveLocalIri(getLocalNodeName(localNode.value), resourceIri),\n  );\n}\n\n/**\n * @internal API for internal use only.\n * @param name The name identifying a Thing.\n * @param resourceIri The Resource in which the Thing can be found.\n */\nexport function resolveLocalIri(\n  name: string,\n  resourceIri: IriString,\n): IriString {\n  /* istanbul ignore if [The URL interface is available in the testing environment, so we cannot test this] */\n  if (typeof URL !== \"function\") {\n    throw new Error(\n      \"The URL interface is not available, so an IRI cannot be determined.\",\n    );\n  }\n  const thingIri = new URL(resourceIri);\n  thingIri.hash = name;\n  return thingIri.href;\n}\n\n/**\n * This error is thrown when a given value is not a proper URL.\n */\nexport class ValidUrlExpectedError extends SolidClientError {\n  public readonly receivedValue: unknown;\n\n  constructor(receivedValue: unknown) {\n    const value = isNamedNode(receivedValue)\n      ? receivedValue.value\n      : receivedValue;\n    const message = `Expected a valid URL, but received: [${value}].`;\n    super(message);\n    this.receivedValue = value;\n  }\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport { DataFactory } from \"n3\";\nimport type * as RdfJs from \"@rdfjs/types\";\nimport type {\n  BlankNodeId,\n  Graph,\n  ImmutableDataset,\n  Objects,\n  Predicates,\n  Subject,\n} from \"./rdf.internal\";\nimport {\n  freeze,\n  getBlankNodeId,\n  getBlankNodeValue,\n  isBlankNodeId,\n} from \"./rdf.internal\";\nimport type { ToRdfJsOptions } from \"./rdfjs\";\nimport type { IriString } from \"./interfaces\";\nimport { xmlSchemaTypes } from \"./datatypes\";\n\nexport { DataFactory };\n\ntype QuadParseOptions = Partial<{\n  otherQuads: RdfJs.Quad[];\n  chainBlankNodes: RdfJs.BlankNode[];\n}>;\n\nexport function addRdfJsQuadToDataset(\n  dataset: ImmutableDataset,\n  quad: RdfJs.Quad,\n  quadParseOptions: QuadParseOptions = {},\n): ImmutableDataset {\n  const supportedGraphTypes: Array<typeof quad.graph.termType> = [\n    \"NamedNode\",\n    \"DefaultGraph\",\n  ];\n  if (!supportedGraphTypes.includes(quad.graph.termType)) {\n    throw new Error(\n      `Cannot parse Quads with nodes of type [${quad.graph.termType}] as their Graph node.`,\n    );\n  }\n  const graphId =\n    quad.graph.termType === \"DefaultGraph\" ? \"default\" : quad.graph.value;\n\n  const graph: Graph = dataset.graphs[graphId] ?? {};\n  return freeze({\n    ...dataset,\n    graphs: freeze({\n      ...dataset.graphs,\n      [graphId]: addRdfJsQuadToGraph(graph, quad, quadParseOptions),\n    }),\n  });\n}\n\nfunction addRdfJsQuadToGraph(\n  graph: Graph,\n  quad: RdfJs.Quad,\n  quadParseOptions: QuadParseOptions,\n): Graph {\n  const supportedSubjectTypes: Array<typeof quad.subject.termType> = [\n    \"NamedNode\",\n    \"BlankNode\",\n  ];\n  if (!supportedSubjectTypes.includes(quad.subject.termType)) {\n    throw new Error(\n      `Cannot parse Quads with nodes of type [${quad.subject.termType}] as their Subject node.`,\n    );\n  }\n\n  const subjectIri =\n    quad.subject.termType === \"BlankNode\"\n      ? `_:${quad.subject.value}`\n      : quad.subject.value;\n\n  const subject: Subject = graph[subjectIri] ?? {\n    type: \"Subject\",\n    url: subjectIri,\n    predicates: {},\n  };\n  return freeze({\n    ...graph,\n    [subjectIri]: addRdfJsQuadToSubject(subject, quad, quadParseOptions),\n  });\n}\n\nfunction addRdfJsQuadToSubject(\n  subject: Subject,\n  quad: RdfJs.Quad,\n  quadParseOptions: QuadParseOptions,\n): Subject {\n  return freeze({\n    ...subject,\n    predicates: addRdfJsQuadToPredicates(\n      subject.predicates,\n      quad,\n      quadParseOptions,\n    ),\n  });\n}\n\nfunction addRdfJsQuadToPredicates(\n  predicates: Predicates,\n  quad: RdfJs.Quad,\n  quadParseOptions: QuadParseOptions,\n): Predicates {\n  const supportedPredicateTypes: Array<typeof quad.predicate.termType> = [\n    \"NamedNode\",\n  ];\n  if (!supportedPredicateTypes.includes(quad.predicate.termType)) {\n    throw new Error(\n      `Cannot parse Quads with nodes of type [${quad.predicate.termType}] as their Predicate node.`,\n    );\n  }\n  const predicateIri = quad.predicate.value;\n  const objects = predicates[predicateIri] ?? {};\n  return freeze({\n    ...predicates,\n    [predicateIri]: addRdfJsQuadToObjects(objects, quad, quadParseOptions),\n  });\n}\n\nfunction addRdfJsQuadToObjects(\n  objects: Objects,\n  quad: RdfJs.Quad,\n  quadParseOptions: QuadParseOptions,\n): Objects {\n  if (quad.object.termType === \"NamedNode\") {\n    const namedNodes = freeze([\n      ...(objects.namedNodes ?? []),\n      quad.object.value,\n    ]);\n    return freeze({\n      ...objects,\n      namedNodes,\n    });\n  }\n\n  if (quad.object.termType === \"Literal\") {\n    if (quad.object.datatype.value === xmlSchemaTypes.langString) {\n      const locale = quad.object.language.toLowerCase();\n      const thisLocaleStrings = freeze([\n        ...(objects.langStrings?.[locale] ?? []),\n        quad.object.value,\n      ]);\n      const langStrings = freeze({\n        ...(objects.langStrings ?? {}),\n        [locale]: thisLocaleStrings,\n      });\n      return freeze({\n        ...objects,\n        langStrings,\n      });\n    }\n\n    // If the Object is a non-langString Literal\n    const thisTypeValues = freeze([\n      ...(objects.literals?.[quad.object.datatype.value] ?? []),\n      quad.object.value,\n    ]);\n    const literals = freeze({\n      ...(objects.literals ?? {}),\n      [quad.object.datatype.value]: thisTypeValues,\n    });\n    return freeze({\n      ...objects,\n      literals,\n    });\n  }\n\n  if (quad.object.termType === \"BlankNode\") {\n    const blankNodePredicates = getPredicatesForBlankNode(\n      quad.object,\n      quadParseOptions,\n    );\n    const blankNodes = freeze([\n      ...(objects.blankNodes ?? []),\n      blankNodePredicates,\n    ]);\n    return freeze({\n      ...objects,\n      blankNodes,\n    });\n  }\n\n  throw new Error(\n    `Objects of type [${quad.object.termType}] are not supported.`,\n  );\n}\n\nfunction getPredicatesForBlankNode(\n  node: RdfJs.BlankNode,\n  quadParseOptions: QuadParseOptions,\n): Predicates | BlankNodeId {\n  const chainBlankNodes = quadParseOptions.chainBlankNodes ?? [];\n  if (\n    chainBlankNodes.find((chainBlankNode) => chainBlankNode.equals(node)) ===\n    undefined\n  ) {\n    // If this Blank Node is not used to provide nested values for another Subject,\n    // just return its identifier.\n    // That identifier will also be listed among the Subjects in the Graph.\n    return getBlankNodeId(node);\n  }\n\n  /* istanbul ignore next: If there are chain nodes, there will always be other Quads, so the `?? []` can't be reached: */\n  const quads = quadParseOptions.otherQuads ?? [];\n  const quadsWithNodeAsSubject = quads.filter((quad) =>\n    quad.subject.equals(node),\n  );\n\n  // First add the Quads with regular Objects\n  const predicates = quadsWithNodeAsSubject\n    .filter((quad) => !isBlankNode(quad.object))\n    .reduce((predicatesAcc, quad) => {\n      const supportedPredicateTypes: Array<typeof quad.predicate.termType> = [\n        \"NamedNode\",\n      ];\n      if (!supportedPredicateTypes.includes(quad.predicate.termType)) {\n        throw new Error(\n          `Cannot parse Quads with nodes of type [${quad.predicate.termType}] as their Predicate node.`,\n        );\n      }\n      const objects: Objects = predicatesAcc[quad.predicate.value] ?? {};\n      return freeze({\n        ...predicatesAcc,\n        [quad.predicate.value]: addRdfJsQuadToObjects(\n          objects,\n          quad,\n          quadParseOptions,\n        ),\n      });\n    }, {} as Predicates);\n\n  // And then also add the Quads that have another Blank Node as the Object\n  // in addition to the Blank Node `node` as the Subject:\n  const blankNodeObjectQuads = quadsWithNodeAsSubject.filter((quad) =>\n    isBlankNode(quad.object),\n  );\n  return blankNodeObjectQuads.reduce((predicatesAcc, quad) => {\n    const supportedPredicateTypes: Array<typeof quad.predicate.termType> = [\n      \"NamedNode\",\n    ];\n    if (!supportedPredicateTypes.includes(quad.predicate.termType)) {\n      throw new Error(\n        `Cannot parse Quads with nodes of type [${quad.predicate.termType}] as their Predicate node.`,\n      );\n    }\n    /* istanbul ignore next: The `?? {}` doesn't get hit; presumably it's initialised above. */\n    const objects: Objects = predicatesAcc[quad.predicate.value] ?? {};\n    /* istanbul ignore next: The `?? []` doesn't get hit; presumably it's initialised above. */\n    const blankNodes = objects.blankNodes ?? [];\n    return freeze({\n      ...predicatesAcc,\n      // The BlankNode assertions are valid because we filtered on BlankNodes above:\n      [quad.predicate.value]: {\n        ...objects,\n        blankNodes: [\n          ...blankNodes,\n          getPredicatesForBlankNode(\n            quad.object as RdfJs.BlankNode,\n            quadParseOptions,\n          ),\n        ],\n      },\n    });\n  }, predicates);\n}\n\n/**\n * Given an array of Quads, returns all Blank Nodes that are used in a single chain of Nodes.\n *\n * This allows you to obtain which Blank Nodes are involved in e.g. RDF lists.\n * This is useful because those can be represented as nested data that will have\n * a deterministic structure, whereas a representation of Blank Nodes that\n * create a cycle or are re-used will need ad-hoc, non-deterministic identifiers\n * to allow for representation without inifinite nesting.\n */\nexport function getChainBlankNodes(quads: RdfJs.Quad[]): RdfJs.BlankNode[] {\n  // All Blank Nodes that occur in Subject position:\n  const blankNodeSubjects = quads\n    .map((quad) => quad.subject)\n    .filter(isBlankNode);\n  // All Blank Nodes that occur in Object position:\n  const blankNodeObjects = quads.map((quad) => quad.object).filter(isBlankNode);\n  // Makes sure that all given Nodes are the same,\n  // which will be used to verify that a set of Quads all have the same Subject:\n  function everyNodeTheSame(nodes: RdfJs.Term[]): boolean {\n    // This could potentially be made more performant by mapping every term\n    // to their value and using native JS comparisons, assuming every node is\n    // either a Blank or a Named Node.\n    return nodes.every((otherNode) =>\n      nodes.every((anotherNode) => otherNode.equals(anotherNode)),\n    );\n  }\n\n  // Get all Blank Nodes that are part of a cycle in the graph:\n  const cycleBlankNodes: RdfJs.BlankNode[] = [];\n  blankNodeObjects.forEach((blankNodeObject) => {\n    cycleBlankNodes.push(...getCycleBlankNodes(blankNodeObject, quads));\n  });\n\n  // Get Blank Nodes that are used to provide nested values for a single Subject,\n  // which we'll represent as nested values as well\n  // (this allows us to avoid generating a non-deterministic, ad-hoc identifier\n  // for those Blank Nodes).\n  // We'll do this by taking all Blank Nodes in the given Quads...\n  const chainBlankNodes = blankNodeSubjects\n    .concat(blankNodeObjects)\n    .filter((blankNode) => {\n      // ....removing those Blank Nodes that are part of a cycle...\n      if (\n        cycleBlankNodes.some((cycleBlankNode) =>\n          cycleBlankNode.equals(blankNode),\n        )\n      ) {\n        return false;\n      }\n      // ...and then returning only those Blank Nodes that only occur in the\n      // Object position for a single Subject, i.e. that are part of a single\n      // chain:\n      const subjectsWithThisNodeAsObject = quads\n        .filter((quad) => quad.object.equals(blankNode))\n        .map((quad) => quad.subject);\n      return (\n        subjectsWithThisNodeAsObject.length > 0 &&\n        everyNodeTheSame(subjectsWithThisNodeAsObject)\n      );\n    });\n\n  return chainBlankNodes;\n}\n\nexport function toRdfJsQuads(\n  dataset: ImmutableDataset,\n  options: ToRdfJsOptions = {},\n): RdfJs.Quad[] {\n  const quads: RdfJs.Quad[] = [];\n  const dataFactory = options.dataFactory ?? DataFactory;\n\n  Object.keys(dataset.graphs).forEach((graphIri: IriString) => {\n    const graph = dataset.graphs[graphIri];\n    const graphNode =\n      graphIri === \"default\"\n        ? dataFactory.defaultGraph()\n        : dataFactory.namedNode(graphIri);\n\n    Object.keys(graph).forEach((subjectIri) => {\n      const { predicates } = graph[subjectIri];\n      const subjectNode = isBlankNodeId(subjectIri)\n        ? dataFactory.blankNode(getBlankNodeValue(subjectIri))\n        : dataFactory.namedNode(subjectIri);\n      quads.push(\n        ...subjectToRdfJsQuads(predicates, subjectNode, graphNode, options),\n      );\n    });\n  });\n\n  return quads;\n}\n\nexport function subjectToRdfJsQuads(\n  predicates: Predicates,\n  subjectNode: RdfJs.NamedNode | RdfJs.BlankNode,\n  graphNode: RdfJs.NamedNode | RdfJs.DefaultGraph,\n  options: ToRdfJsOptions = {},\n): RdfJs.Quad[] {\n  const quads: RdfJs.Quad[] = [];\n  const dataFactory = options.dataFactory ?? DataFactory;\n\n  Object.keys(predicates).forEach((predicateIri) => {\n    const predicateNode = dataFactory.namedNode(predicateIri);\n    const langStrings = predicates[predicateIri].langStrings ?? {};\n    const namedNodes = predicates[predicateIri].namedNodes ?? [];\n    const literals = predicates[predicateIri].literals ?? {};\n    const blankNodes = predicates[predicateIri].blankNodes ?? [];\n\n    const literalTypes = Object.keys(literals);\n    literalTypes.forEach((typeIri) => {\n      const typeNode = dataFactory.namedNode(typeIri);\n      const literalValues = literals[typeIri];\n      literalValues.forEach((value) => {\n        const literalNode = dataFactory.literal(value, typeNode);\n        quads.push(\n          dataFactory.quad(\n            subjectNode,\n            predicateNode,\n            literalNode,\n            graphNode,\n          ) as RdfJs.Quad,\n        );\n      });\n    });\n\n    const locales = Object.keys(langStrings);\n    locales.forEach((locale) => {\n      const localeValues = langStrings[locale];\n      localeValues.forEach((value) => {\n        const langStringNode = dataFactory.literal(value, locale);\n        quads.push(\n          dataFactory.quad(\n            subjectNode,\n            predicateNode,\n            langStringNode,\n            graphNode,\n          ) as RdfJs.Quad,\n        );\n      });\n    });\n\n    namedNodes.forEach((namedNodeIri) => {\n      const node = dataFactory.namedNode(namedNodeIri);\n      quads.push(\n        dataFactory.quad(\n          subjectNode,\n          predicateNode,\n          node,\n          graphNode,\n        ) as RdfJs.Quad,\n      );\n    });\n\n    blankNodes.forEach((blankNodeIdOrPredicates) => {\n      if (isBlankNodeId(blankNodeIdOrPredicates)) {\n        const blankNode = dataFactory.blankNode(\n          getBlankNodeValue(blankNodeIdOrPredicates),\n        );\n        quads.push(\n          dataFactory.quad(\n            subjectNode,\n            predicateNode,\n            blankNode,\n            graphNode,\n          ) as RdfJs.Quad,\n        );\n      } else {\n        const node = dataFactory.blankNode();\n        const blankNodeObjectQuad = dataFactory.quad(\n          subjectNode,\n          predicateNode,\n          node,\n          graphNode,\n        ) as RdfJs.Quad;\n        const blankNodeSubjectQuads = subjectToRdfJsQuads(\n          blankNodeIdOrPredicates,\n          node,\n          graphNode,\n        );\n        quads.push(blankNodeObjectQuad);\n        quads.push(...blankNodeSubjectQuads);\n      }\n    });\n  });\n\n  return quads;\n}\n\n/**\n * A recursive function that finds all Blank Nodes in an array of Quads that create a cycle in the graph.\n *\n * This function will traverse the graph starting from `currentNode`, keeping\n * track of all the Blank Nodes it encounters twice while doing so, and\n * returning those.\n */\nfunction getCycleBlankNodes(\n  currentNode: RdfJs.BlankNode,\n  quads: RdfJs.Quad[],\n  traversedBlankNodes: RdfJs.BlankNode[] = [],\n): RdfJs.BlankNode[] {\n  // If we've encountered `currentNode` before, all the Blank Nodes we've\n  // encountered so far are part of a cycle. Return those.\n  if (\n    traversedBlankNodes.find((traversedBlankNode) =>\n      traversedBlankNode.equals(currentNode),\n    ) !== undefined\n  ) {\n    return traversedBlankNodes;\n  }\n\n  // Find all Blank Nodes that are connected to `currentNode`:\n  const blankNodeObjects = quads\n    .filter(\n      (quad) => quad.subject.equals(currentNode) && isBlankNode(quad.object),\n    )\n    .map((quad) => quad.object as RdfJs.BlankNode);\n\n  // If no Blank Nodes are connected to `currentNode`, and `currentNode` is not\n  // part of a cycle, we're done; the currently traversed Nodes do not form a\n  // cycle:\n  if (blankNodeObjects.length === 0) {\n    return [];\n  }\n\n  // Store that we've traversed `currentNode`, then move on to all the Blank\n  // Nodes connected to it, which will then take up the role of `currentNode`:\n  const nextTraversedNodes = [...traversedBlankNodes, currentNode];\n  const cycleBlankNodeArrays = blankNodeObjects.map((nextNode) =>\n    getCycleBlankNodes(nextNode, quads, nextTraversedNodes),\n  );\n  // Collect all the cycle Blank Nodes found in those traverals,\n  // then return them:\n  const allCycleBlankNodes: RdfJs.BlankNode[] = [];\n  for (const cycleBlankNodes of cycleBlankNodeArrays) {\n    allCycleBlankNodes.push(...cycleBlankNodes);\n  }\n  return allCycleBlankNodes;\n}\n\nfunction isBlankNode(term: RdfJs.Term): term is RdfJs.BlankNode {\n  return term.termType === \"BlankNode\";\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { Quad } from \"@rdfjs/types\";\nimport { Parser as N3Parser, Writer as N3Writer } from \"n3\";\nimport type { IriString } from \"../interfaces\";\nimport { DataFactory } from \"../rdfjs.internal\";\nimport { getSourceUrl } from \"../resource/resource\";\nimport type { Parser } from \"../resource/solidDataset\";\n\n/**\n * ```{note} This function is still experimental and subject to change, even\n * in a non-major release.\n * ```\n * This returns a parser that transforms a JSON-LD string into a set of RDFJS quads.\n *\n * @returns A Parser object.\n * @since 1.15.0\n */\nexport const getTurtleParser = (): Parser => {\n  const onQuadCallbacks: Array<Parameters<Parser[\"onQuad\"]>[0]> = [];\n  const onCompleteCallbacks: Array<Parameters<Parser[\"onComplete\"]>[0]> = [];\n  const onErrorCallbacks: Array<Parameters<Parser[\"onError\"]>[0]> = [];\n\n  return {\n    onQuad: (callback) => {\n      onQuadCallbacks.push(callback);\n    },\n    onError: (callback) => {\n      onErrorCallbacks.push(callback);\n    },\n    onComplete: (callback) => {\n      onCompleteCallbacks.push(callback);\n    },\n    parse: (source, resourceInfo) => {\n      getParser(getSourceUrl(resourceInfo)).parse(source, (error, quad) => {\n        if (error) {\n          onErrorCallbacks.forEach((callback) => callback(error));\n        } else if (quad) {\n          onQuadCallbacks.forEach((callback) => callback(quad));\n        } else {\n          onCompleteCallbacks.forEach((callback) => callback());\n        }\n      });\n    },\n  };\n};\n\nfunction getParser(baseIri: IriString) {\n  return new N3Parser({ format: \"text/turtle\", baseIRI: baseIri });\n}\n\n/**\n * @param quads Triples that should be serialised to Turtle\n * @internal Utility method for internal use; not part of the public API.\n */\nexport async function triplesToTurtle(\n  quads: Quad[],\n  options?: Partial<{ prefixes: Record<string, string> }>,\n): Promise<string> {\n  const format = \"text/turtle\";\n  const writer = new N3Writer({ format, prefixes: options?.prefixes });\n  // Remove any potentially lingering references to Named Graphs in Quads;\n  // they'll be determined by the URL the Turtle will be sent to:\n  const triples = quads.map((quad) =>\n    DataFactory.quad(quad.subject, quad.predicate, quad.object, undefined),\n  );\n  writer.addQuads(triples);\n  const writePromise = new Promise<string>((resolve, reject) => {\n    writer.end((error, result) => {\n      /* istanbul ignore if [n3.js doesn't actually pass an error nor a result, apparently: https://github.com/rdfjs/N3.js/blob/62682e48c02d8965b4d728cb5f2cbec6b5d1b1b8/src/N3Writer.js#L290] */\n      if (error) {\n        reject(error);\n      } else {\n        resolve(result);\n      }\n    });\n  });\n\n  const rawTurtle = await writePromise;\n  return rawTurtle;\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nexport const prefixes = {\n  acl: \"http://www.w3.org/ns/auth/acl#\",\n  acp: \"http://www.w3.org/ns/solid/acp#\",\n  cc: \"http://creativecommons.org/ns#\",\n  cert: \"http://www.w3.org/ns/auth/cert#\",\n  csvw: \"http://www.w3.org/ns/csvw#\",\n  current: \"#\",\n  dc: \"http://purl.org/dc/terms/\",\n  dcam: \"http://purl.org/dc/dcam/\",\n  dcat: \"http://www.w3.org/ns/dcat#\",\n  dctype: \"http://purl.org/dc/dcmitype/\",\n  foaf: \"http://xmlns.com/foaf/0.1/\",\n  ldp: \"http://www.w3.org/ns/ldp#\",\n  owl: \"http://www.w3.org/2002/07/owl#\",\n  posixstat: \"http://www.w3.org/ns/posix/stat#\",\n  rdf: \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n  rdfs: \"http://www.w3.org/2000/01/rdf-schema#\",\n  schema: \"https://schema.org/\",\n  shacl: \"http://www.w3.org/ns/shacl#\",\n  skos: \"http://www.w3.org/2004/02/skos/core#\",\n  skosxl: \"http://www.w3.org/2008/05/skos-xl#\",\n  solid: \"http://www.w3.org/ns/solid/terms#\",\n  swapdoc: \"http://www.w3.org/2000/10/swap/pim/doc#\",\n  ui: \"http://www.w3.org/ns/ui#\",\n  vann: \"http://purl.org/vocab/vann/\",\n  vcard: \"http://www.w3.org/2006/vcard/ns#\",\n  ws: \"http://www.w3.org/ns/pim/space#\",\n  xsd: \"http://www.w3.org/2001/XMLSchema#\",\n};\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\n// Note: Different RDF/JS implementations can, of course, behave differently.\n// Some important differences identified so far:\n//   1. RDF String Literals:\n//      The DataFactory signature for creating an RDF literal is:\n//         literal(value: string | number, languageOrDatatype?: string | RDF.NamedNode): Literal\n//\n//       The @rdfjs/data-model implementation checks if the 2nd param is a\n//      string, and if so it looks for a ':' character in that string. If\n//      present it considers the value a Datatype IRI, and so wraps the string\n//      in a call to DataFactory.namedNode().\n//\n//       The N3 implementation checks if the 2nd param is a string, and if so\n//      considers the value a language tag. If and only if the 2nd param is\n//      explicitly passed in as a NamedNode will it be treated as a Datatype\n//      IRI.\nimport type {\n  DataFactory,\n  DatasetCore,\n  DatasetCoreFactory,\n} from \"@rdfjs/types\";\nimport { rdfJsDataset, type ImmutableDataset } from \"./rdf.internal\";\nimport {\n  addRdfJsQuadToDataset,\n  getChainBlankNodes,\n  toRdfJsQuads,\n} from \"./rdfjs.internal\";\n\n/**\n * Convert an RDF/JS Dataset into a [[SolidDataset]]\n *\n * Parse an RDF/JS\n * {@link https://rdf.js.org/dataset-spec/#datasetcore-interface DatasetCore},\n * into a [[SolidDataset]]. Note that, when saving the returned SolidDataset to\n * a Solid Pod, only Quads in the Default Graph will be stored.\n *\n * @param rdfJsDataset The source RDF/JS Dataset.\n * @returns A [[SolidDataset]] containing the same data as the given RDF/JS Dataset.\n * @since 1.9.0\n */\nexport function fromRdfJsDataset(rdfJsDataset: DatasetCore): ImmutableDataset {\n  const dataset: ImmutableDataset = {\n    graphs: { default: {} },\n    type: \"Dataset\",\n  };\n\n  const quads = Array.from(rdfJsDataset);\n\n  const chainBlankNodes = getChainBlankNodes(quads);\n\n  // Quads with chain Blank Nodes as their Subject will be parsed when those\n  // Blank Nodes are referred to in an Object. See `addRdfJsQuadToObjects`.\n  const quadsWithoutChainBlankNodeSubjects = quads.filter((quad) =>\n    chainBlankNodes.every(\n      (chainBlankNode) => !chainBlankNode.equals(quad.subject),\n    ),\n  );\n\n  return quadsWithoutChainBlankNodeSubjects.reduce(\n    (datasetAcc, quad) =>\n      addRdfJsQuadToDataset(datasetAcc, quad, {\n        otherQuads: quads,\n        chainBlankNodes,\n      }),\n    dataset,\n  );\n}\n\nexport type ToRdfJsOptions = Partial<{\n  dataFactory: DataFactory;\n  datasetFactory: DatasetCoreFactory;\n}>;\n/**\n * Convert a [[SolidDataset]] into an RDF/JS Dataset\n *\n * Export a [[SolidDataset]] into an RDF/JS\n * {@link https://rdf.js.org/dataset-spec/#datasetcore-interface DatasetCore}.\n *\n * @param set A [[SolidDataset]] to export into an RDF/JS Dataset.\n * @param options Optional parameter that allows you to pass in your own RDF/JS DataFactory or DatasetCoreFactory.\n * @returns An RDF/JS Dataset containing the data from the given SolidDataset.\n * @since 1.9.0\n */\nexport function toRdfJsDataset(\n  set: ImmutableDataset,\n  options: ToRdfJsOptions = {},\n): DatasetCore {\n  const datasetFactory = options.datasetFactory?.dataset ?? rdfJsDataset;\n  return datasetFactory(toRdfJsQuads(set, options));\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport { NamedNode, Writer } from \"n3\";\nimport type { SolidDataset } from \"../interfaces\";\nimport { prefixes as defaultPrefixes } from \"./prefixes\";\nimport { toRdfJsDataset } from \"../rdfjs\";\n\n/**\n * A function to serialise a Solid Dataset as Turtle\n *\n * @param dataset The Dataset to serialize as Turtle\n * @param options.prefixes The Prefixes to use for Turtle serialisation (defaulting to a set of well known prefixes)\n * @param options.thing Restricts serialisation to the part of a dataset related to the thing\n * @returns RDF serialised as Turtle\n * @since 1.20.0\n */\nexport async function solidDatasetAsTurtle(\n  dataset: SolidDataset,\n  options?: {\n    prefixes?: Record<string, string>;\n    thing?: string;\n  },\n): Promise<string> {\n  const { prefixes = defaultPrefixes, thing } = { ...options };\n  const writer = new Writer({ format: \"application/turtle\", prefixes });\n  const subject = thing ? new NamedNode(thing) : undefined;\n\n  // If the subject is undefined, all the triples match.\n  for (const quad of toRdfJsDataset(dataset).match(subject)) {\n    writer.addQuad(quad);\n  }\n\n  return new Promise<string>((resolve, reject) => {\n    writer.end((error, result) => {\n      /* istanbul ignore next */\n      if (error) {\n        reject(error);\n      } else {\n        resolve(result);\n      }\n    });\n  });\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nexport { getJsonLdParser } from \"./jsonLd\";\nexport { getTurtleParser } from \"./turtle\";\nexport { solidDatasetAsTurtle } from \"./solidDatasetAsTurtle\";\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { File as NodeFile } from \"buffer\";\nimport type {\n  File as BlobFile,\n  UploadRequestInit,\n  WithResourceInfo,\n  Url,\n  UrlString,\n  WithServerResourceInfo,\n} from \"../interfaces\";\nimport { hasResourceInfo } from \"../interfaces\";\nimport { internal_toIriString, normalizeUrl } from \"../interfaces.internal\";\nimport { getSourceIri, FetchError } from \"./resource\";\nimport {\n  internal_cloneResource,\n  internal_isUnsuccessfulResponse,\n  internal_parseResourceInfo,\n} from \"./resource.internal\";\n\n/**\n * Options when fetching a file from a Pod.\n *\n * Available options:\n * - `fetch`: A custom `fetch` function with the same signature as\n *   [`fetch`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch).\n *   This will be used to execute the actual requests. This option can be used to, for example,\n *   attach credentials to requests that need authentication.\n */\nexport type GetFileOptions = {\n  fetch: typeof fetch;\n  /** @internal */\n  init: UploadRequestInit;\n};\n\nconst RESERVED_HEADERS = [\"Slug\", \"If-None-Match\", \"Content-Type\"];\n\n/**\n * Some of the headers must be set by the library, rather than directly.\n */\nfunction containsReserved(header: Record<string, string>): boolean {\n  return RESERVED_HEADERS.some((reserved) => header[reserved] !== undefined);\n}\n\n/**\n * Retrieves a file from a URL and returns the file as a blob.\n *\n * For example:\n *\n * ```\n * const fileBlob = await getFile(\"https://pod.example.com/some/file\", { fetch: fetch });\n * ```\n *\n * For additional examples, see\n * [Read/Write Files](https://docs.inrupt.com/developer-tools/javascript/client-libraries/tutorial/read-write-files/#retrieve-a-file).\n *\n * @param fileUrl The URL of the file to return\n * @param options Fetching options: a custom fetcher and/or headers.\n * @returns The file as a blob.\n */\nexport async function getFile(\n  fileUrl: Url | UrlString,\n  options?: Partial<GetFileOptions>,\n): Promise<BlobFile & WithServerResourceInfo> {\n  const normalizedUrl = normalizeUrl(internal_toIriString(fileUrl), {\n    trailingSlash: false,\n  });\n  const response = await (options?.fetch ?? fetch)(\n    normalizedUrl,\n    options?.init,\n  );\n  if (internal_isUnsuccessfulResponse(response)) {\n    throw new FetchError(\n      `Fetching the File failed: [${response.status}] [${\n        response.statusText\n      }] ${await response.text()}.`,\n      response,\n    );\n  }\n  const resourceInfo = internal_parseResourceInfo(response);\n  const data = await response.blob();\n  const fileWithResourceInfo: BlobFile & WithServerResourceInfo = Object.assign(\n    data,\n    {\n      internal_resourceInfo: resourceInfo,\n    },\n  );\n\n  return fileWithResourceInfo;\n}\n\n/**\n * Deletes a file at a given URL.\n *\n * For example:\n *\n * ```\n * await deleteFile( \"https://pod.example.com/some/file\", { fetch: fetch });\n * ```\n *\n * For additional examples, see\n * [Read/Write Files](https://docs.inrupt.com/developer-tools/javascript/client-libraries/tutorial/read-write-files/#delete-a-file).\n *\n * @param file The URL of the file to delete or the file itself (if it has ResourceInfo).\n */\nexport async function deleteFile(\n  file: Url | UrlString | WithResourceInfo,\n  options?: Partial<GetFileOptions>,\n): Promise<void> {\n  const url = hasResourceInfo(file)\n    ? internal_toIriString(getSourceIri(file))\n    : normalizeUrl(internal_toIriString(file), { trailingSlash: false });\n  const response = await (options?.fetch ?? fetch)(url, {\n    ...options?.init,\n    method: \"DELETE\",\n  });\n\n  if (internal_isUnsuccessfulResponse(response)) {\n    throw new FetchError(\n      `Deleting the file at [${url}] failed: [${response.status}] [${\n        response.statusText\n      }] ${await response.text()}.`,\n      response,\n    );\n  }\n}\n\n/**\n * Options available when saving a file (extends the options available when\n * writing a file: [[WriteFileOptions]]).\n *\n */\ntype SaveFileOptions = WriteFileOptions & {\n  /**\n   * This option can be used as a hint to the server in how to name a new file.\n   * Note: the server is still free to choose a completely different, unrelated\n   * name if it chooses.\n   * @deprecated Provide a `File` input with a `name` property as input to `saveFileInContainer` instead.\n   */\n  slug?: string;\n};\n\n/**\n * Saves a file in an existing folder/Container associated with the given URL.\n *\n * For example:\n *\n * ```\n * const savedFile = await saveFileInContainer(\n *   \"https://pod.example.com/some/existing/container/\",\n *   new File([\"This is a plain piece of text\"], \"suggestedFileName.txt\", { type: \"text/plain\" }),\n *   { fetch: fetch }\n * );\n * ```\n *\n * For additional example, see\n * [Read/Write Files](https://docs.inrupt.com/developer-tools/javascript/client-libraries/tutorial/read-write-files/#save-a-file-into-an-existing-container).\n *\n * In the `options` parameter,\n *\n * - You can suggest a file name in the `slug` field.  However, the Solid\n *   Server may or may not use the suggested `slug` as the file name.\n *\n * - *Recommended:* You can specify the [media type](https://developer.mozilla.org/en-US/docs/Glossary/MIME_type)\n *   of the file in the `contentType`.  If unspecified, the function uses the default type of\n *   `application/octet-stream`, indicating a binary data file.\n *\n * The function saves a file into an *existing* Container. If the\n * Container does not exist, either:\n * - Create the Container first using [[createContainerAt]], and then\n *   use the function, or\n * - Use [[overwriteFile]] to save the file. [[overwriteFile]] creates\n *   the Containers in the saved file path as needed.\n *\n * Users who only have `Append` but not `Write` access to a Container\n * can use [[saveFileInContainer]] to save new files to the Container.\n * That is, [[saveFileInContainer]] is useful in situations where users\n * can add new files to a Container but not change existing files in\n * the Container, such as users given access to send notifications to\n * another's Pod but not to view or delete existing notifications in that Pod.\n *\n * Users with `Write` access to the given folder/Container may prefer to\n * use [[overwriteFile]].\n *\n * @param folderUrl The URL of an existing folder where the new file is saved.\n * @param file The file to be written.\n * @param options Additional parameters for file creation (e.g. a slug).\n * @returns A Promise that resolves to the saved file, if available, or `null` if the current user does not have Read access to the newly-saved file. It rejects if saving fails.\n */\nexport async function saveFileInContainer<\n  FileExt extends File | BlobFile | NodeFile,\n>(\n  folderUrl: Url | UrlString,\n  file: FileExt,\n  options?: Partial<SaveFileOptions>,\n): Promise<FileExt & WithResourceInfo> {\n  const folderUrlString = normalizeUrl(internal_toIriString(folderUrl), {\n    trailingSlash: true,\n  });\n  const response = await writeFile(folderUrlString, file, \"POST\", options);\n\n  if (internal_isUnsuccessfulResponse(response)) {\n    throw new FetchError(\n      `Saving the file in [${folderUrl}] failed: [${response.status}] [${\n        response.statusText\n      }] ${await response.text()}.`,\n      response,\n    );\n  }\n\n  const locationHeader = response.headers.get(\"Location\");\n  if (locationHeader === null) {\n    throw new Error(\n      \"Could not determine the location of the newly saved file.\",\n    );\n  }\n\n  const fileIri = new URL(locationHeader, new URL(folderUrlString).origin).href;\n\n  const blobClone = internal_cloneResource(file);\n\n  const resourceInfo: WithResourceInfo = {\n    internal_resourceInfo: {\n      isRawData: true,\n      sourceIri: fileIri,\n      contentType: getContentType(file, options?.contentType),\n    },\n  };\n\n  return Object.assign(blobClone, resourceInfo);\n}\n\n/**\n * Options available when writing a file.\n */\nexport type WriteFileOptions = GetFileOptions & {\n  /**\n   * Allows a file's content type to be provided explicitly, if known. Value is\n   * expected to be a valid\n   * [media type](https://developer.mozilla.org/en-US/docs/Glossary/MIME_type).\n   * For example, if you know your file is a JPEG image, then you should provide\n   * the media type `image/jpeg`. If you don't know, or don't provide a media\n   * type, a default type of `application/octet-stream` will be applied (which\n   * indicates that the file should be regarded as pure binary data).\n   */\n  contentType: string;\n};\n\n/**\n * Saves a file at a given URL. If a file already exists at the URL,\n * the function overwrites the existing file.\n *\n * For example:\n *\n * ```\n * const savedFile = await overwriteFile(\n *   \"https://pod.example.com/some/container/myFile.txt\",\n *   new File([\"This is a plain piece of text\"], \"myFile\", { type: \"text/plain\" }),\n *   { fetch: fetch }\n * );\n * ```\n *\n * For additional example, see\n * [Read/Write Files](https://docs.inrupt.com/developer-tools/javascript/client-libraries/tutorial/read-write-files/#write-a-file-to-a-specific-url).\n *\n * *Recommended:* In the `options` parameter, you can specify the\n * [media type](https://developer.mozilla.org/en-US/docs/Glossary/MIME_type)\n * of the file in the `contentType`.  If unspecified, the function uses the default type of\n * `application/octet-stream`, indicating a binary data file.\n *\n * When saving a file with [[overwriteFile]], the Solid server creates any\n * intermediary Containers as needed; i.e., the Containers do not\n * need to be created in advance. For example, when saving a file to the target URL of\n * https://example.pod/container/resource, if https://example.pod/container/ does not exist,\n * the container is created as part of the save.\n *\n * @param fileUrl The URL where the file is saved.\n * @param file The file to be written.\n * @param options Additional parameters for file creation (e.g., media type).\n */\nexport async function overwriteFile<FileExt extends File | BlobFile | NodeFile>(\n  fileUrl: Url | UrlString,\n  file: FileExt,\n  options?: Partial<WriteFileOptions>,\n): Promise<FileExt & WithResourceInfo> {\n  const fileUrlString = internal_toIriString(fileUrl);\n  const response = await writeFile(fileUrlString, file, \"PUT\", options);\n\n  if (internal_isUnsuccessfulResponse(response)) {\n    throw new FetchError(\n      `Overwriting the file at [${fileUrlString}] failed: [${\n        response.status\n      }] [${response.statusText}] ${await response.text()}.`,\n      response,\n    );\n  }\n\n  const blobClone = internal_cloneResource(file);\n  const resourceInfo = internal_parseResourceInfo(response);\n  resourceInfo.sourceIri = fileUrlString;\n  resourceInfo.isRawData = true;\n\n  return Object.assign(blobClone, { internal_resourceInfo: resourceInfo });\n}\n\nfunction isHeadersArray(\n  headers: Headers | Record<string, string> | string[][],\n): headers is string[][] {\n  return Array.isArray(headers);\n}\n\n/**\n * The return type of this function is misleading: it should ONLY be used to check\n * whether an object has a forEach method that returns <key, value> pairs.\n *\n * @param headers A headers object that might have a forEach\n */\nfunction hasHeadersObjectForEach(\n  headers: Headers | Record<string, string> | string[][],\n): headers is Headers {\n  return typeof (headers as Headers).forEach === \"function\";\n}\n\n/**\n * @hidden\n * This function feels unnecessarily complicated, but is required in order to\n * have Headers according to type definitions in both Node and browser environments.\n * This might require a fix upstream to be cleaned up.\n *\n * @param headersToFlatten A structure containing headers potentially in several formats\n */\nexport function flattenHeaders(\n  headersToFlatten: Headers | Record<string, string> | string[][] | undefined,\n): Record<string, string> {\n  if (typeof headersToFlatten === \"undefined\") {\n    return {};\n  }\n\n  let flatHeaders: Record<string, string> = {};\n\n  if (isHeadersArray(headersToFlatten)) {\n    headersToFlatten.forEach(([key, value]) => {\n      flatHeaders[key] = value;\n    });\n    // Note that the following line must be a elsif, because string[][] has a forEach,\n    // but it returns string[] instead of <key, value>\n  } else if (hasHeadersObjectForEach(headersToFlatten)) {\n    headersToFlatten.forEach((value: string, key: string) => {\n      flatHeaders[key] = value;\n    });\n  } else {\n    // If the headers are already a Record<string, string>,\n    // they can directly be returned.\n    flatHeaders = headersToFlatten;\n  }\n\n  return flatHeaders;\n}\n\n/**\n * Internal function that performs the actual write HTTP query, either POST\n * or PUT depending on the use case.\n *\n * @param fileUrl The URL where the file is saved\n * @param file The file to be written\n * @param method The HTTP method\n * @param options Additional parameters for file creation (e.g. a slug, or media type)\n */\nasync function writeFile<T extends File | BlobFile | NodeFile>(\n  targetUrl: UrlString,\n  file: T,\n  method: \"PUT\" | \"POST\",\n  options: Partial<SaveFileOptions> = {},\n): Promise<Response> {\n  const headers = flattenHeaders(options.init?.headers ?? {});\n  if (containsReserved(headers)) {\n    throw new Error(\n      `No reserved header (${RESERVED_HEADERS.join(\n        \", \",\n      )}) should be set in the optional RequestInit.`,\n    );\n  }\n\n  // If a slug is in the parameters, set the request headers accordingly\n  if (options.slug !== undefined) {\n    headers.Slug = options.slug;\n  } else if (\"name\" in file && file.name !== undefined) {\n    headers.Slug = file.name;\n  }\n  headers[\"Content-Type\"] = getContentType(file, options.contentType);\n\n  return (options.fetch ?? fetch)(targetUrl, {\n    ...options.init,\n    headers,\n    method,\n    body: file as BlobFile,\n  });\n}\n\nfunction getContentType(\n  file: File | BlobFile | NodeFile,\n  contentTypeOverride?: string,\n): string {\n  if (typeof contentTypeOverride === \"string\") {\n    return contentTypeOverride;\n  }\n  const fileType =\n    typeof file === \"object\" &&\n    file !== null &&\n    \"type\" in file &&\n    typeof file.type === \"string\" &&\n    file.type.length > 0\n      ? file.type\n      : undefined;\n\n  return fileType ?? \"application/octet-stream\";\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { Quad, Quad_Object } from \"@rdfjs/types\";\nimport {\n  isNamedNode,\n  isLiteral,\n  xmlSchemaTypes,\n  deserializeBoolean,\n  deserializeDatetime,\n  deserializeDecimal,\n  deserializeInteger,\n} from \"../datatypes\";\nimport type { Thing, SolidDataset, WithChangeLog } from \"../interfaces\";\nimport { hasChangelog } from \"../interfaces\";\nimport { ThingExpectedError, isThing } from \"./thing\";\nimport { freeze } from \"../rdf.internal\";\n\n/** @hidden For internal use only. */\nexport function internal_getReadableValue(value: Quad_Object): string {\n  if (isNamedNode(value)) {\n    return `<${value.value}> (URL)`;\n  }\n  if (isLiteral(value)) {\n    /* istanbul ignore if: thingAsMarkdown always instantiates a NamedNode, so we can't hit this code path in tests. */\n    if (!isNamedNode(value.datatype)) {\n      return `[${value.value}] (RDF/JS Literal of unknown type)`;\n    }\n    let val;\n    switch (value.datatype.value) {\n      case xmlSchemaTypes.boolean:\n        val =\n          deserializeBoolean(value.value)?.valueOf() ??\n          `Invalid data: \\`${value.value}\\``;\n        return `${val} (boolean)`;\n      case xmlSchemaTypes.dateTime:\n        val =\n          deserializeDatetime(value.value)?.toUTCString() ??\n          `Invalid data: \\`${value.value}\\``;\n        return `${val} (datetime)`;\n      case xmlSchemaTypes.decimal:\n        val =\n          deserializeDecimal(value.value)?.toString() ??\n          `Invalid data: \\`${value.value}\\``;\n        return `${val} (decimal)`;\n      case xmlSchemaTypes.integer:\n        val =\n          deserializeInteger(value.value)?.toString() ??\n          `Invalid data: \\`${value.value}\\``;\n        return `${val} (integer)`;\n      case xmlSchemaTypes.langString:\n        return `\"${value.value}\" (${value.language} string)`;\n      case xmlSchemaTypes.string:\n        return `\"${value.value}\" (string)`;\n      default:\n        return `[${value.value}] (RDF/JS Literal of type: \\`${value.datatype.value}\\`)`;\n    }\n  }\n  /* istanbul ignore else: thingAsMarkdown doesn't generate other Nodes, so we can't hit this path in tests. */\n  if (value.termType === \"BlankNode\") {\n    return `[${value.value}] (RDF/JS BlankNode)`;\n  }\n  /* istanbul ignore next: thingAsMarkdown doesn't generate Quad Nodes, so we can't hit this path in tests. */\n  if (value.termType === \"Quad\") {\n    return `??? (nested RDF* Quad)`;\n  }\n  /* istanbul ignore else: The if statements are exhaustive; if not, TypeScript will complain. */\n  /* istanbul ignore next: thingAsMarkdown doesn't generate Variable Nodes, so we can't hit this path in tests. */\n  if (value.termType === \"Variable\") {\n    return `?${value.value} (RDF/JS Variable)`;\n  }\n  /* istanbul ignore next: The if statements are exhaustive; if not, TypeScript will complain. */\n  return value;\n}\n\n/**\n * @hidden\n */\nexport function internal_throwIfNotThing(thing: Thing): void {\n  if (!isThing(thing)) {\n    throw new ThingExpectedError(thing);\n  }\n}\n\n/**\n * @hidden\n * @param solidDataset\n */\nexport function internal_addAdditionsToChangeLog<Dataset extends SolidDataset>(\n  solidDataset: Dataset,\n  additions: Quad[],\n): Dataset & WithChangeLog {\n  const changeLog = hasChangelog(solidDataset)\n    ? solidDataset.internal_changeLog\n    : /* istanbul ignore next: This function always gets called after addDeletionsToChangeLog, so the ChangeLog always already exists in tests: */\n      { additions: [], deletions: [] };\n\n  const [newAdditions, newDeletions] = additions\n    .filter((addition) => !containsBlankNode(addition))\n    .reduce(\n      ([additionsAcc, deletionsAcc], addition) => {\n        const existingDeletion = deletionsAcc.find((deletion) =>\n          deletion.equals(addition),\n        );\n        if (typeof existingDeletion !== \"undefined\") {\n          return [\n            additionsAcc,\n            deletionsAcc.filter((deletion) => !deletion.equals(addition)),\n          ];\n        }\n        return [additionsAcc.concat(addition), deletionsAcc];\n      },\n      [changeLog.additions, changeLog.deletions],\n    );\n\n  return freeze({\n    ...solidDataset,\n    internal_changeLog: {\n      additions: newAdditions,\n      deletions: newDeletions,\n    },\n  });\n}\n\n/**\n * @hidden\n * @param solidDataset\n */\nexport function internal_addDeletionsToChangeLog<Dataset extends SolidDataset>(\n  solidDataset: Dataset,\n  deletions: Quad[],\n): Dataset & WithChangeLog {\n  const changeLog = hasChangelog(solidDataset)\n    ? solidDataset.internal_changeLog\n    : { additions: [], deletions: [] };\n\n  const [newAdditions, newDeletions] = deletions\n    .filter((deletion) => !containsBlankNode(deletion))\n    .reduce(\n      ([additionsAcc, deletionsAcc], deletion) => {\n        const existingAddition = additionsAcc.find((addition) =>\n          addition.equals(deletion),\n        );\n        if (typeof existingAddition !== \"undefined\") {\n          return [\n            additionsAcc.filter((addition) => !addition.equals(deletion)),\n            deletionsAcc,\n          ];\n        }\n        return [additionsAcc, deletionsAcc.concat(deletion)];\n      },\n      [changeLog.additions, changeLog.deletions],\n    );\n\n  return freeze({\n    ...solidDataset,\n    internal_changeLog: {\n      additions: newAdditions,\n      deletions: newDeletions,\n    },\n  });\n}\n\n/**\n * Enforces the presence of a Changelog for a given dataset. If a changelog is\n * already present, it is unchanged. Otherwise, an empty changelog is created.\n * @hidden\n * @param solidDataset\n */\nexport function internal_withChangeLog<Dataset extends SolidDataset>(\n  solidDataset: Dataset,\n): Dataset & WithChangeLog {\n  const newSolidDataset: Dataset & WithChangeLog = hasChangelog(solidDataset)\n    ? solidDataset\n    : freeze({\n        ...solidDataset,\n        internal_changeLog: { additions: [], deletions: [] },\n      });\n  return newSolidDataset;\n}\n\n/**\n * We don't currently support reading and writing Blank Nodes, so this function can be used to skip those Quads.\n *\n * This is needed because we cannot reconcile Blank Nodes in additions and\n * deletions. Down the road, we should do a diff before saving a SolidDataset\n * against a saved copy of the originally-fetched one, based on our own data\n * structures, which should make it easier to reconcile.\n */\nfunction containsBlankNode(quad: Quad): boolean {\n  return (\n    quad.subject.termType === \"BlankNode\" ||\n    quad.object.termType === \"BlankNode\"\n  );\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { Quad_Object, NamedNode, Literal } from \"@rdfjs/types\";\nimport type { Thing, Url, UrlString } from \"../interfaces\";\nimport type { XmlSchemaTypeIri, Time } from \"../datatypes\";\nimport {\n  deserializeBoolean,\n  deserializeDatetime,\n  deserializeDate,\n  deserializeTime,\n  deserializeDecimal,\n  deserializeInteger,\n  xmlSchemaTypes,\n  internal_isValidUrl,\n} from \"../datatypes\";\nimport { internal_throwIfNotThing } from \"./thing.internal\";\nimport { ValidPropertyUrlExpectedError } from \"./thing\";\nimport { internal_toIriString } from \"../interfaces.internal\";\nimport {\n  getBlankNodeValue,\n  getLocalNodeName,\n  isBlankNodeId,\n  isLocalNodeIri,\n} from \"../rdf.internal\";\nimport { DataFactory } from \"../rdfjs.internal\";\n\n/**\n * Returns the URLs of all Properties that the given [[Thing ]]has values for.b\n *\n * @param thing The [[Thing]] of which to get that Property URLs that have a value.\n * @returns The URLs of the Properties for which values are defined for the given Thing.\n * @hidden This is an advanced API that should not be needed for most Solid use cases. If you do find yourself needing this, please file a feature request sharing your use case.\n */\nexport function getPropertyAll(thing: Thing): UrlString[] {\n  return Object.keys(thing.predicates).filter(\n    (predicate) => getTerm(thing, predicate) !== null,\n  );\n}\n\n/**\n * Returns the URL value of the specified Property from a [[Thing]].\n * If the Property is not present or its value is not of type URL, returns null.\n * If the Property has multiple URL values, returns one of its URL values.\n *\n * @param thing The [[Thing]] to read a URL value from.\n * @param property The Property whose URL value to return.\n * @returns A URL value for the given Property if present, or null if the Property is not present or the value is not of type URL.\n */\nexport function getUrl(\n  thing: Thing,\n  property: Url | UrlString,\n): UrlString | null {\n  internal_throwIfNotThing(thing);\n  if (!internal_isValidUrl(property)) {\n    throw new ValidPropertyUrlExpectedError(property);\n  }\n  const predicateUrl = internal_toIriString(property);\n  const firstUrl = thing.predicates[predicateUrl]?.namedNodes?.[0] ?? null;\n  if (firstUrl === null) {\n    return null;\n  }\n  return isLocalNodeIri(firstUrl) ? `#${getLocalNodeName(firstUrl)}` : firstUrl;\n}\n/** @hidden Alias of [[getUrl]] for those who prefer IRI terminology. */\nexport const getIri = getUrl;\n\n/**\n * Returns the URL values of the specified Property from a [[Thing]].\n * If the Property is not present, returns an empty array.\n * If the Property's value is not of type URL, omits that value in the array.\n *\n * @param thing The [[Thing]] to read the URL values from.\n * @param property The Property whose URL values to return.\n * @returns An array of URL values for the given Property.\n */\nexport function getUrlAll(\n  thing: Thing,\n  property: Url | UrlString,\n): UrlString[] {\n  internal_throwIfNotThing(thing);\n  if (!internal_isValidUrl(property)) {\n    throw new ValidPropertyUrlExpectedError(property);\n  }\n  const predicateUrl = internal_toIriString(property);\n  return (\n    thing.predicates[predicateUrl]?.namedNodes?.map((iri) =>\n      isLocalNodeIri(iri) ? `#${getLocalNodeName(iri)}` : iri,\n    ) ?? []\n  );\n}\n/** @hidden Alias of [[getUrlAll]] for those who prefer IRI terminology. */\nexport const getIriAll = getUrlAll;\n\n/**\n * Returns the boolean value of the specified Property from a [[Thing]].\n * If the Property is not present or its value is not of type boolean, returns null.\n * If the Property has multiple boolean values, returns one of its values.\n *\n * @param thing The [[Thing]] to read a boolean value from.\n * @param property The Property whose boolean value to return.\n * @returns A boolean value for the given Property if present, or null if the Property is not present or the value is not of type boolean.\n */\nexport function getBoolean(\n  thing: Thing,\n  property: Url | UrlString,\n): boolean | null {\n  internal_throwIfNotThing(thing);\n  const literalString = getLiteralOfType(\n    thing,\n    property,\n    xmlSchemaTypes.boolean,\n  );\n\n  if (literalString === null) {\n    return null;\n  }\n\n  return deserializeBoolean(literalString);\n}\n\n/**\n * Returns the boolean values of the specified Property from a [[Thing]].\n * If the Property is not present, returns an empty array.\n * If the Property's value is not of type boolean, omits that value in the array.\n *\n * @param thing The [[Thing]] to read the boolean values from.\n * @param property The Property whose boolean values to return.\n * @returns An array of boolean values for the given Property.\n */\nexport function getBooleanAll(\n  thing: Thing,\n  property: Url | UrlString,\n): boolean[] {\n  internal_throwIfNotThing(thing);\n  const literalStrings = getLiteralAllOfType(\n    thing,\n    property,\n    xmlSchemaTypes.boolean,\n  );\n\n  return literalStrings\n    .map(deserializeBoolean)\n    .filter((possibleBoolean) => possibleBoolean !== null) as boolean[];\n}\n\n/**\n * Returns the datetime value of the specified Property from a [[Thing]].\n * If the Property is not present or its value is not of type datetime, returns null.\n * If the Property has multiple datetime values, returns one of its values.\n *\n * @param thing The [[Thing]] to read a datetime value from.\n * @param property The Property whose datetime value to return.\n * @returns A datetime value for the given Property if present, or null if the Property is not present or the value is not of type datetime.\n */\nexport function getDatetime(\n  thing: Thing,\n  property: Url | UrlString,\n): Date | null {\n  internal_throwIfNotThing(thing);\n  const literalString = getLiteralOfType(\n    thing,\n    property,\n    xmlSchemaTypes.dateTime,\n  );\n\n  if (literalString === null) {\n    return null;\n  }\n\n  return deserializeDatetime(literalString);\n}\n\n/**\n * Returns the datetime values of the specified Property from a [[Thing]].\n * If the Property is not present, returns an empty array.\n * If the Property's value is not of type datetime, omits that value in the array.\n *\n * @param thing The [[Thing]] to read the datetime values from.\n * @param property The Property whose datetime values to return.\n * @returns An array of datetime values for the given Property.\n */\nexport function getDatetimeAll(\n  thing: Thing,\n  property: Url | UrlString,\n): Date[] {\n  internal_throwIfNotThing(thing);\n  const literalStrings = getLiteralAllOfType(\n    thing,\n    property,\n    xmlSchemaTypes.dateTime,\n  );\n\n  return literalStrings\n    .map(deserializeDatetime)\n    .filter((potentialDatetime) => potentialDatetime !== null) as Date[];\n}\n\n/**\n * Returns the date value of the specified Property from a [[Thing]].\n * If the Property is not present or its value is not of type date, returns null.\n * If the Property has multiple date values, returns one of its values.\n *\n * @param thing The [[Thing]] to read a date value from.\n * @param property The Property whose date value to return.\n * @returns A date value for the given Property if present, or null if the Property is not present or the value is not of type date.\n * @since 1.10.0\n */\nexport function getDate(thing: Thing, property: Url | UrlString): Date | null {\n  internal_throwIfNotThing(thing);\n\n  const literalString = getLiteralOfType(thing, property, xmlSchemaTypes.date);\n\n  if (literalString === null) {\n    return null;\n  }\n\n  return deserializeDate(literalString);\n}\n\n/**\n * Returns the date values of the specified Property from a [[Thing]].\n * If the Property is not present, returns an empty array.\n * If the Property's value is not of type date, omits that value in the array.\n *\n * @param thing The [[Thing]] to read the date values from.\n * @param property The Property whose date values to return.\n * @returns An array of date values for the given Property.\n * @since 1.10.0\n */\nexport function getDateAll(thing: Thing, property: Url | UrlString): Date[] {\n  internal_throwIfNotThing(thing);\n  const literalStrings = getLiteralAllOfType(\n    thing,\n    property,\n    xmlSchemaTypes.date,\n  );\n\n  return literalStrings\n    .map(deserializeDate)\n    .filter((potentialDate) => potentialDate !== null) as Date[];\n}\n\n/**\n * Returns the time value of the specified Property from a [[Thing]].\n * If the Property is not present or its value is not of type time, returns null.\n * If the Property has multiple time values, returns one of its values.\n *\n * @param thing The [[Thing]] to read a time value from.\n * @param property The Property whose time value to return.\n * @returns A time value for the given Property if present, or null if the Property is not present or the value is not of type time.\n * @since 1.10.0\n */\nexport function getTime(thing: Thing, property: Url | UrlString): Time | null {\n  internal_throwIfNotThing(thing);\n  const literalString = getLiteralOfType(thing, property, xmlSchemaTypes.time);\n\n  if (literalString === null) {\n    return null;\n  }\n\n  return deserializeTime(literalString);\n}\n\n/**\n * Returns the time values of the specified Property from a [[Thing]].\n * If the Property is not present, returns an empty array.\n * If the Property's value is not of type time, omits that value in the array.\n *\n * @param thing The [[Thing]] to read the time values from.\n * @param property The Property whose time values to return.\n * @returns An array of time values for the given Property.\n * @since 1.10.0\n */\nexport function getTimeAll(thing: Thing, property: Url | UrlString): Time[] {\n  internal_throwIfNotThing(thing);\n  const literalStrings = getLiteralAllOfType(\n    thing,\n    property,\n    xmlSchemaTypes.time,\n  );\n\n  return literalStrings\n    .map(deserializeTime)\n    .filter((potentialTime) => potentialTime !== null) as Time[];\n}\n\n/**\n * Returns the decimal value of the specified Property from a [[Thing]].\n * If the Property is not present or its value is not of type decimal, returns null.\n * If the Property has multiple decimal values, returns one of its values.\n *\n * @param thing The [[Thing]] to read a decimal value from.\n * @param property The Property whose decimal value to return.\n * @returns A decimal value for the given Property if present, or null if the Property is not present or the value is not of type decimal.\n */\nexport function getDecimal(\n  thing: Thing,\n  property: Url | UrlString,\n): number | null {\n  internal_throwIfNotThing(thing);\n  const literalString = getLiteralOfType(\n    thing,\n    property,\n    xmlSchemaTypes.decimal,\n  );\n\n  if (literalString === null) {\n    return null;\n  }\n\n  return deserializeDecimal(literalString);\n}\n\n/**\n * Returns the decimal values of the specified Property from a [[Thing]].\n * If the Property is not present, returns an empty array.\n * If the Property's value is not of type decimal, omits that value in the array.\n *\n * @param thing The [[Thing]] to read the decimal values from.\n * @param property The Property whose decimal values to return.\n * @returns An array of decimal values for the given Property.\n */\nexport function getDecimalAll(\n  thing: Thing,\n  property: Url | UrlString,\n): number[] {\n  internal_throwIfNotThing(thing);\n  const literalStrings = getLiteralAllOfType(\n    thing,\n    property,\n    xmlSchemaTypes.decimal,\n  );\n\n  return literalStrings\n    .map((literalString) => deserializeDecimal(literalString))\n    .filter((potentialDecimal) => potentialDecimal !== null) as number[];\n}\n\n/**\n * Returns the integer value of the specified Property from a [[Thing]].\n * If the Property is not present or its value is not of type integer, returns null.\n * If the Property has multiple integer values, returns one of its values.\n *\n * @param thing The [[Thing]] to read an integer value from.\n * @param property The Property whose integer value to return.\n * @returns A integer value for the given Property if present, or null if the Property is not present or the value is not of type datetime.\n */\nexport function getInteger(\n  thing: Thing,\n  property: Url | UrlString,\n): number | null {\n  internal_throwIfNotThing(thing);\n  const literalString = getLiteralOfType(\n    thing,\n    property,\n    xmlSchemaTypes.integer,\n  );\n\n  if (literalString === null) {\n    return null;\n  }\n\n  return deserializeInteger(literalString);\n}\n\n/**\n * Returns the integer values of the specified Property from a [[Thing]].\n * If the Property is not present, returns an empty array.\n * If the Property's value is not of type integer, omits that value in the array.\n *\n * @param thing The [[Thing]] to read the integer values from.\n * @param property The Property whose integer values to return.\n * @returns An array of integer values for the given Property.\n */\nexport function getIntegerAll(\n  thing: Thing,\n  property: Url | UrlString,\n): number[] {\n  internal_throwIfNotThing(thing);\n  const literalStrings = getLiteralAllOfType(\n    thing,\n    property,\n    xmlSchemaTypes.integer,\n  );\n\n  return literalStrings\n    .map((literalString) => deserializeInteger(literalString))\n    .filter((potentialInteger) => potentialInteger !== null) as number[];\n}\n\n/**\n * Returns the English (language tag \"en\") string value of the specified Property from a [[Thing]].\n * If the Property is not present as a string in English, returns null.\n * If the Property has multiple English string values, returns one of its values.\n *\n * @param thing The [[Thing]] to read a localised string value from.\n * @param property The Property whose localised string value to return.\n * @returns An English string value for the given Property if present, or null otherwise.\n * @since 1.13.0\n */\nexport function getStringEnglish(\n  thing: Thing,\n  property: Url | UrlString,\n): string | null {\n  return getStringWithLocale(thing, property, \"en\");\n}\n\n/**\n * Returns the localized string value of the specified Property from a [[Thing]].\n * If the Property is not present as a string in the specified locale, returns null.\n * If the Property has multiple string values for the specified locale, returns one of its values.\n *\n * @param thing The [[Thing]] to read a localised string value from.\n * @param property The Property whose localised string value to return.\n * @param locale The desired locale for the string value.\n * @returns A localised string value for the given Property if present in the specified `locale`, or null otherwise.\n */\nexport function getStringWithLocale(\n  thing: Thing,\n  property: Url | UrlString,\n  locale: string,\n): string | null {\n  internal_throwIfNotThing(thing);\n  if (!internal_isValidUrl(property)) {\n    throw new ValidPropertyUrlExpectedError(property);\n  }\n  const predicateIri = internal_toIriString(property);\n  const langStrings = thing.predicates[predicateIri]?.langStrings ?? {};\n  const existingLocales = Object.keys(langStrings);\n  const matchingLocale = existingLocales.find(\n    (existingLocale) =>\n      existingLocale.toLowerCase() === locale.toLowerCase() &&\n      Array.isArray(langStrings[existingLocale]) &&\n      langStrings[existingLocale].length > 0,\n  );\n  return typeof matchingLocale === \"string\"\n    ? langStrings[matchingLocale][0]\n    : null;\n}\n\n/**\n * Returns the English (language tag \"en\") string values of the specified Property from a [[Thing]].\n * If the Property is not present, returns an empty array.\n * If the Property's value is not an English string, omits that value in the array.\n *\n * @param thing The [[Thing]] to read a localised string value from.\n * @param property The Property whose localised string value to return.\n * @returns An array of English string values for the given Property.\n */\nexport function getStringEnglishAll(\n  thing: Thing,\n  property: Url | UrlString,\n): string[] {\n  return getStringWithLocaleAll(thing, property, \"en\");\n}\n\n/**\n * Returns the localized string values of the specified Property from a [[Thing]].\n * If the Property is not present, returns an empty array.\n * If the Property's value is not a string of the specified locale, omits that value in the array.\n *\n * @param thing The [[Thing]] to read the localised string values from.\n * @param property The Property whose localised string values to return.\n * @param locale The desired locale for the string values.\n * @returns An array of localised string values for the given Property.\n */\nexport function getStringWithLocaleAll(\n  thing: Thing,\n  property: Url | UrlString,\n  locale: string,\n): string[] {\n  internal_throwIfNotThing(thing);\n  if (!internal_isValidUrl(property)) {\n    throw new ValidPropertyUrlExpectedError(property);\n  }\n  const predicateIri = internal_toIriString(property);\n  const langStrings = thing.predicates[predicateIri]?.langStrings ?? {};\n  const existingLocales = Object.keys(langStrings);\n  const matchingLocale = existingLocales.find(\n    (existingLocale) =>\n      existingLocale.toLowerCase() === locale.toLowerCase() &&\n      Array.isArray(langStrings[existingLocale]) &&\n      langStrings[existingLocale].length > 0,\n  );\n  return typeof matchingLocale === \"string\"\n    ? [...langStrings[matchingLocale]]\n    : [];\n}\n\n/**\n * Returns all localized string values mapped by the locales for the specified property from the\n * specified [[Thing]] (explicitly filters out non-language string literals).\n *\n * @param thing The [[Thing]] to read the localised string values from.\n * @param property The Property whose localised string values to return.\n * @returns A Map of objects, keyed on locale with the value an array of string values (for that locale).\n */\nexport function getStringByLocaleAll(\n  thing: Thing,\n  property: Url | UrlString,\n): Map<string, string[]> {\n  internal_throwIfNotThing(thing);\n  if (!internal_isValidUrl(property)) {\n    throw new ValidPropertyUrlExpectedError(property);\n  }\n  const predicateIri = internal_toIriString(property);\n  const stringsByLocale = thing.predicates[predicateIri]?.langStrings ?? {};\n  return new Map(\n    Object.entries(stringsByLocale).map(([locale, values]) => [\n      locale,\n      [...values],\n    ]),\n  );\n}\n\n/**\n * Returns the string value of the specified Property from a [[Thing]].\n * If the Property is not present or its value is not of type string, returns null.\n * If the Property has multiple string values, returns one of its values.\n *\n * @param thing The [[Thing]] to read a string value from.\n * @param property The Property whose string value to return.\n * @returns A string value for the given Property if present, or null if the Property is not present or the value is not of type string.\n */\nexport function getStringNoLocale(\n  thing: Thing,\n  property: Url | UrlString,\n): string | null {\n  internal_throwIfNotThing(thing);\n  const literalString = getLiteralOfType(\n    thing,\n    property,\n    xmlSchemaTypes.string,\n  );\n\n  return literalString;\n}\n\n/**\n * Returns the string values of the specified Property from a [[Thing]].\n * If the Property is not present, returns an empty array.\n * If the Property's value is not of type string, omits that value in the array.\n *\n * @param thing The [[Thing]] to read the string values from.\n * @param property The Property whose string values to return.\n * @returns An array of string values for the given Property.\n */\nexport function getStringNoLocaleAll(\n  thing: Thing,\n  property: Url | UrlString,\n): string[] {\n  internal_throwIfNotThing(thing);\n  const literalStrings = getLiteralAllOfType(\n    thing,\n    property,\n    xmlSchemaTypes.string,\n  );\n\n  return literalStrings;\n}\n\n/**\n * @param thing The [[Thing]] to read a NamedNode value from.\n * @param property The given Property for which you want the NamedNode value.\n * @returns A NamedNode value for the given Property, if present, or null otherwise.\n * @ignore This should not be needed due to the other get*() functions. If you do find yourself needing it, please file a feature request for your use case.\n * @see https://rdf.js.org/data-model-spec/#namednode-interface\n */\nexport function getNamedNode(\n  thing: Thing,\n  property: Url | UrlString,\n): NamedNode | null {\n  const iriString = getIri(thing, property);\n\n  if (iriString === null) {\n    return null;\n  }\n\n  return DataFactory.namedNode(iriString);\n}\n\n/**\n * @param thing The [[Thing]] to read the NamedNode values from.\n * @param property The given Property for which you want the NamedNode values.\n * @returns The NamedNode values for the given Property.\n * @ignore This should not be needed due to the other get*() functions. If you do find yourself needing it, please file a feature request for your use case.\n * @see https://rdf.js.org/data-model-spec/#namednode-interface\n */\nexport function getNamedNodeAll(\n  thing: Thing,\n  property: Url | UrlString,\n): NamedNode[] {\n  const iriStrings = getIriAll(thing, property);\n\n  return iriStrings.map((iriString) => DataFactory.namedNode(iriString));\n}\n\n/**\n * @param thing The [[Thing]] to read a Literal value from.\n * @param property The given Property for which you want the Literal value.\n * @returns A Literal value for the given Property, if present, or null otherwise.\n * @ignore This should not be needed due to the other get*() functions. If you do find yourself needing it, please file a feature request for your use case.\n * @see https://rdf.js.org/data-model-spec/#literal-interface\n */\nexport function getLiteral(\n  thing: Thing,\n  property: Url | UrlString,\n): Literal | null {\n  internal_throwIfNotThing(thing);\n  if (!internal_isValidUrl(property)) {\n    throw new ValidPropertyUrlExpectedError(property);\n  }\n  const predicateIri = internal_toIriString(property);\n  const langStrings = thing.predicates[predicateIri]?.langStrings ?? {};\n  const locales = Object.keys(langStrings);\n  if (locales.length > 0) {\n    const nonEmptyLocale = locales.find(\n      (locale) =>\n        Array.isArray(langStrings[locale]) && langStrings[locale].length > 0,\n    );\n    if (typeof nonEmptyLocale === \"string\") {\n      return DataFactory.literal(\n        langStrings[nonEmptyLocale][0],\n        nonEmptyLocale,\n      );\n    }\n  }\n\n  const otherLiterals = thing.predicates[predicateIri]?.literals ?? {};\n  const dataTypes = Object.keys(otherLiterals);\n\n  if (dataTypes.length > 0) {\n    const nonEmptyDataType = dataTypes.find(\n      (dataType) =>\n        Array.isArray(otherLiterals[dataType]) &&\n        otherLiterals[dataType].length > 0,\n    );\n    if (typeof nonEmptyDataType === \"string\") {\n      return DataFactory.literal(\n        otherLiterals[nonEmptyDataType][0],\n        DataFactory.namedNode(nonEmptyDataType),\n      );\n    }\n  }\n\n  return null;\n}\n\n/**\n * @param thing The [[Thing]] to read the Literal values from.\n * @param property The given Property for which you want the Literal values.\n * @returns The Literal values for the given Property.\n * @ignore This should not be needed due to the other get*All() functions. If you do find yourself needing it, please file a feature request for your use case.\n * @see https://rdf.js.org/data-model-spec/#literal-interface\n */\nexport function getLiteralAll(\n  thing: Thing,\n  property: Url | UrlString,\n): Literal[] {\n  internal_throwIfNotThing(thing);\n  if (!internal_isValidUrl(property)) {\n    throw new ValidPropertyUrlExpectedError(property);\n  }\n  const predicateIri = internal_toIriString(property);\n  let literals: Literal[] = [];\n\n  const langStrings = thing.predicates[predicateIri]?.langStrings ?? {};\n  const locales = Object.keys(langStrings);\n  for (const locale of locales) {\n    const stringsInLocale = langStrings[locale];\n    const localeLiterals = stringsInLocale.map((langString) =>\n      DataFactory.literal(langString, locale),\n    );\n    literals = literals.concat(localeLiterals);\n  }\n\n  const otherLiterals = thing.predicates[predicateIri]?.literals ?? {};\n  const dataTypes = Object.keys(otherLiterals);\n\n  for (const dataType of dataTypes) {\n    const values = otherLiterals[dataType];\n    const typeNode = DataFactory.namedNode(dataType);\n    const dataTypeLiterals = values.map((value) =>\n      DataFactory.literal(value, typeNode),\n    );\n    literals = literals.concat(dataTypeLiterals);\n  }\n\n  return literals;\n}\n\n/**\n * @param thing The [[Thing]] to read a raw RDF/JS value from.\n * @param property The given Property for which you want the raw value.\n * @returns A Term for the given Property, if present, or null otherwise.\n * @ignore This should not be needed due to the other get*() functions. If you do find yourself needing it, please file a feature request for your use case.\n * @see https://rdf.js.org/data-model-spec/\n * @since 0.3.0\n */\nexport function getTerm(\n  thing: Thing,\n  property: Url | UrlString,\n): Quad_Object | null {\n  internal_throwIfNotThing(thing);\n  const namedNode = getNamedNode(thing, property);\n  if (namedNode !== null) {\n    return namedNode;\n  }\n\n  const literal = getLiteral(thing, property);\n  if (literal !== null) {\n    return literal;\n  }\n\n  const predicateIri = internal_toIriString(property);\n  const blankNodes = thing.predicates[predicateIri]?.blankNodes ?? [];\n  if (blankNodes.length > 0) {\n    const blankNodeValue = isBlankNodeId(blankNodes[0])\n      ? getBlankNodeValue(blankNodes[0])\n      : undefined;\n    return DataFactory.blankNode(blankNodeValue);\n  }\n\n  return null;\n}\n\n/**\n * @param thing The [[Thing]] to read the raw RDF/JS values from.\n * @param property The given Property for which you want the raw values.\n * @returns The Terms for the given Property.\n * @ignore This should not be needed due to the other get*() functions. If you do find yourself needing it, please file a feature request for your use case.\n * @see https://rdf.js.org/data-model-spec/\n * @since 0.3.0\n */\nexport function getTermAll(\n  thing: Thing,\n  property: Url | UrlString,\n): Quad_Object[] {\n  internal_throwIfNotThing(thing);\n  const namedNodes = getNamedNodeAll(thing, property);\n\n  const literals = getLiteralAll(thing, property);\n\n  const predicateIri = internal_toIriString(property);\n  const blankNodeValues = thing.predicates[predicateIri]?.blankNodes ?? [];\n  const blankNodes = blankNodeValues.map((rawBlankNode) => {\n    const blankNodeName = isBlankNodeId(rawBlankNode)\n      ? getBlankNodeValue(rawBlankNode)\n      : undefined;\n    return DataFactory.blankNode(blankNodeName);\n  });\n\n  const terms: Quad_Object[] = (namedNodes as Quad_Object[])\n    .concat(literals)\n    .concat(blankNodes);\n  return terms;\n}\n\n/**\n * @param thing The [Thing]] to read a Literal of the given type from.\n * @param property The given Property for which you want the Literal value.\n * @param literalType Set type of the Literal data.\n * @returns The stringified value for the given Property and type, if present, or null otherwise.\n */\nfunction getLiteralOfType<Datatype extends XmlSchemaTypeIri>(\n  thing: Thing,\n  property: Url | UrlString,\n  literalType: Datatype,\n): string | null {\n  if (!internal_isValidUrl(property)) {\n    throw new ValidPropertyUrlExpectedError(property);\n  }\n  const predicateIri = internal_toIriString(property);\n  return thing.predicates[predicateIri]?.literals?.[literalType]?.[0] ?? null;\n}\n\n/**\n * @param thing The [Thing]] to read the Literals of the given type from.\n * @param property The given Property for which you want the Literal values.\n * @param literalType Set type of the Literal data.\n * @returns The stringified values for the given Property and type.\n */\nfunction getLiteralAllOfType<Datatype extends XmlSchemaTypeIri>(\n  thing: Thing,\n  property: Url | UrlString,\n  literalType: Datatype,\n): string[] {\n  if (!internal_isValidUrl(property)) {\n    throw new ValidPropertyUrlExpectedError(property);\n  }\n  const predicateIri = internal_toIriString(property);\n  const literalsOfType =\n    thing.predicates[predicateIri]?.literals?.[literalType] ?? [];\n  return [...literalsOfType];\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\nimport { v4 as uuidv4 } from \"uuid\";\nimport {\n  isNamedNode,\n  resolveLocalIri,\n  internal_isValidUrl,\n} from \"../datatypes\";\nimport type {\n  UrlString,\n  Url,\n  Thing,\n  ThingLocal,\n  ThingPersisted,\n  SolidDataset,\n  WithChangeLog,\n  IriString,\n} from \"../interfaces\";\nimport { SolidClientError, hasServerResourceInfo } from \"../interfaces\";\nimport { DataFactory, subjectToRdfJsQuads } from \"../rdfjs.internal\";\nimport { getSourceUrl } from \"../resource/resource\";\nimport {\n  internal_addAdditionsToChangeLog,\n  internal_addDeletionsToChangeLog,\n  internal_getReadableValue,\n} from \"./thing.internal\";\nimport type { LocalNodeIri } from \"../rdf.internal\";\nimport {\n  freeze,\n  getLocalNodeIri,\n  getLocalNodeName,\n  isBlankNodeId,\n  isLocalNodeIri,\n} from \"../rdf.internal\";\nimport { internal_toIriString } from \"../interfaces.internal\";\nimport { getTermAll } from \"./get\";\n\n/**\n * @hidden Scopes are not yet consistently used in Solid and hence not properly implemented in this library yet (the add*() and set*() functions do not respect it yet), so we're not exposing these to developers at this point in time.\n */\nexport interface GetThingOptions {\n  /**\n   * Which Named Graph to extract the Thing from.\n   *\n   * If not specified, the Thing will include Quads from all Named Graphs in the given\n   * [[SolidDataset]].\n   * */\n  scope?: Url | UrlString;\n}\nexport function getThing(\n  solidDataset: SolidDataset,\n  thingUrl: UrlString | Url,\n  options?: GetThingOptions,\n): ThingPersisted | null;\nexport function getThing(\n  solidDataset: SolidDataset,\n  thingUrl: LocalNodeIri,\n  options?: GetThingOptions,\n): ThingLocal | null;\nexport function getThing(\n  solidDataset: SolidDataset,\n  thingUrl: UrlString | Url | LocalNodeIri,\n  options?: GetThingOptions,\n): Thing | null;\n/**\n * Extract Quads with a given Subject from a [[SolidDataset]] into a [[Thing]].\n *\n * @param solidDataset The [[SolidDataset]] to extract the [[Thing]] from.\n * @param thingUrl The URL of the desired [[Thing]].\n * @param options Not yet implemented.\n */\nexport function getThing(\n  solidDataset: SolidDataset,\n  thingUrl: UrlString | Url | LocalNodeIri,\n  options: GetThingOptions = {},\n): Thing | null {\n  if (!internal_isValidUrl(thingUrl)) {\n    throw new ValidThingUrlExpectedError(thingUrl);\n  }\n\n  const graph =\n    typeof options.scope !== \"undefined\"\n      ? internal_toIriString(options.scope)\n      : \"default\";\n  const thingsByIri = solidDataset.graphs[graph] ?? {};\n  const thingIri = internal_toIriString(thingUrl);\n  const resolvedThingIri =\n    isLocalNodeIri(thingIri) && hasServerResourceInfo(solidDataset)\n      ? resolveLocalIri(getLocalNodeName(thingIri), getSourceUrl(solidDataset))\n      : thingIri;\n  const thing = thingsByIri[resolvedThingIri];\n  if (typeof thing === \"undefined\") {\n    return null;\n  }\n  return thing;\n}\n\n/**\n * Get all [[Thing]]s in a [[SolidDataset]].\n *\n * @param solidDataset The [[SolidDataset]] to extract the [[Thing]]s from.\n * @param options Not yet implemented.\n */\nexport function getThingAll(\n  solidDataset: SolidDataset,\n  options: GetThingOptions & {\n    /**\n     * Can Things local to the current dataset, and having no IRI, be returned ?\n     */\n    acceptBlankNodes?: boolean;\n  } = { acceptBlankNodes: false },\n): Thing[] {\n  const graph =\n    typeof options.scope !== \"undefined\"\n      ? internal_toIriString(options.scope)\n      : \"default\";\n  const thingsByIri = solidDataset.graphs[graph] ?? {};\n  return Object.values(thingsByIri).filter(\n    (thing) => !isBlankNodeId(thing.url) || options.acceptBlankNodes,\n  );\n}\n\n/**\n * Insert a [[Thing]] into a [[SolidDataset]], replacing previous instances of that Thing.\n *\n * @param solidDataset The SolidDataset to insert a Thing into.\n * @param thing The Thing to insert into the given SolidDataset.\n * @returns A new SolidDataset equal to the given SolidDataset, but with the given Thing.\n */\nexport function setThing<Dataset extends SolidDataset>(\n  solidDataset: Dataset,\n  thing: Thing,\n): Dataset & WithChangeLog {\n  const thingIri =\n    isThingLocal(thing) && hasServerResourceInfo(solidDataset)\n      ? resolveLocalIri(getLocalNodeName(thing.url), getSourceUrl(solidDataset))\n      : thing.url;\n  const defaultGraph = solidDataset.graphs.default;\n  const updatedDefaultGraph = freeze({\n    ...defaultGraph,\n    [thingIri]: freeze({ ...thing, url: thingIri }),\n  });\n  const updatedGraphs = freeze({\n    ...solidDataset.graphs,\n    default: updatedDefaultGraph,\n  });\n\n  const subjectNode = DataFactory.namedNode(thingIri);\n\n  const deletedThingPredicates =\n    solidDataset.graphs.default[thingIri]?.predicates;\n  const deletions =\n    typeof deletedThingPredicates !== \"undefined\"\n      ? subjectToRdfJsQuads(\n          deletedThingPredicates,\n          subjectNode,\n          DataFactory.defaultGraph(),\n        )\n      : [];\n\n  const additions = subjectToRdfJsQuads(\n    thing.predicates,\n    subjectNode,\n    DataFactory.defaultGraph(),\n  );\n  return internal_addAdditionsToChangeLog(\n    internal_addDeletionsToChangeLog(\n      freeze({\n        ...solidDataset,\n        graphs: updatedGraphs,\n      }),\n      deletions,\n    ),\n    additions,\n  );\n}\n\n/**\n * Remove a Thing from a SolidDataset.\n *\n * @param solidDataset The SolidDataset to remove a Thing from.\n * @param thing The Thing to remove from `solidDataset`.\n * @returns A new [[SolidDataset]] equal to the input SolidDataset, excluding the given Thing.\n */\nexport function removeThing<Dataset extends SolidDataset>(\n  solidDataset: Dataset,\n  thing: UrlString | Url | Thing,\n): Dataset & WithChangeLog {\n  let thingIri: IriString;\n  if (isNamedNode(thing)) {\n    thingIri = thing.value;\n  } else if (typeof thing === \"string\") {\n    thingIri =\n      isLocalNodeIri(thing) && hasServerResourceInfo(solidDataset)\n        ? resolveLocalIri(getLocalNodeName(thing), getSourceUrl(solidDataset))\n        : thing;\n  } else if (isThingLocal(thing)) {\n    thingIri = thing.url;\n  } else {\n    thingIri = asIri(thing);\n  }\n\n  const defaultGraph = solidDataset.graphs.default;\n  const updatedDefaultGraph = { ...defaultGraph };\n  delete updatedDefaultGraph[thingIri];\n  const updatedGraphs = freeze({\n    ...solidDataset.graphs,\n    default: freeze(updatedDefaultGraph),\n  });\n\n  const subjectNode = DataFactory.namedNode(thingIri);\n  const deletedThingPredicates =\n    solidDataset.graphs.default[thingIri]?.predicates;\n  const deletions =\n    typeof deletedThingPredicates !== \"undefined\"\n      ? subjectToRdfJsQuads(\n          deletedThingPredicates,\n          subjectNode,\n          DataFactory.defaultGraph(),\n        )\n      : [];\n\n  return internal_addDeletionsToChangeLog(\n    freeze({\n      ...solidDataset,\n      graphs: updatedGraphs,\n    }),\n    deletions,\n  );\n}\n\n/** Pass these options to [[createThing]] to initialise a new [[Thing]] whose URL will be determined when it is saved. */\nexport type CreateThingLocalOptions = {\n  /**\n   * The name that should be used for this [[Thing]] when constructing its URL.\n   *\n   * If not provided, a random one will be generated.\n   */\n  name?: string;\n};\n/** Pass these options to [[createThing]] to initialise a new [[Thing]] whose URL is already known. */\nexport type CreateThingPersistedOptions = {\n  /**\n   * The URL of the newly created [[Thing]].\n   */\n  url: UrlString;\n};\n/** The options you pass to [[createThing]].\n * - To specify the URL for the initialised Thing, pass [[CreateThingPersistedOptions]].\n * - To have the URL determined during the save, pass [[CreateThingLocalOptions]].\n */\nexport type CreateThingOptions =\n  | CreateThingLocalOptions\n  | CreateThingPersistedOptions;\n/**\n * Initialise a new [[Thing]] in memory with a given URL.\n *\n * @param options See [[CreateThingPersistedOptions]] for how to specify the new [[Thing]]'s URL.\n */\nexport function createThing(\n  options: CreateThingPersistedOptions,\n): ThingPersisted;\n/**\n * Initialise a new [[Thing]] in memory.\n *\n * @param options Optional parameters that affect the final URL of this [[Thing]] when saved.\n */\nexport function createThing(options?: CreateThingLocalOptions): ThingLocal;\nexport function createThing(options?: CreateThingOptions): Thing;\nexport function createThing(options: CreateThingOptions = {}): Thing {\n  if (typeof (options as CreateThingPersistedOptions).url !== \"undefined\") {\n    const { url } = options as CreateThingPersistedOptions;\n    if (!internal_isValidUrl(url)) {\n      throw new ValidThingUrlExpectedError(url);\n    }\n    const thing: ThingPersisted = freeze({\n      type: \"Subject\",\n      predicates: freeze({}),\n      url,\n    });\n    return thing;\n  }\n  const name = (options as CreateThingLocalOptions).name ?? generateName();\n  const localNodeIri = getLocalNodeIri(name);\n  const thing: ThingLocal = freeze({\n    type: \"Subject\",\n    predicates: freeze({}),\n    url: localNodeIri,\n  });\n  return thing;\n}\n\n/**\n * @param input An value that might be a [[Thing]].\n * @returns Whether `input` is a Thing.\n * @since 0.2.0\n */\nexport function isThing<X>(input: X | Thing): input is Thing {\n  return (\n    typeof input === \"object\" &&\n    input !== null &&\n    typeof (input as Thing).type === \"string\" &&\n    (input as Thing).type === \"Subject\"\n  );\n}\n\ntype IsNotThingLocal<T extends Thing> = T extends ThingLocal ? never : T;\n/**\n * Get the URL to a given [[Thing]].\n *\n * @param thing The [[Thing]] you want to obtain the URL from.\n * @param baseUrl If `thing` is not persisted yet, the base URL that should be used to construct this [[Thing]]'s URL.\n */\nexport function asUrl(thing: ThingLocal, baseUrl: UrlString): UrlString;\nexport function asUrl<T extends ThingPersisted>(\n  thing: T & IsNotThingLocal<T>,\n): UrlString;\nexport function asUrl(thing: Thing, baseUrl: UrlString): UrlString;\nexport function asUrl(thing: Thing, baseUrl?: UrlString): UrlString {\n  if (isThingLocal(thing)) {\n    if (typeof baseUrl === \"undefined\") {\n      throw new Error(\n        \"The URL of a Thing that has not been persisted cannot be determined without a base URL.\",\n      );\n    }\n    return resolveLocalIri(getLocalNodeName(thing.url), baseUrl);\n  }\n\n  return thing.url;\n}\n/** @hidden Alias of [[asUrl]] for those who prefer IRI terminology. */\nexport const asIri = asUrl;\n\n/**\n * Gets a human-readable representation of the given Thing to aid debugging.\n *\n * Note that changes to the exact format of the return value are not considered a breaking change;\n * it is intended to aid in debugging, not as a serialisation method that can be reliably parsed.\n *\n * @param thing The Thing to get a human-readable representation of.\n * @since 0.3.0\n */\nexport function thingAsMarkdown(thing: Thing): string {\n  let thingAsMarkdown = \"\";\n\n  if (isThingLocal(thing)) {\n    thingAsMarkdown += `## Thing (no URL yet — identifier: \\`#${getLocalNodeName(\n      thing.url,\n    )}\\`)\\n`;\n  } else {\n    thingAsMarkdown += `## Thing: ${thing.url}\\n`;\n  }\n\n  const predicateIris = Object.keys(thing.predicates);\n  if (predicateIris.length === 0) {\n    thingAsMarkdown += \"\\n<empty>\\n\";\n  } else {\n    for (const predicate of predicateIris) {\n      thingAsMarkdown += `\\nProperty: ${predicate}\\n`;\n\n      const values = getTermAll(thing, predicate);\n      thingAsMarkdown += values.reduce((acc, value) => {\n        return `${acc}- ${internal_getReadableValue(value)}\\n`;\n      }, \"\");\n    }\n  }\n\n  return thingAsMarkdown;\n}\n\n/**\n * @param thing The [[Thing]] of which a URL might or might not be known.\n * @return `true` if `thing` has no known URL yet.\n * @since 1.7.0\n */\nexport function isThingLocal(\n  thing: ThingPersisted | ThingLocal,\n): thing is ThingLocal {\n  return isLocalNodeIri(thing.url);\n}\n\n/**\n * This error is thrown when a function expected to receive a [[Thing]] but received something else.\n * @since 1.2.0\n */\nexport class ThingExpectedError extends SolidClientError {\n  public readonly receivedValue: unknown;\n\n  constructor(receivedValue: unknown) {\n    const message = `Expected a Thing, but received: [${receivedValue}].`;\n    super(message);\n    this.receivedValue = receivedValue;\n  }\n}\n\n/**\n * This error is thrown when a function expected to receive a valid URL to identify a property but received something else.\n */\nexport class ValidPropertyUrlExpectedError extends SolidClientError {\n  public readonly receivedProperty: unknown;\n\n  constructor(receivedValue: unknown) {\n    const value = isNamedNode(receivedValue)\n      ? receivedValue.value\n      : receivedValue;\n    const message = `Expected a valid URL to identify a property, but received: [${value}].`;\n    super(message);\n    this.receivedProperty = value;\n  }\n}\n\n/**\n * This error is thrown when a function expected to receive a valid URL value but received something else.\n */\nexport class ValidValueUrlExpectedError extends SolidClientError {\n  public readonly receivedValue: unknown;\n\n  constructor(receivedValue: unknown) {\n    const value = isNamedNode(receivedValue)\n      ? receivedValue.value\n      : receivedValue;\n    const message = `Expected a valid URL value, but received: [${value}].`;\n    super(message);\n    this.receivedValue = value;\n  }\n}\n\n/**\n * This error is thrown when a function expected to receive a valid URL to identify a [[Thing]] but received something else.\n */\nexport class ValidThingUrlExpectedError extends SolidClientError {\n  public readonly receivedValue: unknown;\n\n  constructor(receivedValue: unknown) {\n    const value = isNamedNode(receivedValue)\n      ? receivedValue.value\n      : receivedValue;\n    const message = `Expected a valid URL to identify a Thing, but received: [${value}].`;\n    super(message);\n    this.receivedValue = value;\n  }\n}\n\n/**\n * Generate a string that can be used as the unique identifier for a Thing\n *\n * This function works by starting with a date string (so that Things can be\n * sorted chronologically), followed by a random number generated by taking a\n * random number between 0 and 1, and cutting off the `0.`.\n *\n * @internal\n * @returns An string that's likely to be unique\n */\nconst generateName = () => {\n  return uuidv4();\n};\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { IriString } from \"../interfaces\";\n\n/**\n * This function normalizes IRIs as managed by the server to ease accurate comparison.\n * @param iri\n * @hidden\n */\nexport function normalizeServerSideIri(iri: IriString): IriString {\n  const iriObj = new URL(iri);\n  iriObj.hash = \"\";\n  return iriObj.href;\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { Quad, NamedNode, Quad_Object } from \"@rdfjs/types\";\nimport {\n  addRdfJsQuadToDataset,\n  DataFactory,\n  getChainBlankNodes,\n  toRdfJsQuads,\n} from \"../rdfjs.internal\";\nimport { ldp, pim } from \"../constants\";\nimport { getJsonLdParser } from \"../formats/jsonLd\";\nimport { triplesToTurtle, getTurtleParser } from \"../formats/turtle\";\nimport { isLocalNode, isNamedNode, resolveIriForLocalNode } from \"../datatypes\";\nimport type {\n  UrlString,\n  WithResourceInfo,\n  Url,\n  IriString,\n  Thing,\n  ThingPersisted,\n  WithServerResourceInfo,\n  SolidDataset,\n  WithChangeLog,\n  LocalNode,\n} from \"../interfaces\";\nimport { hasResourceInfo, hasChangelog } from \"../interfaces\";\nimport { internal_toIriString, normalizeUrl } from \"../interfaces.internal\";\nimport {\n  getSourceUrl,\n  getResourceInfo,\n  isContainer,\n  FetchError,\n  responseToResourceInfo,\n  getContentType,\n  getLinkedResourceUrlAll,\n} from \"./resource\";\nimport {\n  internal_isUnsuccessfulResponse,\n  internal_parseResourceInfo,\n} from \"./resource.internal\";\nimport { thingAsMarkdown, getThing, getThingAll } from \"../thing/thing\";\nimport {\n  internal_getReadableValue,\n  internal_withChangeLog,\n} from \"../thing/thing.internal\";\nimport { getIriAll } from \"../thing/get\";\nimport { normalizeServerSideIri } from \"./iri.internal\";\nimport { freeze, getLocalNodeName, isLocalNodeIri } from \"../rdf.internal\";\n\n/**\n * Initialise a new [[SolidDataset]] in memory.\n *\n * @returns An empty [[SolidDataset]].\n */\nexport function createSolidDataset(): SolidDataset {\n  return freeze({\n    type: \"Dataset\",\n    graphs: {\n      default: {},\n    },\n  });\n}\n\n/**\n * A Parser takes a string and generates {@link https://rdf.js.org/data-model-spec/|RDF/JS Quads}.\n *\n * By providing an object conforming to the `Parser` interface, you can handle\n * RDF serialisations other than `text/turtle`, which `@inrupt/solid-client`\n * supports by default. This can be useful to retrieve RDF data from sources\n * other than a Solid Pod.\n *\n * A Parser has the following properties:\n * - `onQuad`: Registers the callback with which parsed\n * {@link https://rdf.js.org/data-model-spec/|RDF/JS Quads} can be provided to\n * `@inrupt/solid-client`.\n * - `onError`: Registers the callback with which `@inrupt/solid-client` can be\n * notified of errors parsing the input.\n * - `onComplete`: Registers the callback with which `@inrupt/solid-client` can\n * be notified that parsing is complete.\n * - `parse`: Accepts the serialised input string and an object containing the\n * input Resource's metadata.\n * The input metadata can be read using functions like [[getSourceUrl]] and\n * [[getContentType]].\n *\n * For example, the following defines a parser that reads an RDFa serialisation\n * using the\n * [rdfa-streaming-parser](https://www.npmjs.com/package/rdfa-streaming-parser)\n * library:\n *\n * ```javascript\n * import { RdfaParser } from \"rdfa-streaming-parser\";\n *\n * // ...\n *\n * const getRdfaParser = () => {\n *   const onQuadCallbacks = [];\n *   const onCompleteCallbacks = [];\n *   const onErrorCallbacks = [];\n *\n *   return {\n *     onQuad: (callback) => onQuadCallbacks.push(callback),\n *     onError: (callback) => onErrorCallbacks.push(callback),\n *     onComplete: (callback) => onCompleteCallbacks.push(callback),\n *     parse: async (source, resourceInfo) => {\n *       const parser = new RdfaParser({\n *         baseIRI: getSourceUrl(resourceInfo),\n *         contentType: getContentType(resourceInfo) ?? \"text/html\",\n *       });\n *       parser.on(\"data\", (quad) => {\n *         onQuadCallbacks.forEach((callback) => callback(quad));\n *       });\n *       parser.on(\"error\", (error) => {\n *         onErrorCallbacks.forEach((callback) => callback(error));\n *       });\n *       parser.write(source);\n *       parser.end();\n *       onCompleteCallbacks.forEach((callback) => callback());\n *     },\n *   };\n * };\n * ```\n */\nexport type Parser = {\n  onQuad: (onQuadCallback: (quad: Quad) => void) => void;\n  onError: (onErrorCallback: (error: unknown) => void) => void;\n  onComplete: (onCompleteCallback: () => void) => void;\n  parse: (source: string, resourceInfo: WithServerResourceInfo) => void;\n};\ntype ContentType = string;\n/**\n * Custom parsers to load [[SolidDataset]]s serialised in different RDF formats.\n *\n * Provide your own parsers by providing an object on the `parsers` property\n * with the supported content type as the key, and the parser as a value.\n * For documentation on how to provide a parser, see [[Parser]].\n */\nexport type ParseOptions = {\n  parsers: Record<ContentType, Parser>;\n};\n/**\n * @hidden This interface is not exposed yet until we've tried it out in practice.\n */\nexport async function responseToSolidDataset(\n  response: Response,\n  parseOptions: Partial<ParseOptions> = {},\n): Promise<SolidDataset & WithServerResourceInfo> {\n  if (internal_isUnsuccessfulResponse(response)) {\n    throw new FetchError(\n      `Fetching the SolidDataset at [${response.url}] failed: [${\n        response.status\n      }] [${response.statusText}] ${await response.text()}.`,\n      response,\n    );\n  }\n\n  const resourceInfo = responseToResourceInfo(response);\n\n  const parsers: Record<ContentType, Parser> = {\n    \"text/turtle\": getTurtleParser(),\n    ...parseOptions.parsers,\n  };\n  const contentType = getContentType(resourceInfo);\n  if (contentType === null) {\n    throw new Error(\n      `Could not determine the content type of the Resource at [${getSourceUrl(\n        resourceInfo,\n      )}].`,\n    );\n  }\n\n  const mimeType = contentType.split(\";\")[0];\n  const parser = parsers[mimeType];\n  if (typeof parser === \"undefined\") {\n    throw new Error(\n      `The Resource at [${getSourceUrl(\n        resourceInfo,\n      )}] has a MIME type of [${mimeType}], but the only parsers available are for the following MIME types: [${Object.keys(\n        parsers,\n      ).join(\", \")}].`,\n    );\n  }\n\n  const data = await response.text();\n  const parsingPromise = new Promise<SolidDataset & WithServerResourceInfo>(\n    (resolve, reject) => {\n      let solidDataset: SolidDataset = freeze({\n        graphs: freeze({ default: freeze({}) }),\n        type: \"Dataset\",\n      });\n\n      // While Quads without Blank Nodes can be added to the SolidDataset as we\n      // encounter them, to parse Quads with Blank Nodes, we'll have to wait until\n      // we've seen all the Quads, so that we can reconcile equal Blank Nodes.\n      const quadsWithBlankNodes: Quad[] = [];\n      const allQuads: Quad[] = [];\n\n      parser.onError((error) => {\n        reject(\n          new Error(\n            `Encountered an error parsing the Resource at [${getSourceUrl(\n              resourceInfo,\n            )}] with content type [${contentType}]: ${error}`,\n          ),\n        );\n      });\n      parser.onQuad((quad) => {\n        allQuads.push(quad);\n        if (\n          quad.subject.termType === \"BlankNode\" ||\n          quad.object.termType === \"BlankNode\"\n        ) {\n          // Quads with Blank Nodes will be parsed when all Quads are known,\n          // so that equal Blank Nodes can be reconciled:\n          quadsWithBlankNodes.push(quad);\n        } else {\n          solidDataset = addRdfJsQuadToDataset(solidDataset, quad);\n        }\n      });\n      parser.onComplete(async () => {\n        // If a Resource contains more than this number of Blank Nodes,\n        // we consider the detection of chains (O(n^2), I think) to be too\n        // expensive, and just incorporate them as regular Blank Nodes with\n        // non-deterministic, ad-hoc identifiers into the SolidDataset:\n        const maxBlankNodesToDetectChainsFor = 20;\n        // Some Blank Nodes only serve to use a set of Quads as the Object for a\n        // single Subject. Those Quads will be added to the SolidDataset when\n        // their Subject's Blank Node is encountered in the Object position.\n        const chainBlankNodes =\n          quadsWithBlankNodes.length <= maxBlankNodesToDetectChainsFor\n            ? getChainBlankNodes(quadsWithBlankNodes)\n            : [];\n        const quadsWithoutChainBlankNodeSubjects = quadsWithBlankNodes.filter(\n          (quad) =>\n            chainBlankNodes.every(\n              (chainBlankNode) => !chainBlankNode.equals(quad.subject),\n            ),\n        );\n        solidDataset = quadsWithoutChainBlankNodeSubjects.reduce(\n          (datasetAcc, quad) =>\n            addRdfJsQuadToDataset(datasetAcc, quad, {\n              otherQuads: allQuads,\n              chainBlankNodes,\n            }),\n          solidDataset,\n        );\n        const solidDatasetWithResourceInfo: SolidDataset &\n          WithServerResourceInfo = freeze({\n          ...solidDataset,\n          ...resourceInfo,\n        });\n        resolve(solidDatasetWithResourceInfo);\n      });\n\n      parser.parse(data, resourceInfo);\n    },\n  );\n\n  return parsingPromise;\n}\n\n/**\n * Fetch a SolidDataset from the given URL. Currently requires the SolidDataset to be available as [Turtle](https://www.w3.org/TR/turtle/).\n *\n * Note that the URL of a container ends with a [trailing slash \"/\"](https://solidproject.org/TR/protocol#uri).\n * If it is missing, some libraries will add it automatically, which may result in additional round-trips, possibly including\n * authentication errors ([more information](https://github.com/inrupt/solid-client-js/issues/1216#issuecomment-904703695)).\n *\n * @param url URL to fetch a [[SolidDataset]] from.\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\n * @returns Promise resolving to a [[SolidDataset]] containing the data at the given Resource, or rejecting if fetching it failed.\n */\nexport async function getSolidDataset(\n  url: UrlString | Url,\n  options?: Partial<{ fetch: typeof fetch } & ParseOptions>,\n): Promise<SolidDataset & WithServerResourceInfo> {\n  const normalizedUrl = normalizeUrl(internal_toIriString(url));\n  const parserContentTypes = Object.keys(options?.parsers ?? {});\n  const acceptedContentTypes =\n    parserContentTypes.length > 0\n      ? parserContentTypes.join(\", \")\n      : \"text/turtle\";\n  const response = await (options?.fetch ?? fetch)(normalizedUrl, {\n    headers: {\n      Accept: acceptedContentTypes,\n    },\n  });\n  if (internal_isUnsuccessfulResponse(response)) {\n    throw new FetchError(\n      `Fetching the Resource at [${normalizedUrl}] failed: [${\n        response.status\n      }] [${response.statusText}] ${await response.text()}.`,\n      response,\n    );\n  }\n  const solidDataset = await responseToSolidDataset(response, options);\n\n  return solidDataset;\n}\n\ntype UpdateableDataset = SolidDataset &\n  WithChangeLog &\n  WithServerResourceInfo & { internal_resourceInfo: { sourceIri: IriString } };\n\n/**\n * Create a SPARQL UPDATE Patch request from a [[SolidDataset]] with a changelog.\n * @param solidDataset the [[SolidDataset]] that has been locally updated, and that should be persisted.\n * @returns an HTTP PATCH request configuration object, aligned with the [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters), containing a SPARQL UPDATE.\n * @hidden\n */\nasync function prepareSolidDatasetUpdate(\n  solidDataset: UpdateableDataset,\n): Promise<RequestInit> {\n  const deleteStatement =\n    solidDataset.internal_changeLog.deletions.length > 0\n      ? `DELETE DATA {${(\n          await triplesToTurtle(\n            solidDataset.internal_changeLog.deletions.map(\n              getNamedNodesForLocalNodes,\n            ),\n          )\n        ).trim()}};`\n      : \"\";\n  const insertStatement =\n    solidDataset.internal_changeLog.additions.length > 0\n      ? `INSERT DATA {${(\n          await triplesToTurtle(\n            solidDataset.internal_changeLog.additions.map(\n              getNamedNodesForLocalNodes,\n            ),\n          )\n        ).trim()}};`\n      : \"\";\n\n  return {\n    method: \"PATCH\",\n    body: `${deleteStatement} ${insertStatement}`,\n    headers: {\n      \"Content-Type\": \"application/sparql-update\",\n    },\n  };\n}\n\n/**\n * Create a Put request to write a locally created [[SolidDataset]] to a Pod.\n * @param solidDataset the [[SolidDataset]] that has been locally updated, and that should be persisted.\n * @returns an HTTP PUT request configuration object, aligned with the [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters), containing a serialization of the [[SolidDataset]].\n * @hidden\n */\nasync function prepareSolidDatasetCreation(\n  solidDataset: SolidDataset,\n  options?: Partial<{ prefixes: Record<string, string> }>,\n): Promise<RequestInit> {\n  return {\n    method: \"PUT\",\n    body: await triplesToTurtle(\n      toRdfJsQuads(solidDataset).map(getNamedNodesForLocalNodes),\n      options,\n    ),\n    headers: {\n      \"Content-Type\": \"text/turtle\",\n      \"If-None-Match\": \"*\",\n      Link: `<${ldp.Resource}>; rel=\"type\"`,\n    },\n  };\n}\n\n/**\n * Given a SolidDataset, store it in a Solid Pod (overwriting the existing data at the given URL).\n *\n * A SolidDataset keeps track of the data changes compared to the data in the Pod; i.e.,\n * the changelog tracks both the old value and new values of the property being modified. This\n * function applies the changes to the current SolidDataset. If the old value specified in the\n * changelog does not correspond to the value currently in the Pod, this function will throw an\n * error (common issues are listed in [the documentation](https://docs.inrupt.com/developer-tools/javascript/client-libraries/reference/error-codes/)).\n *\n * The SolidDataset returned by this function will contain the data sent to the Pod, and a ChangeLog\n * up-to-date with the saved data. Note that if the data on the server was modified in between the\n * first fetch and saving it, the updated data will not be reflected in the returned SolidDataset.\n * To make sure you have the latest data, call [[getSolidDataset]] again after saving the data.\n *\n * The Solid server will create any intermediary Containers that do not exist yet, so they do not\n * need to be created in advance. For example, if the target URL is\n * https://example.pod/container/resource and https://example.pod/container/ does not exist yet,\n * it will exist after this function resolves successfully.\n *\n * @param url URL to save `solidDataset` to.\n * @param solidDataset The [[SolidDataset]] to save.\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\n *  `options.prefixes`: A prefix map to customize the serialization. Only applied on resource creation if the serialization allows it.\n * @returns A Promise resolving to a [[SolidDataset]] containing the stored data, or rejecting if saving it failed.\n */\nexport async function saveSolidDatasetAt<Dataset extends SolidDataset>(\n  url: UrlString | Url,\n  solidDataset: Dataset,\n  options?: Partial<\n    { fetch?: typeof fetch } & { prefixes: Record<string, string> }\n  >,\n): Promise<Dataset & WithServerResourceInfo & WithChangeLog> {\n  const targetUrl = normalizeUrl(internal_toIriString(url));\n  const datasetWithChangelog = internal_withChangeLog(solidDataset);\n\n  const requestInit = isUpdate(datasetWithChangelog, targetUrl)\n    ? await prepareSolidDatasetUpdate(datasetWithChangelog)\n    : await prepareSolidDatasetCreation(datasetWithChangelog, options);\n\n  const response = await (options?.fetch ?? fetch)(targetUrl, requestInit);\n\n  if (internal_isUnsuccessfulResponse(response)) {\n    const diagnostics = isUpdate(datasetWithChangelog, targetUrl)\n      ? `The changes that were sent to the Pod are listed below.\\n\\n${changeLogAsMarkdown(\n          datasetWithChangelog,\n        )}`\n      : `The SolidDataset that was sent to the Pod is listed below.\\n\\n${solidDatasetAsMarkdown(\n          datasetWithChangelog,\n        )}`;\n    throw new FetchError(\n      `Storing the Resource at [${targetUrl}] failed: [${response.status}] [${\n        response.statusText\n      }] ${await response.text()}.\\n\\n${diagnostics}`,\n      response,\n    );\n  }\n\n  const resourceInfo: WithServerResourceInfo[\"internal_resourceInfo\"] = {\n    ...internal_parseResourceInfo(response),\n    isRawData: false,\n  };\n  const storedDataset: Dataset & WithChangeLog & WithServerResourceInfo =\n    freeze({\n      ...solidDataset,\n      internal_changeLog: { additions: [], deletions: [] },\n      internal_resourceInfo: resourceInfo,\n    });\n\n  const storedDatasetWithResolvedIris =\n    resolveLocalIrisInSolidDataset(storedDataset);\n\n  return storedDatasetWithResolvedIris;\n}\n\n/**\n * Deletes the SolidDataset at a given URL.\n *\n * If operating on a container, the container must be empty otherwise a 409 CONFLICT will be raised.\n *\n * @param solidDataset The URL of the SolidDataset to delete or the SolidDataset itself (if it has ResourceInfo).\n * @since 0.6.0\n */\nexport async function deleteSolidDataset(\n  solidDataset: Url | UrlString | WithResourceInfo,\n  options?: { fetch?: typeof fetch },\n): Promise<void> {\n  const url = hasResourceInfo(solidDataset)\n    ? internal_toIriString(getSourceUrl(solidDataset))\n    : normalizeUrl(internal_toIriString(solidDataset));\n  const response = await (options?.fetch ?? fetch)(url, { method: \"DELETE\" });\n\n  if (internal_isUnsuccessfulResponse(response)) {\n    throw new FetchError(\n      `Deleting the SolidDataset at [${url}] failed: [${response.status}] [${\n        response.statusText\n      }] ${await response.text()}.`,\n      response,\n    );\n  }\n}\n\n/**\n * Create a Container at the given URL. Some content may optionally be specified,\n * e.g. to add metadata describing the container.\n *\n * Throws an error if creating the Container failed, e.g. because the current user does not have\n * permissions to, or because the Container already exists.\n *\n * Note that a Solid server will automatically create the necessary Containers when storing a\n * Resource; i.e. there is no need to call this function if it is immediately followed by\n * [[saveSolidDatasetAt]] or [[overwriteFile]].\n *\n * @param url URL of the empty Container that is to be created.\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\n * @param solidDataset Optional parameter - if provided we use this dataset as the body of the HTT request, meaning it's data is included in the Container resource.\n * @since 0.2.0\n */\nexport async function createContainerAt(\n  url: UrlString | Url,\n  options: {\n    fetch?: typeof fetch;\n    initialContent?: SolidDataset;\n  } = {},\n): Promise<SolidDataset & WithServerResourceInfo> {\n  const normalizedUrl = normalizeUrl(internal_toIriString(url), {\n    trailingSlash: true,\n  });\n  const response = await (options.fetch ?? fetch)(normalizedUrl, {\n    method: \"PUT\",\n    body: options.initialContent\n      ? await triplesToTurtle(\n          toRdfJsQuads(options.initialContent).map(getNamedNodesForLocalNodes),\n        )\n      : undefined,\n    headers: {\n      Accept: \"text/turtle\",\n      \"Content-Type\": \"text/turtle\",\n      \"If-None-Match\": \"*\",\n      // This header should not be required to create a Container,\n      // but ESS currently expects it:\n      Link: `<${ldp.BasicContainer}>; rel=\"type\"`,\n    },\n  });\n\n  if (internal_isUnsuccessfulResponse(response)) {\n    const containerType =\n      options.initialContent === undefined ? \"empty\" : \"non-empty\";\n    throw new FetchError(\n      `Creating the ${containerType} Container at [${url}] failed: [${\n        response.status\n      }] [${response.statusText}] ${await response.text()}.`,\n      response,\n    );\n  }\n\n  const resourceInfo = internal_parseResourceInfo(response);\n  const containerDataset: SolidDataset &\n    WithChangeLog &\n    WithServerResourceInfo = freeze({\n    ...(options.initialContent ?? createSolidDataset()),\n    internal_changeLog: { additions: [], deletions: [] },\n    internal_resourceInfo: resourceInfo,\n  });\n\n  return containerDataset;\n}\n\nfunction isSourceIriEqualTo(\n  dataset: SolidDataset & WithResourceInfo,\n  iri: IriString,\n): boolean {\n  return (\n    normalizeServerSideIri(dataset.internal_resourceInfo.sourceIri) ===\n    normalizeServerSideIri(iri)\n  );\n}\n\nfunction isUpdate(\n  solidDataset: SolidDataset,\n  url: UrlString,\n): solidDataset is UpdateableDataset {\n  return (\n    hasChangelog(solidDataset) &&\n    hasResourceInfo(solidDataset) &&\n    typeof solidDataset.internal_resourceInfo.sourceIri === \"string\" &&\n    isSourceIriEqualTo(solidDataset, url)\n  );\n}\n\ntype SaveInContainerOptions = {\n  fetch?: typeof fetch;\n  slugSuggestion?: string;\n};\n\n/**\n * Given a SolidDataset, store it in a Solid Pod in a new Resource inside a Container.\n *\n * The Container at the given URL should already exist; if it does not, you can initialise it first\n * using [[createContainerAt]], or directly save the SolidDataset at the desired location using\n * [[saveSolidDatasetAt]].\n *\n * This function is primarily useful if the current user does not have access to change existing files in\n * a Container, but is allowed to add new files; in other words, they have Append, but not Write\n * access to a Container. This is useful in situations where someone wants to allow others to,\n * for example, send notifications to their Pod, but not to view or delete existing notifications.\n * You can pass a suggestion for the new Resource's name, but the server may decide to give it\n * another name — for example, if a Resource with that name already exists inside the given\n * Container.\n * If the user does have access to write directly to a given location, [[saveSolidDatasetAt]]\n * will do the job just fine, and does not require the parent Container to exist in advance.\n *\n * @param containerUrl URL of the Container in which to create a new Resource.\n * @param solidDataset The [[SolidDataset]] to save to a new Resource in the given Container.\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\n * @returns A Promise resolving to a [[SolidDataset]] containing the saved data. The Promise rejects if the save failed.\n */\nexport async function saveSolidDatasetInContainer(\n  containerUrl: UrlString | Url,\n  solidDataset: SolidDataset,\n  options?: SaveInContainerOptions,\n): Promise<SolidDataset & WithResourceInfo> {\n  const normalizedUrl = normalizeUrl(internal_toIriString(containerUrl), {\n    trailingSlash: true,\n  });\n\n  const rawTurtle = await triplesToTurtle(\n    toRdfJsQuads(solidDataset).map(getNamedNodesForLocalNodes),\n  );\n  const headers: RequestInit[\"headers\"] = {\n    \"Content-Type\": \"text/turtle\",\n    Link: `<${ldp.Resource}>; rel=\"type\"`,\n  };\n  if (options?.slugSuggestion) {\n    headers.slug = options.slugSuggestion;\n  }\n  const response = await (options?.fetch ?? fetch)(normalizedUrl, {\n    method: \"POST\",\n    body: rawTurtle,\n    headers,\n  });\n\n  if (internal_isUnsuccessfulResponse(response)) {\n    throw new FetchError(\n      `Storing the Resource in the Container at [${normalizedUrl}] failed: [${\n        response.status\n      }] [${response.statusText}] ${await response.text()}.\\n\\n` +\n        `The SolidDataset that was sent to the Pod is listed below.\\n\\n${solidDatasetAsMarkdown(\n          solidDataset,\n        )}`,\n      response,\n    );\n  }\n\n  const internalResourceInfo = internal_parseResourceInfo(response);\n\n  if (!internalResourceInfo.location) {\n    throw new Error(\n      \"Could not determine the location of the newly saved SolidDataset.\",\n    );\n  }\n\n  let resourceIri;\n\n  try {\n    // Try to parse the location header as a URL (safe if it's an absolute URL)``\n    // This should help determine the container URL if normalisation happened on the server side.\n    resourceIri = new URL(internalResourceInfo.location).href;\n  } catch (e) {\n    // If it's a relative URL then, rely on the response.url to construct the sourceIri\n    resourceIri = new URL(internalResourceInfo.location, response.url).href;\n  }\n\n  const resourceInfo: WithResourceInfo = {\n    internal_resourceInfo: {\n      isRawData: false,\n      sourceIri: resourceIri,\n    },\n  };\n\n  const resourceWithResourceInfo: SolidDataset & WithResourceInfo = freeze({\n    ...solidDataset,\n    ...resourceInfo,\n  });\n\n  const resourceWithResolvedIris = resolveLocalIrisInSolidDataset(\n    resourceWithResourceInfo,\n  );\n\n  return resourceWithResolvedIris;\n}\n\n/**\n * Create an empty Container inside the Container at the given URL.\n *\n * Throws an error if creating the Container failed, e.g. because the current user does not have\n * permissions to.\n *\n * The Container in which to create the new Container should itself already exist.\n *\n * This function is primarily useful if the current user does not have access to change existing files in\n * a Container, but is allowed to add new files; in other words, they have Append, but not Write\n * access to a Container. This is useful in situations where someone wants to allow others to,\n * for example, send notifications to their Pod, but not to view or delete existing notifications.\n * You can pass a suggestion for the new Resource's name, but the server may decide to give it\n * another name — for example, if a Resource with that name already exists inside the given\n * Container.\n * If the user does have access to write directly to a given location, [[createContainerAt]]\n * will do the job just fine, and does not require the parent Container to exist in advance.\n *\n * @param containerUrl URL of the Container in which the empty Container is to\n * be created.\n * @param options Optional parameter `options.fetch`: An alternative `fetch`\n * function to make the HTTP request, compatible with the browser-native [fetch\n * API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).`options.slugSuggestion`\n * accepts a string for your new Container's name.\n * @returns A promise that resolves to a SolidDataset with ResourceInfo if\n * successful, and that rejects otherwise.\n * @since 0.2.0\n */\nexport async function createContainerInContainer(\n  containerUrl: UrlString | Url,\n  options?: SaveInContainerOptions,\n): Promise<SolidDataset & WithResourceInfo> {\n  const normalizedUrl = normalizeUrl(internal_toIriString(containerUrl), {\n    trailingSlash: true,\n  });\n  const headers: RequestInit[\"headers\"] = {\n    \"Content-Type\": \"text/turtle\",\n    Link: `<${ldp.BasicContainer}>; rel=\"type\"`,\n  };\n  if (options?.slugSuggestion) {\n    headers.slug = options.slugSuggestion;\n  }\n  const response = await (options?.fetch ?? fetch)(normalizedUrl, {\n    method: \"POST\",\n    headers,\n  });\n\n  if (internal_isUnsuccessfulResponse(response)) {\n    throw new FetchError(\n      `Creating an empty Container in the Container at [${normalizedUrl}] failed: [${\n        response.status\n      }] [${response.statusText}] ${await response.text()}.`,\n      response,\n    );\n  }\n\n  const internalResourceInfo = internal_parseResourceInfo(response);\n\n  if (!internalResourceInfo.location) {\n    throw new Error(\n      \"Could not determine the location of the newly created Container.\",\n    );\n  }\n  try {\n    // Try to parse the location header as a URL (safe if it's an absolute URL)``\n    // This should help determine the container URL if normalisation happened on the server side.\n    const sourceIri = new URL(internalResourceInfo.location).toString();\n    return freeze({\n      ...createSolidDataset(),\n      internal_resourceInfo: {\n        ...internalResourceInfo,\n        sourceIri,\n      },\n    });\n  } catch (e) {\n    // If it's a relative URL then, rely on the response.url to construct the sourceIri\n  }\n\n  return freeze({\n    ...createSolidDataset(),\n    internal_resourceInfo: {\n      ...internalResourceInfo,\n      sourceIri: new URL(internalResourceInfo.location, response.url).href,\n    },\n  });\n}\n\n/**\n * Deletes the Container at a given URL.\n *\n * @param container The URL of the Container to delete or the Container Dataset itself (if it has ResourceInfo).\n * @since 0.6.0\n */\nexport async function deleteContainer(\n  container: Url | UrlString | WithResourceInfo,\n  options?: { fetch?: typeof fetch },\n): Promise<void> {\n  const normalizedUrl = hasResourceInfo(container)\n    ? internal_toIriString(getSourceUrl(container))\n    : normalizeUrl(internal_toIriString(container));\n\n  if (!isContainer(container)) {\n    throw new Error(\n      `You're trying to delete the Container at [${normalizedUrl}], but Container URLs should end in a \\`/\\`. Are you sure this is a Container?`,\n    );\n  }\n\n  const response = await (options?.fetch ?? fetch)(normalizedUrl, {\n    method: \"DELETE\",\n  });\n\n  if (internal_isUnsuccessfulResponse(response)) {\n    throw new FetchError(\n      `Deleting the Container at [${normalizedUrl}] failed: [${\n        response.status\n      }] [${response.statusText}] ${await response.text()}.`,\n      response,\n    );\n  }\n}\n\nfunction isChildResource(a: string, b: string): boolean {\n  const parent = new URL(b);\n  const child = new URL(a);\n  // Explicitly test on the whole URL to enforce similar origins.\n  const isAncestor = child.href.startsWith(parent.href);\n  const relativePath = child.pathname\n    .substring(parent.pathname.length, child.pathname.length)\n    .replace(/(^\\/)|(\\/$)/g, \"\");\n  // The child path component that isn't present in the parent should only\n  // potentially include slashes at the end (if it is a container).\n  return isAncestor && relativePath.length >= 1 && !relativePath.includes(\"/\");\n}\n\n/**\n * Given a [[SolidDataset]] representing a Container (see [[isContainer]]), fetch the URLs of all\n * contained resources that respect [slash semantics](https://solidproject.org/TR/protocol#uri-slash-semantics)\n * (see {@link validateContainedResourceAll}).\n * If the solidDataset given is not a container, or is missing resourceInfo, throw an error.\n *\n * @param solidDataset The container from which to fetch all contained Resource URLs.\n * @returns A list of URLs, each of which points to a contained Resource of the given SolidDataset.\n * @since 1.3.0\n */\n\nexport function getContainedResourceUrlAll(\n  solidDataset: SolidDataset & WithResourceInfo,\n): UrlString[] {\n  const containerUrl = getSourceUrl(solidDataset);\n  const container = getThing(solidDataset, containerUrl);\n  if (container === null) {\n    return [];\n  }\n  // See https://www.w3.org/TR/2015/REC-ldp-20150226/#h-ldpc-http_post:\n  // > a containment triple MUST be added to the state of the LDPC whose subject is the LDPC URI,\n  // > whose predicate is ldp:contains and whose object is the URI for the newly created document\n  return (\n    getIriAll(container, ldp.contains)\n      // See https://solidproject.org/TR/protocol#resource-containment\n      .filter((childUrl) => isChildResource(childUrl, containerUrl))\n  );\n}\n\n/**\n * Given a {@link SolidDataset} representing a [Container](https://solidproject.org/TR/protocol#resource-containment)\n * (see {@link isContainer}), verify that all its containment claims are valid. Containment of a resource is valid if\n * it respects [slash semantics](https://solidproject.org/TR/protocol#uri-slash-semantics).\n *\n * For the example, given a container at https://example.org/container/:\n *  - The following resources are valid:\n *    - https://example.org/container/resource\n *    - https://example.org/container/subcontainer/\n *  - The following resources are invalid:\n *    - https://example.org/container/resource/invalid (not a direct child resource)\n *    - https://example.org/container2 (not a child resource)\n *    - https://domain2.example.org/container/resource (not a direct child resource)\n *\n * If a component claim is invalid, {@link validateContainedResourceAll} returns the invalid component's URL\n * as part of its return object.\n *\n * Note: It is recommended that this function always be used before calling\n * {@link getContainedResourceUrlAll} since {@link getContainedResourceUrlAll} does not\n * return Resources for which containment is invalid. Using the function in conjunction\n * with {@link getContainedResourceUrlAll} allows for the detection of unexpected behaviour from servers,\n * including malicious containment triples that could appear. Because ESS conforms to the Solid Protocol,\n * i.e., respects slash semantics for its containment triples, validateContainedResourceAll returns true for\n * containers fetched from ESS.\n *\n * @param solidDataset The container from which containment claims are validated.\n * @returns A validation report, including the offending contained resources URL if any.\n * @since unreleased\n */\nexport function validateContainedResourceAll(\n  solidDataset: SolidDataset & WithResourceInfo,\n): { isValid: boolean; invalidContainedResources: string[] } {\n  const containerUrl = getSourceUrl(solidDataset);\n  const container = getThing(solidDataset, containerUrl);\n  if (container === null) {\n    return { isValid: true, invalidContainedResources: [] };\n  }\n\n  // See https://www.w3.org/TR/2015/REC-ldp-20150226/#h-ldpc-http_post:\n  // > a containment triple MUST be added to the state of the LDPC whose subject is the LDPC URI,\n  // > whose predicate is ldp:contains and whose object is the URI for the newly created document\n  const invalidChildren = getIriAll(container, ldp.contains)\n    // See https://solidproject.org/TR/protocol#resource-containment\n    .filter((childUrl) => !isChildResource(childUrl, containerUrl));\n\n  if (invalidChildren.length > 0) {\n    return { isValid: false, invalidContainedResources: invalidChildren };\n  }\n  return { isValid: true, invalidContainedResources: [] };\n}\n\n/**\n * Gets a human-readable representation of the given SolidDataset to aid debugging.\n *\n * Note that changes to the exact format of the return value are not considered a breaking change;\n * it is intended to aid in debugging, not as a serialisation method that can be reliably parsed.\n *\n * @param solidDataset The [[SolidDataset]] to get a human-readable representation of.\n * @since 0.3.0\n */\nexport function solidDatasetAsMarkdown(solidDataset: SolidDataset): string {\n  let readableSolidDataset = \"\";\n\n  if (hasResourceInfo(solidDataset)) {\n    readableSolidDataset += `# SolidDataset: ${getSourceUrl(solidDataset)}\\n`;\n  } else {\n    readableSolidDataset += `# SolidDataset (no URL yet)\\n`;\n  }\n\n  const things = getThingAll(solidDataset);\n  if (things.length === 0) {\n    readableSolidDataset += \"\\n<empty>\\n\";\n  } else {\n    things.forEach((thing) => {\n      readableSolidDataset += `\\n${thingAsMarkdown(thing)}`;\n      if (hasChangelog(solidDataset)) {\n        readableSolidDataset += `\\n${getReadableChangeLogSummary(\n          solidDataset,\n          thing,\n        )}\\n`;\n      }\n    });\n  }\n\n  return readableSolidDataset;\n}\n\n/**\n * Gets a human-readable representation of the local changes to a Resource to aid debugging.\n *\n * Note that changes to the exact format of the return value are not considered a breaking change;\n * it is intended to aid in debugging, not as a serialisation method that can be reliably parsed.\n *\n * @param solidDataset The Resource of which to get a human-readable representation of the changes applied to it locally.\n * @since 0.3.0\n */\nexport function changeLogAsMarkdown(\n  solidDataset: SolidDataset & WithChangeLog,\n): string {\n  if (!hasResourceInfo(solidDataset)) {\n    return \"This is a newly initialized SolidDataset, so there is no source to compare it to.\";\n  }\n  if (\n    !hasChangelog(solidDataset) ||\n    (solidDataset.internal_changeLog.additions.length === 0 &&\n      solidDataset.internal_changeLog.deletions.length === 0)\n  ) {\n    return (\n      `## Changes compared to ${getSourceUrl(solidDataset)}\\n\\n` +\n      `This SolidDataset has not been modified since it was fetched from ${getSourceUrl(\n        solidDataset,\n      )}.\\n`\n    );\n  }\n\n  let readableChangeLog = `## Changes compared to ${getSourceUrl(\n    solidDataset,\n  )}\\n`;\n\n  const changeLogsByThingAndProperty =\n    sortChangeLogByThingAndProperty(solidDataset);\n  Object.keys(changeLogsByThingAndProperty).forEach((thingUrl) => {\n    readableChangeLog += `\\n### Thing: ${thingUrl}\\n`;\n    const changeLogByProperty = changeLogsByThingAndProperty[thingUrl];\n    Object.keys(changeLogByProperty).forEach((propertyUrl) => {\n      readableChangeLog += `\\nProperty: ${propertyUrl}\\n`;\n      const { deleted } = changeLogByProperty[propertyUrl];\n      const { added } = changeLogByProperty[propertyUrl];\n      if (deleted.length > 0) {\n        readableChangeLog += \"- Removed:\\n\";\n        readableChangeLog += deleted.reduce((acc, deletedValue) => {\n          return `${acc}  - ${internal_getReadableValue(deletedValue)}\\n`;\n        }, \"\");\n      }\n      if (added.length > 0) {\n        readableChangeLog += \"- Added:\\n\";\n        readableChangeLog += added.reduce((acc, addedValue) => {\n          return `${acc}  - ${internal_getReadableValue(addedValue)}\\n`;\n        }, \"\");\n      }\n    });\n  });\n\n  return readableChangeLog;\n}\n\nfunction sortChangeLogByThingAndProperty(\n  solidDataset: WithChangeLog & WithResourceInfo,\n) {\n  const changeLogsByThingAndProperty: Record<\n    UrlString,\n    Record<UrlString, { added: Quad_Object[]; deleted: Quad_Object[] }>\n  > = Object.create(null);\n  solidDataset.internal_changeLog.deletions.forEach((deletion) => {\n    const subjectNode = isLocalNode(deletion.subject)\n      ? /* istanbul ignore next: Unsaved deletions should be removed from the additions list instead, so this code path shouldn't be hit: */\n        resolveIriForLocalNode(deletion.subject, getSourceUrl(solidDataset))\n      : deletion.subject;\n    if (!isNamedNode(subjectNode) || !isNamedNode(deletion.predicate)) {\n      return;\n    }\n    const thingUrl = internal_toIriString(subjectNode);\n    const propertyUrl = internal_toIriString(deletion.predicate);\n    changeLogsByThingAndProperty[thingUrl] ??= Object.create(null);\n    changeLogsByThingAndProperty[thingUrl][propertyUrl] ??= {\n      added: [],\n      deleted: [],\n    };\n    changeLogsByThingAndProperty[thingUrl][propertyUrl].deleted.push(\n      deletion.object,\n    );\n  });\n  solidDataset.internal_changeLog.additions.forEach((addition) => {\n    const subjectNode = isLocalNode(addition.subject)\n      ? /* istanbul ignore next: setThing already resolves local Subjects when adding them, so this code path should never be hit. */\n        resolveIriForLocalNode(addition.subject, getSourceUrl(solidDataset))\n      : addition.subject;\n    if (!isNamedNode(subjectNode) || !isNamedNode(addition.predicate)) {\n      return;\n    }\n    const thingUrl = internal_toIriString(subjectNode);\n    const propertyUrl = internal_toIriString(addition.predicate);\n    changeLogsByThingAndProperty[thingUrl] ??= Object.create(null);\n    changeLogsByThingAndProperty[thingUrl][propertyUrl] ??= {\n      added: [],\n      deleted: [],\n    };\n    changeLogsByThingAndProperty[thingUrl][propertyUrl].added.push(\n      addition.object,\n    );\n  });\n\n  return changeLogsByThingAndProperty;\n}\n\nfunction getReadableChangeLogSummary(\n  solidDataset: WithChangeLog,\n  thing: Thing,\n): string {\n  const subject = DataFactory.namedNode(thing.url);\n  const nrOfAdditions = solidDataset.internal_changeLog.additions.reduce(\n    (count, addition) => (addition.subject.equals(subject) ? count + 1 : count),\n    0,\n  );\n  const nrOfDeletions = solidDataset.internal_changeLog.deletions.reduce(\n    (count, deletion) => (deletion.subject.equals(subject) ? count + 1 : count),\n    0,\n  );\n  const additionString =\n    nrOfAdditions === 1\n      ? \"1 new value added\"\n      : `${nrOfAdditions} new values added`;\n  const deletionString =\n    nrOfDeletions === 1 ? \"1 value removed\" : `${nrOfDeletions} values removed`;\n  return `(${additionString} / ${deletionString})`;\n}\n\nfunction getNamedNodesForLocalNodes(quad: Quad): Quad {\n  const subject = isNamedNode(quad.subject)\n    ? getNamedNodeFromLocalNode(quad.subject)\n    : /* istanbul ignore next: We don't allow non-NamedNodes as the Subject, so this code path should never be hit: */\n      quad.subject;\n  const object = isNamedNode(quad.object)\n    ? getNamedNodeFromLocalNode(quad.object)\n    : quad.object;\n  return DataFactory.quad(subject, quad.predicate, object, quad.graph);\n}\n\nfunction getNamedNodeFromLocalNode(node: LocalNode | NamedNode): NamedNode {\n  if (isLocalNodeIri(node.value)) {\n    return DataFactory.namedNode(`#${getLocalNodeName(node.value)}`);\n  }\n  return node;\n}\n\nfunction resolveLocalIrisInSolidDataset<\n  Dataset extends SolidDataset & WithResourceInfo,\n>(solidDataset: Dataset): Dataset {\n  const resourceIri = getSourceUrl(solidDataset);\n  const defaultGraph = solidDataset.graphs.default;\n  const thingIris = Object.keys(defaultGraph);\n\n  const updatedDefaultGraph = thingIris.reduce((graphAcc, thingIri) => {\n    const resolvedThing = resolveLocalIrisInThing(\n      graphAcc[thingIri],\n      resourceIri,\n    );\n\n    const resolvedThingIri = isLocalNodeIri(thingIri)\n      ? `${resourceIri}#${getLocalNodeName(thingIri)}`\n      : thingIri;\n    const updatedGraph = { ...graphAcc };\n    delete updatedGraph[thingIri];\n    updatedGraph[resolvedThingIri] = resolvedThing;\n    return freeze(updatedGraph);\n  }, defaultGraph);\n\n  const updatedGraphs = freeze({\n    ...solidDataset.graphs,\n    default: updatedDefaultGraph,\n  });\n\n  return freeze({\n    ...solidDataset,\n    graphs: updatedGraphs,\n  });\n}\n\nfunction resolveLocalIrisInThing(\n  thing: Thing,\n  baseIri: IriString,\n): ThingPersisted {\n  const predicateIris = Object.keys(thing.predicates);\n  const updatedPredicates = predicateIris.reduce(\n    (predicatesAcc, predicateIri) => {\n      const namedNodes = predicatesAcc[predicateIri].namedNodes ?? [];\n      if (namedNodes.every((namedNode) => !isLocalNodeIri(namedNode))) {\n        // This Predicate has no local node Objects, so return it unmodified:\n        return predicatesAcc;\n      }\n      const updatedNamedNodes = freeze(\n        namedNodes.map((namedNode) =>\n          isLocalNodeIri(namedNode)\n            ? `${baseIri}#${getLocalNodeName(namedNode)}`\n            : namedNode,\n        ),\n      );\n      const updatedPredicate = freeze({\n        ...predicatesAcc[predicateIri],\n        namedNodes: updatedNamedNodes,\n      });\n      return freeze({\n        ...predicatesAcc,\n        [predicateIri]: updatedPredicate,\n      });\n    },\n    thing.predicates,\n  );\n\n  return freeze({\n    ...thing,\n    predicates: updatedPredicates,\n    url: isLocalNodeIri(thing.url)\n      ? `${baseIri}#${getLocalNodeName(thing.url)}`\n      : thing.url,\n  });\n}\n\n/**\n * @hidden\n *\n * Fetch a SolidDataset containing information about the capabilities of the\n * storage server that hosts the given resource URL. For more information,\n * please see the [ESS\n * Documentation](https://docs.inrupt.com/ess/latest/services/discovery-endpoint/#well-known-solid).\n *\n * **Note:** The data contained in this dataset has changed between ESS 1.1 and\n * ESS 2.0, as such you will need to check for multiple predicates to support\n * both versions.\n *\n * ```typescript\n * const wellKnown = await getWellKnownSolid(resource);\n *\n * // The wellKnown dataset uses a blank node for the subject all of it’s predicates,\n * // such that we need to call getThingAll with acceptBlankNodes set to true to\n * // retrieve back predicates contained within the dataset\n * const wellKnownSubjects = getThingAll(wellKnown, {\n *   acceptBlankNodes: true,\n * });\n * const wellKnownSubject = wellKnownSubjects[0];\n *\n * // Retrieve a value from the wellKnown dataset:\n * let notificationGateway = getIri(\n *   wellKnownSubject,\n *   \"http://www.w3.org/ns/solid/terms#notificationGateway\"\n * );\n * ```\n *\n *\n * @param url URL of a Resource.\n * @param options Optional parameter `options.fetch`: An alternative `fetch`\n * function to make the HTTP request, compatible with the browser-native [fetch\n * API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\n * @returns Promise resolving to a [[SolidDataset]] containing the data at\n * '.well-known/solid' for the given Resource, or rejecting if fetching it\n * failed.\n * @since 1.12.0\n */\nexport async function getWellKnownSolid(\n  url: UrlString | Url,\n  options?: Partial<{ fetch?: typeof fetch } & ParseOptions>,\n): Promise<SolidDataset & WithServerResourceInfo> {\n  const urlString = internal_toIriString(url);\n\n  // Try to fetch the well-known solid dataset from the server's root\n  try {\n    const wellKnownSolidUrl = new URL(\n      \"/.well-known/solid\",\n      new URL(urlString).origin,\n    ).href;\n\n    return await getSolidDataset(wellKnownSolidUrl);\n  } catch (e) {\n    // In case of error, do nothing and try to discover the .well-known\n    // at the pod's root.\n  }\n\n  // 1.1s implementation:\n  const resourceMetadata = await getResourceInfo(urlString, {\n    fetch: options?.fetch,\n    // Discovering the .well-known/solid document is useful even for resources\n    // we don't have access to.\n    ignoreAuthenticationErrors: true,\n  });\n  const linkedResources = getLinkedResourceUrlAll(resourceMetadata);\n  const rootResources = linkedResources[pim.storage];\n  const rootResource = rootResources?.length === 1 ? rootResources[0] : null;\n  // If pod root (storage) was advertised, retrieve well known solid from pod's root\n  if (rootResource !== null) {\n    const wellKnownSolidUrl = new URL(\n      \".well-known/solid\",\n      rootResource.endsWith(\"/\") ? rootResource : `${rootResource}/`,\n    ).href;\n    return getSolidDataset(wellKnownSolidUrl, {\n      ...options,\n      parsers: {\n        \"application/ld+json\": getJsonLdParser(),\n      },\n    });\n  }\n\n  throw new Error(\n    \"Could not determine storage root or well-known solid resource.\",\n  );\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\nimport type {\n  Url,\n  UrlString,\n  SolidDataset,\n  File,\n  WithServerResourceInfo,\n} from \"../interfaces\";\nimport { internal_toIriString } from \"../interfaces.internal\";\nimport type { getSolidDataset } from \"./solidDataset\";\nimport { createSolidDataset } from \"./solidDataset\";\nimport type { getFile } from \"./file\";\nimport { FetchError } from \"./resource\";\n\ntype Unpromisify<T> = T extends Promise<infer R> ? R : T;\n\n/**\n * ```{warning}\n * Do not use this function in production code. For use in **unit tests**.\n * ```\n *\n * This function initialises a new [[SolidDataset]] with metadata as though the\n * SolidDataset has been retrieved from the given URL. The mock SolidDataset can be used in\n * unit tests that require persisted SolidDatasets; e.g., unit tests that call [[getSourceUrl]].\n *\n * @param url The URL from which the returned SolidDataset appears to be retrieved.\n * @returns A mock SolidDataset that appears to be retrieved from the `url`.\n * @since 0.2.0\n */\nexport function mockSolidDatasetFrom(\n  url: Url | UrlString,\n): Unpromisify<ReturnType<typeof getSolidDataset>> {\n  const solidDataset = createSolidDataset();\n  const solidDatasetWithResourceInfo: SolidDataset & WithServerResourceInfo = {\n    ...solidDataset,\n    internal_resourceInfo: {\n      sourceIri: internal_toIriString(url),\n      isRawData: false,\n      contentType: \"text/turtle\",\n      linkedResources: {},\n    },\n  };\n\n  return solidDatasetWithResourceInfo;\n}\n\n/**\n * ```{warning}\n * Do not use this function in production code. For use in **unit tests**.\n * ```\n *\n * This function initialises a new Container [[SolidDataset]] with metadata as though the\n * Container has been retrieved from the given URL. The mock SolidDataset can be used in\n * unit tests that require persisted Containers; e.g., unit tests that call [[isContainer]].\n *\n * @param url The URL from which the returned Container appears to be retrieved. The `url` must end in a slash.\n * @returns A mock SolidDataset that appears to be retrieved from the `url`.\n * @since 0.2.0\n */\nexport function mockContainerFrom(\n  url: Url | UrlString,\n): Unpromisify<ReturnType<typeof getSolidDataset>> {\n  const sourceIri = internal_toIriString(url);\n  if (!sourceIri.endsWith(\"/\")) {\n    throw new Error(\n      \"A Container's URL should end in a slash. Please update your tests.\",\n    );\n  }\n\n  return mockSolidDatasetFrom(sourceIri);\n}\n\n/**\n * ```{warning}\n * Do not use this function in production code. For use in **unit tests**.\n * ```\n *\n * This function initialises a new File with metadata as though the\n * File has been retrieved from the given URL. The mock File can be used in\n * unit tests that require persisted Files; e.g. unit tests that call [[getSourceUrl]].\n *\n * @param url The URL from which the returned File appears to be retrieved.\n * @returns A mock File that appears to be retrieved from the `url`.\n * @since 0.2.0\n */\nexport function mockFileFrom(\n  url: Url | UrlString,\n  options?: Partial<{\n    contentType: WithServerResourceInfo[\"internal_resourceInfo\"][\"contentType\"];\n  }>,\n): Unpromisify<ReturnType<typeof getFile>> {\n  const file = new Blob();\n  const fileWithResourceInfo: File & WithServerResourceInfo = Object.assign(\n    file,\n    {\n      internal_resourceInfo: {\n        sourceIri: internal_toIriString(url),\n        isRawData: true,\n        contentType: options?.contentType,\n        linkedResources: {},\n      },\n    },\n  );\n\n  return fileWithResourceInfo;\n}\n\n/**\n * ```{warning}\n * Do not use this function in production code. For use in **unit tests**.\n * ```\n *\n * This function initialises a new Error object with metadata as though the\n * it was the result of getting a 404 when trying to fetch the Resource at the\n * given URL. The mock Error can be used in unit tests that require functions\n * that fetch Resources (like [[getSolidDataset]]) to fail.\n *\n * @param url The URL of the Resource that could not be fetched according to the error.\n * @param statusCode Optional status code (defaults to 404) that caused the error.\n * @returns A mock Error that represents not having been able to fetch the Resource at `url` due to a 404 Response.\n * @since 1.1.0\n */\nexport function mockFetchError(\n  fetchedUrl: UrlString,\n  statusCode = 404,\n  statusText = \"Not Found\",\n): FetchError {\n  // The Response constructor in Node 14 makes an empty status text undefined.\n  const failedResponse = new Response(undefined, {\n    status: statusCode,\n    statusText,\n  }) as Response & { ok: false };\n  return new FetchError(\n    `Fetching the Resource at [${fetchedUrl}] failed: [${failedResponse.status}] [${failedResponse.statusText}].`,\n    failedResponse,\n  );\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { Literal, NamedNode, Quad_Object } from \"@rdfjs/types\";\nimport type { UrlString, Url, Thing, IriString } from \"../interfaces\";\nimport { internal_throwIfNotThing } from \"./thing.internal\";\nimport type { XmlSchemaTypeIri, Time } from \"../datatypes\";\nimport {\n  serializeBoolean,\n  serializeDatetime,\n  serializeDate,\n  serializeDecimal,\n  serializeInteger,\n  normalizeLocale,\n  xmlSchemaTypes,\n  internal_isValidUrl,\n  isNamedNode,\n  serializeTime,\n} from \"../datatypes\";\nimport {\n  asIri,\n  isThing,\n  isThingLocal,\n  ValidPropertyUrlExpectedError,\n  ValidValueUrlExpectedError,\n} from \"./thing\";\nimport { internal_toIriString } from \"../interfaces.internal\";\nimport { freeze, getBlankNodeId } from \"../rdf.internal\";\n\n/**\n * Create a new Thing with a URL added for a Property.\n *\n * This preserves existing values for the given Property. To replace them, see [[setUrl]].\n *\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\n *\n * @param thing Thing to add a URL value to.\n * @param property Property for which to add the given URL value.\n * @param url URL to add to `thing` for the given `property`.\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\n */\nexport const addUrl: AddOfType<Url | UrlString | Thing> = (\n  thing,\n  property,\n  url,\n) => {\n  internal_throwIfNotThing(thing);\n  if (!internal_isValidUrl(property)) {\n    throw new ValidPropertyUrlExpectedError(property);\n  }\n  if (!isThing(url) && !internal_isValidUrl(url)) {\n    throw new ValidValueUrlExpectedError(url);\n  }\n\n  const predicateIri = internal_toIriString(property);\n\n  const existingPredicate = thing.predicates[predicateIri] ?? {};\n  const existingNamedNodes = existingPredicate.namedNodes ?? [];\n\n  let iriToAdd: IriString;\n  if (isNamedNode(url)) {\n    iriToAdd = url.value;\n  } else if (typeof url === \"string\") {\n    iriToAdd = url;\n  } else if (isThingLocal(url)) {\n    iriToAdd = url.url;\n  } else {\n    iriToAdd = asIri(url);\n  }\n  const updatedNamedNodes = freeze(\n    existingNamedNodes.concat(internal_toIriString(iriToAdd)),\n  );\n\n  const updatedPredicate = freeze({\n    ...existingPredicate,\n    namedNodes: updatedNamedNodes,\n  });\n  const updatedPredicates = freeze({\n    ...thing.predicates,\n    [predicateIri]: updatedPredicate,\n  });\n  const updatedThing = freeze({\n    ...thing,\n    predicates: updatedPredicates,\n  });\n\n  return updatedThing;\n};\n/** @hidden Alias for [[addUrl]] for those who prefer IRI terminology. */\nexport const addIri = addUrl;\n\n/**\n * Create a new Thing with a boolean added for a Property.\n *\n * This preserves existing values for the given Property. To replace them, see [[setBoolean]].\n *\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\n *\n * @param thing Thing to add a boolean value to.\n * @param property Property for which to add the given boolean value.\n * @param value Boolean to add to `thing` for the given `property`.\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\n */\nexport const addBoolean: AddOfType<boolean> = (thing, property, value) => {\n  internal_throwIfNotThing(thing);\n  return addLiteralOfType(\n    thing,\n    property,\n    serializeBoolean(value),\n    xmlSchemaTypes.boolean,\n  );\n};\n\n/**\n * Create a new Thing with a datetime added for a Property.\n *\n * This preserves existing values for the given Property. To replace them, see [[setDatetime]].\n *\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\n *\n * @param thing Thing to add a datetime value to.\n * @param property Property for which to add the given datetime value.\n * @param value Datetime to add to `thing` for the given `property`.\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\n */\nexport const addDatetime: AddOfType<Date> = (thing, property, value) => {\n  internal_throwIfNotThing(thing);\n  return addLiteralOfType(\n    thing,\n    property,\n    serializeDatetime(value),\n    xmlSchemaTypes.dateTime,\n  );\n};\n\n/**\n * Create a new Thing with a date added for a Property.\n *\n * This preserves existing values for the given Property. To replace them, see [[setDate]].\n *\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\n *\n * @param thing Thing to add a date value to.\n * @param property Property for which to add the given date value.\n * @param value Date to add to `thing` for the given `property`.\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\n * @since 1.10.0\n */\nexport const addDate: AddOfType<Date> = (thing, property, value) => {\n  internal_throwIfNotThing(thing);\n  return addLiteralOfType(\n    thing,\n    property,\n    serializeDate(value),\n    xmlSchemaTypes.date,\n  );\n};\n\n/**\n * Create a new Thing with a time added for a Property.\n *\n * This preserves existing values for the given Property. To replace them, see [[setDatetime]].\n *\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\n *\n * @param thing Thing to add a datetime value to.\n * @param property Property for which to add the given datetime value.\n * @param value time to add to `thing` for the given `property`.\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\n * @since 1.10.0\n */\nexport const addTime: AddOfType<Time> = (thing, property, value) => {\n  internal_throwIfNotThing(thing);\n  return addLiteralOfType(\n    thing,\n    property,\n    serializeTime(value),\n    xmlSchemaTypes.time,\n  );\n};\n\n/**\n * Create a new Thing with a decimal added for a Property.\n *\n * This preserves existing values for the given Property. To replace them, see [[setDecimal]].\n *\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\n *\n * @param thing Thing to add a decimal value to.\n * @param property Property for which to add the given decimal value.\n * @param value Decimal to add to `thing` for the given `property`.\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\n */\nexport const addDecimal: AddOfType<number> = (thing, property, value) => {\n  internal_throwIfNotThing(thing);\n  return addLiteralOfType(\n    thing,\n    property,\n    serializeDecimal(value),\n    xmlSchemaTypes.decimal,\n  );\n};\n\n/**\n * Create a new Thing with an integer added for a Property.\n *\n * This preserves existing values for the given Property. To replace them, see [[setInteger]].\n *\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\n *\n * @param thing Thing to add an integer value to.\n * @param property Property for which to add the given integer value.\n * @param value Integer to add to `thing` for the given `property`.\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\n */\nexport const addInteger: AddOfType<number> = (thing, property, value) => {\n  internal_throwIfNotThing(thing);\n  return addLiteralOfType(\n    thing,\n    property,\n    serializeInteger(value),\n    xmlSchemaTypes.integer,\n  );\n};\n\n/**\n * Create a new Thing with an English string added for a Property.\n *\n * This preserves existing values for the given Property. To replace them, see [[setStringEnglish]].\n *\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\n *\n * @param thing Thing to add a localised string value to.\n * @param property Property for which to add the given string value.\n * @param value String to add to `thing` for the given `property`.\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\n * @since 1.13.0\n */\nexport function addStringEnglish<T extends Thing>(\n  thing: T,\n  property: Url | UrlString,\n  value: string,\n): T {\n  return addStringWithLocale(thing, property, value, \"en\");\n}\n\n/**\n * Create a new Thing with a localised string added for a Property.\n *\n * This preserves existing values for the given Property. To replace them, see [[setStringWithLocale]].\n *\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\n *\n * @param thing Thing to add a localised string value to.\n * @param property Property for which to add the given string value.\n * @param value String to add to `thing` for the given `property`.\n * @param locale Locale of the added string.\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\n */\nexport function addStringWithLocale<T extends Thing>(\n  thing: T,\n  property: Url | UrlString,\n  value: string,\n  locale: string,\n): T {\n  internal_throwIfNotThing(thing);\n  if (!internal_isValidUrl(property)) {\n    throw new ValidPropertyUrlExpectedError(property);\n  }\n\n  const predicateIri = internal_toIriString(property);\n  const normalizedLocale = normalizeLocale(locale);\n\n  const existingPredicate = thing.predicates[predicateIri] ?? {};\n  const existingLangStrings = existingPredicate.langStrings ?? {};\n  const existingStringsInLocale = existingLangStrings[normalizedLocale] ?? [];\n\n  const updatedStringsInLocale = freeze(existingStringsInLocale.concat(value));\n  const updatedLangStrings = freeze({\n    ...existingLangStrings,\n    [normalizedLocale]: updatedStringsInLocale,\n  });\n  const updatedPredicate = freeze({\n    ...existingPredicate,\n    langStrings: updatedLangStrings,\n  });\n  const updatedPredicates = freeze({\n    ...thing.predicates,\n    [predicateIri]: updatedPredicate,\n  });\n  const updatedThing = freeze({\n    ...thing,\n    predicates: updatedPredicates,\n  });\n\n  return updatedThing;\n}\n\n/**\n * Create a new Thing with an unlocalised string added for a Property.\n *\n * This preserves existing values for the given Property. To replace them, see [[setStringNoLocale]].\n *\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\n *\n * @param thing Thing to add an unlocalised string value to.\n * @param property Property for which to add the given string value.\n * @param value String to add to `thing` for the given `property`.\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\n */\nexport const addStringNoLocale: AddOfType<string> = (\n  thing,\n  property,\n  value,\n) => {\n  internal_throwIfNotThing(thing);\n  return addLiteralOfType(thing, property, value, xmlSchemaTypes.string);\n};\n\n/**\n * Create a new Thing with a Named Node added for a Property.\n *\n * This preserves existing values for the given Property. To replace them, see [[setNamedNode]].\n *\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\n *\n * @ignore This should not be needed due to the other add*() functions. If you do find yourself needing it, please file a feature request for your use case.\n * @param thing The [[Thing]] to add a Named Node to.\n * @param property Property for which to add a value.\n * @param value The Named Node to add.\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\n */\nexport function addNamedNode<T extends Thing>(\n  thing: T,\n  property: Url | UrlString,\n  value: NamedNode,\n): T {\n  return addUrl(thing, property, value.value);\n}\n\n/**\n * Create a new Thing with a Literal added for a Property.\n *\n * This preserves existing values for the given Property. To replace them, see [[setLiteral]].\n *\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\n *\n * @ignore This should not be needed due to the other add*() functions. If you do find yourself needing it, please file a feature request for your use case.\n * @param thing The [[Thing]] to add a Literal to.\n * @param property Property for which to add a value.\n * @param value The Literal to add.\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\n */\nexport function addLiteral<T extends Thing>(\n  thing: T,\n  property: Url | UrlString,\n  value: Literal,\n): T {\n  internal_throwIfNotThing(thing);\n  if (!internal_isValidUrl(property)) {\n    throw new ValidPropertyUrlExpectedError(property);\n  }\n  const typeIri = value.datatype.value;\n  if (typeIri === xmlSchemaTypes.langString) {\n    return addStringWithLocale(thing, property, value.value, value.language);\n  }\n\n  return addLiteralOfType(thing, property, value.value, value.datatype.value);\n}\n\n/**\n * Creates a new Thing with a Term added for a Property.\n *\n * This preserves existing values for the given Property. To replace them, see [[setTerm]].\n *\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\n *\n * @ignore This should not be needed due to the other add*() functions. If you do find yourself needing it, please file a feature request for your use case.\n * @param thing The [[Thing]] to add a Term to.\n * @param property Property for which to add a value.\n * @param value The Term to add.\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\n * @since 0.3.0\n */\nexport function addTerm<T extends Thing>(\n  thing: T,\n  property: Url | UrlString,\n  value: Quad_Object,\n): T {\n  if (value.termType === \"NamedNode\") {\n    return addNamedNode(thing, property, value);\n  }\n  if (value.termType === \"Literal\") {\n    return addLiteral(thing, property, value);\n  }\n\n  if (value.termType === \"BlankNode\") {\n    internal_throwIfNotThing(thing);\n    if (!internal_isValidUrl(property)) {\n      throw new ValidPropertyUrlExpectedError(property);\n    }\n\n    const predicateIri = internal_toIriString(property);\n\n    const existingPredicate = thing.predicates[predicateIri] ?? {};\n    const existingBlankNodes = existingPredicate.blankNodes ?? [];\n\n    const updatedBlankNodes = freeze(\n      existingBlankNodes.concat(getBlankNodeId(value)),\n    );\n    const updatedPredicate = freeze({\n      ...existingPredicate,\n      blankNodes: updatedBlankNodes,\n    });\n    const updatedPredicates = freeze({\n      ...thing.predicates,\n      [predicateIri]: updatedPredicate,\n    });\n    const updatedThing = freeze({\n      ...thing,\n      predicates: updatedPredicates,\n    });\n\n    return updatedThing;\n  }\n\n  throw new Error(\n    `Term type [${value.termType}] is not supported by @inrupt/solid-client.`,\n  );\n}\n\nfunction addLiteralOfType<T extends Thing>(\n  thing: T,\n  property: Url | UrlString,\n  value: string,\n  type: XmlSchemaTypeIri | UrlString,\n): T {\n  internal_throwIfNotThing(thing);\n  if (!internal_isValidUrl(property)) {\n    throw new ValidPropertyUrlExpectedError(property);\n  }\n\n  const predicateIri = internal_toIriString(property);\n\n  const existingPredicate = thing.predicates[predicateIri] ?? {};\n  const existingLiterals = existingPredicate.literals ?? {};\n  const existingValuesOfType = existingLiterals[type] ?? [];\n\n  const updatedValuesOfType = freeze(existingValuesOfType.concat(value));\n  const updatedLiterals = freeze({\n    ...existingLiterals,\n    [type]: updatedValuesOfType,\n  });\n  const updatedPredicate = freeze({\n    ...existingPredicate,\n    literals: updatedLiterals,\n  });\n  const updatedPredicates = freeze({\n    ...thing.predicates,\n    [predicateIri]: updatedPredicate,\n  });\n  const updatedThing = freeze({\n    ...thing,\n    predicates: updatedPredicates,\n  });\n\n  return updatedThing;\n}\n\n/**\n * @param thing Thing to add a value to.\n * @param property Property on which to add the given value.\n * @param value Value to add to `thing` for the given `property`.\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\n */\nexport type AddOfType<Type> = <T extends Thing>(\n  thing: T,\n  property: Url | UrlString,\n  value: Type,\n) => T;\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { Literal, NamedNode } from \"@rdfjs/types\";\nimport type { Url, UrlString, Thing, ThingPersisted } from \"../interfaces\";\nimport type { XmlSchemaTypeIri, Time } from \"../datatypes\";\nimport {\n  normalizeLocale,\n  xmlSchemaTypes,\n  deserializeBoolean,\n  deserializeDatetime,\n  deserializeDecimal,\n  deserializeInteger,\n  internal_isValidUrl,\n  deserializeDate,\n  deserializeTime,\n} from \"../datatypes\";\nimport { internal_throwIfNotThing } from \"./thing.internal\";\nimport {\n  isThing,\n  ValidPropertyUrlExpectedError,\n  ValidValueUrlExpectedError,\n  asIri,\n} from \"./thing\";\nimport { internal_toIriString } from \"../interfaces.internal\";\nimport { freeze } from \"../rdf.internal\";\n\n/**\n * Create a new Thing with all values removed for the given Property.\n *\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\n *\n * @param thing [[Thing]] to remove values from.\n * @param property Property for which to remove all values from the Thing.\n * @returns A new Thing equal to the input Thing with all values removed for the given Property.\n */\nexport function removeAll<T extends Thing>(\n  thing: T,\n  property: Url | UrlString,\n): T;\nexport function removeAll(thing: Thing, property: Url | UrlString): Thing {\n  internal_throwIfNotThing(thing);\n  if (!internal_isValidUrl(property)) {\n    throw new ValidPropertyUrlExpectedError(property);\n  }\n  const predicateIri = internal_toIriString(property);\n  const newPredicates = { ...thing.predicates };\n  delete newPredicates[predicateIri];\n\n  return freeze({\n    ...thing,\n    predicates: freeze(newPredicates),\n  });\n}\n\n/**\n * Create a new Thing with the given URL removed for the given Property.\n *\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\n *\n * @param thing Thing to remove a URL value from.\n * @param property Property for which to remove the given URL value.\n * @param value URL to remove from `thing` for the given `Property`.\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\n */\nexport const removeUrl: RemoveOfType<Url | UrlString | ThingPersisted> = (\n  thing,\n  property,\n  value,\n) => {\n  internal_throwIfNotThing(thing);\n\n  if (!internal_isValidUrl(property)) {\n    throw new ValidPropertyUrlExpectedError(property);\n  }\n  const predicateIri = internal_toIriString(property);\n\n  if (!isThing(value) && !internal_isValidUrl(value)) {\n    throw new ValidValueUrlExpectedError(value);\n  }\n\n  const iriToRemove = isThing(value)\n    ? asIri(value)\n    : internal_toIriString(value);\n\n  const updatedNamedNodes = freeze(\n    thing.predicates[predicateIri]?.namedNodes?.filter(\n      (namedNode) => namedNode.toLowerCase() !== iriToRemove.toLowerCase(),\n    ) ?? [],\n  );\n\n  const updatedPredicate = freeze({\n    ...thing.predicates[predicateIri],\n    namedNodes: updatedNamedNodes,\n  });\n\n  const updatedPredicates = freeze({\n    ...thing.predicates,\n    [predicateIri]: updatedPredicate,\n  });\n  return freeze({\n    ...thing,\n    predicates: updatedPredicates,\n  });\n};\n/** @hidden Alias of [[removeUrl]] for those who prefer IRI terminology. */\nexport const removeIri = removeUrl;\n\n/**\n * Create a new Thing with the given boolean removed for the given Property.\n *\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\n *\n * @param thing Thing to remove a boolean value from.\n * @param property Property for which to remove the given boolean value.\n * @param value Boolean to remove from `thing` for the given `property`.\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\n */\nexport const removeBoolean: RemoveOfType<boolean> = (\n  thing,\n  property,\n  value,\n) => {\n  internal_throwIfNotThing(thing);\n  return removeLiteralMatching(\n    thing,\n    property,\n    xmlSchemaTypes.boolean,\n    (foundBoolean) => deserializeBoolean(foundBoolean) === value,\n  );\n};\n\n/**\n * Create a new Thing with the given datetime removed for the given Property.\n *\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\n *\n * @param thing Thing to remove a datetime value from.\n * @param property Property for which to remove the given datetime value.\n * @param value Datetime to remove from `thing` for the given `property`.\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\n */\nexport const removeDatetime: RemoveOfType<Date> = (thing, property, value) => {\n  internal_throwIfNotThing(thing);\n  return removeLiteralMatching(\n    thing,\n    property,\n    xmlSchemaTypes.dateTime,\n    (foundDatetime) =>\n      deserializeDatetime(foundDatetime)?.getTime() === value.getTime(),\n  );\n};\n\n/**\n * Create a new Thing with the given date removed for the given Property.\n *\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\n *\n * @param thing Thing to remove a date value from.\n * @param property Property for which to remove the given date value.\n * @param value Date to remove from `thing` for the given `property`.\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\n * @since 1.10.0\n */\nexport const removeDate: RemoveOfType<Date> = (thing, property, value) => {\n  internal_throwIfNotThing(thing);\n  return removeLiteralMatching(\n    thing,\n    property,\n    xmlSchemaTypes.date,\n    function (foundDate) {\n      const deserializedDate = deserializeDate(foundDate);\n      if (deserializedDate) {\n        return (\n          deserializedDate.getFullYear() === value.getFullYear() &&\n          deserializedDate.getMonth() === value.getMonth() &&\n          deserializedDate.getUTCDate() === value.getUTCDate()\n        );\n      }\n      return false;\n    },\n  );\n};\n\n/**\n * Create a new Thing with the given datetime removed for the given Property.\n *\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\n *\n * @param thing Thing to remove a datetime value from.\n * @param property Property for which to remove the given datetime value.\n * @param value Time to remove from `thing` for the given `property`.\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\n * @since 1.10.0\n */\nexport const removeTime: RemoveOfType<Time> = (thing, property, value) => {\n  internal_throwIfNotThing(thing);\n  return removeLiteralMatching(\n    thing,\n    property,\n    xmlSchemaTypes.time,\n    function (foundTime) {\n      const deserializedTime = deserializeTime(foundTime);\n      if (deserializedTime) {\n        return (\n          deserializedTime.hour === value.hour &&\n          deserializedTime.minute === value.minute &&\n          deserializedTime.second === value.second &&\n          deserializedTime.millisecond === value.millisecond &&\n          deserializedTime.timezoneHourOffset === value.timezoneHourOffset &&\n          deserializedTime.timezoneMinuteOffset === value.timezoneMinuteOffset\n        );\n      }\n      return false;\n    },\n  );\n};\n\n/**\n * Create a new Thing with the given decimal removed for the given Property.\n *\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\n *\n * @param thing Thing to remove a decimal value from.\n * @param property Property for which to remove the given decimal value.\n * @param value Decimal to remove from `thing` for the given `property`.\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\n */\nexport const removeDecimal: RemoveOfType<number> = (thing, property, value) => {\n  internal_throwIfNotThing(thing);\n  return removeLiteralMatching(\n    thing,\n    property,\n    xmlSchemaTypes.decimal,\n    (foundDecimal) => deserializeDecimal(foundDecimal) === value,\n  );\n};\n\n/**\n * Create a new Thing with the given integer removed for the given Property.\n *\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\n *\n * @param thing Thing to remove an integer value from.\n * @param property Property for which to remove the given integer value.\n * @param value Integer to remove from `thing` for the given `property`.\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\n */\nexport const removeInteger: RemoveOfType<number> = (thing, property, value) => {\n  internal_throwIfNotThing(thing);\n  return removeLiteralMatching(\n    thing,\n    property,\n    xmlSchemaTypes.integer,\n    (foundInteger) => deserializeInteger(foundInteger) === value,\n  );\n};\n\n/**\n * Create a new Thing with the given English string removed for the given Property.\n *\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\n *\n * @param thing Thing to remove a localised string value from.\n * @param property Property for which to remove the given localised string value.\n * @param value String to remove from `thing` for the given `property`.\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\n * @since 1.13.0\n */\nexport function removeStringEnglish<T extends Thing>(\n  thing: T,\n  property: Url | UrlString,\n  value: string,\n): T {\n  return removeStringWithLocale(thing, property, value, \"en\");\n}\n\n/**\n * Create a new Thing with the given localised string removed for the given Property.\n *\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\n *\n * @param thing Thing to remove a localised string value from.\n * @param property Property for which to remove the given localised string value.\n * @param value String to remove from `thing` for the given `property`.\n * @param locale Locale of the string to remove.\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\n */\nexport function removeStringWithLocale<T extends Thing>(\n  thing: T,\n  property: Url | UrlString,\n  value: string,\n  locale: string,\n): T {\n  internal_throwIfNotThing(thing);\n  if (!internal_isValidUrl(property)) {\n    throw new ValidPropertyUrlExpectedError(property);\n  }\n\n  const predicateIri = internal_toIriString(property);\n\n  const existingLangStrings = thing.predicates[predicateIri]?.langStrings ?? {};\n  const matchingLocale = Object.keys(existingLangStrings).find(\n    (existingLocale) =>\n      normalizeLocale(existingLocale) === normalizeLocale(locale) &&\n      Array.isArray(existingLangStrings[existingLocale]) &&\n      existingLangStrings[existingLocale].length > 0,\n  );\n\n  if (typeof matchingLocale !== \"string\") {\n    // Nothing to remove.\n    return thing;\n  }\n  const existingStringsInLocale = existingLangStrings[matchingLocale];\n\n  const updatedStringsInLocale = freeze(\n    existingStringsInLocale.filter(\n      (existingString) => existingString !== value,\n    ),\n  );\n  const updatedLangStrings = freeze({\n    ...existingLangStrings,\n    [matchingLocale]: updatedStringsInLocale,\n  });\n\n  const updatedPredicate = freeze({\n    ...thing.predicates[predicateIri],\n    langStrings: updatedLangStrings,\n  });\n\n  const updatedPredicates = freeze({\n    ...thing.predicates,\n    [predicateIri]: updatedPredicate,\n  });\n  return freeze({\n    ...thing,\n    predicates: updatedPredicates,\n  });\n}\n\n/**\n * Create a new Thing with the given unlocalised string removed for the given Property.\n *\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\n *\n * @param thing Thing to remove an unlocalised string value from.\n * @param property Property for which to remove the given string value.\n * @param value String to remove from `thing` for the given `property`.\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\n */\nexport const removeStringNoLocale: RemoveOfType<string> = (\n  thing,\n  property,\n  value,\n) => {\n  internal_throwIfNotThing(thing);\n  return removeLiteralMatching(\n    thing,\n    property,\n    xmlSchemaTypes.string,\n    (foundString) => foundString === value,\n  );\n};\n\n/**\n * @ignore This should not be needed due to the other remove*() functions. If you do find yourself needing it, please file a feature request for your use case.\n * @param thing Thing to remove a NamedNode value from.\n * @param property Property for which to remove the given NamedNode value.\n * @param value NamedNode to remove from `thing` for the given `property`.\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\n */\nexport function removeNamedNode<T extends Thing>(\n  thing: T,\n  property: Url | UrlString,\n  value: NamedNode,\n): T {\n  return removeUrl(thing, property, value.value);\n}\n\n/**\n * @ignore This should not be needed due to the other remove*() functions. If you do find yourself needing it, please file a feature request for your use case.\n * @param thing Thing to remove a Literal value from.\n * @param property Property for which to remove the given Literal value.\n * @param value Literal to remove from `thing` for the given `property`.\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\n */\nexport function removeLiteral<T extends Thing>(\n  thing: T,\n  property: Url | UrlString,\n  value: Literal,\n): T {\n  internal_throwIfNotThing(thing);\n  if (!internal_isValidUrl(property)) {\n    throw new ValidPropertyUrlExpectedError(property);\n  }\n  const typeIri = value.datatype.value;\n\n  if (typeIri === xmlSchemaTypes.langString) {\n    return removeStringWithLocale(thing, property, value.value, value.language);\n  }\n\n  const predicateIri = internal_toIriString(property);\n\n  const existingPredicateValues = thing.predicates[predicateIri] ?? {};\n  const existingLiterals = existingPredicateValues.literals ?? {};\n  const existingValuesOfType = existingLiterals[typeIri] ?? [];\n\n  const updatedValues = freeze(\n    existingValuesOfType.filter(\n      (existingValue) => existingValue !== value.value,\n    ),\n  );\n  const updatedLiterals = freeze({\n    ...existingLiterals,\n    [typeIri]: updatedValues,\n  });\n  const updatedPredicate = freeze({\n    ...existingPredicateValues,\n    literals: updatedLiterals,\n  });\n  const updatedPredicates = freeze({\n    ...thing.predicates,\n    [predicateIri]: updatedPredicate,\n  });\n  const updatedThing = freeze({\n    ...thing,\n    predicates: updatedPredicates,\n  });\n\n  return updatedThing;\n}\n\n/**\n * @param thing Thing to remove a Literal value from.\n * @param property Property for which to remove the given Literal value.\n * @param type Data type that the Literal should be stored as.\n * @param matcher Function that returns true if the given value is an equivalent serialisation of the value to remove. For example, when removing a `false` boolean, the matcher should return true for both \"0\" and \"false\".\n */\nfunction removeLiteralMatching<T extends Thing>(\n  thing: T,\n  property: Url | UrlString,\n  type: XmlSchemaTypeIri,\n  matcher: (serialisedValue: string) => boolean,\n): T {\n  if (!internal_isValidUrl(property)) {\n    throw new ValidPropertyUrlExpectedError(property);\n  }\n  const predicateIri = internal_toIriString(property);\n  const existingPredicateValues = thing.predicates[predicateIri] ?? {};\n  const existingLiterals = existingPredicateValues.literals ?? {};\n  const existingValuesOfType = existingLiterals[type] ?? [];\n\n  const updatedValues = freeze(\n    existingValuesOfType.filter((existingValue) => !matcher(existingValue)),\n  );\n  const updatedLiterals = freeze({\n    ...existingLiterals,\n    [type]: updatedValues,\n  });\n  const updatedPredicate = freeze({\n    ...existingPredicateValues,\n    literals: updatedLiterals,\n  });\n  const updatedPredicates = freeze({\n    ...thing.predicates,\n    [predicateIri]: updatedPredicate,\n  });\n  const updatedThing = freeze({\n    ...thing,\n    predicates: updatedPredicates,\n  });\n\n  return updatedThing;\n}\n\n/**\n * @param thing Thing to remove a value from.\n * @param property Property for which to remove the given value.\n * @param value Value to remove from `thing` for the given `property`.\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\n */\nexport type RemoveOfType<Type> = <T extends Thing>(\n  thing: T,\n  property: Url | UrlString,\n  value: Type,\n) => T;\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { Literal, NamedNode, Quad_Object } from \"@rdfjs/types\";\nimport type { Thing, Url, UrlString } from \"../interfaces\";\nimport type { Time } from \"../datatypes\";\nimport { internal_isValidUrl } from \"../datatypes\";\nimport { internal_throwIfNotThing } from \"./thing.internal\";\nimport { removeAll } from \"./remove\";\nimport {\n  isThing,\n  ValidPropertyUrlExpectedError,\n  ValidValueUrlExpectedError,\n} from \"./thing\";\nimport {\n  addBoolean,\n  addDatetime,\n  addDate,\n  addDecimal,\n  addInteger,\n  addLiteral,\n  addNamedNode,\n  addStringNoLocale,\n  addStringWithLocale,\n  addTerm,\n  addTime,\n  addUrl,\n} from \"./add\";\n\n/**\n * Create a new Thing with existing values replaced by the given URL for the given Property.\n *\n * To preserve existing values, see [[addUrl]].\n *\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\n *\n * @param thing Thing to set a URL value on.\n * @param property Property for which to set the given URL value.\n * @param url URL to set on `thing` for the given `property`.\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\n */\nexport const setUrl: SetOfType<Url | UrlString | Thing> = (\n  thing,\n  property,\n  url,\n) => {\n  internal_throwIfNotThing(thing);\n  if (!internal_isValidUrl(property)) {\n    throw new ValidPropertyUrlExpectedError(property);\n  }\n  if (!isThing(url) && !internal_isValidUrl(url)) {\n    throw new ValidValueUrlExpectedError(url);\n  }\n\n  return addUrl(removeAll(thing, property), property, url);\n};\n/** @hidden Alias of [[setUrl]] for those who prefer IRI terminology. */\nexport const setIri = setUrl;\n\n/**\n * Create a new Thing with existing values replaced by the given boolean for the given Property.\n *\n * To preserve existing values, see [[addBoolean]].\n *\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\n *\n * @param thing Thing to set a boolean value on.\n * @param property Property for which to set the given boolean value.\n * @param value Boolean to set on `thing` for the given `property`.\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\n */\nexport const setBoolean: SetOfType<boolean> = (thing, property, value) => {\n  internal_throwIfNotThing(thing);\n  return addBoolean(removeAll(thing, property), property, value);\n};\n\n/**\n * Create a new Thing with existing values replaced by the given datetime for the given Property.\n *\n * To preserve existing values, see [[addDatetime]].\n *\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\n *\n * @param thing Thing to set an datetime value on.\n * @param property Property for which to set the given datetime value.\n * @param value Datetime to set on `thing` for the given `property`.\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\n */\nexport const setDatetime: SetOfType<Date> = (thing, property, value) => {\n  internal_throwIfNotThing(thing);\n  return addDatetime(removeAll(thing, property), property, value);\n};\n\n/**\n * Create a new Thing with existing values replaced by the given date for the given Property.\n *\n * To preserve existing values, see [[addDate]].\n *\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\n *\n * @param thing Thing to set an date value on.\n * @param property Property for which to set the given date value.\n * @param value Date to set on `thing` for the given `property`.\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\n * @since 1.10.0\n */\nexport const setDate: SetOfType<Date> = (thing, property, value) => {\n  internal_throwIfNotThing(thing);\n  return addDate(removeAll(thing, property), property, value);\n};\n\n/**\n * Create a new Thing with existing values replaced by the given time for the given Property.\n *\n * To preserve existing values, see [[addTime]].\n *\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\n *\n * @param thing Thing to set an time value on.\n * @param property Property for which to set the given time value.\n * @param value time to set on `thing` for the given `property`.\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\n * @since 1.10.0\n */\nexport const setTime: SetOfType<Time> = (thing, property, value) => {\n  internal_throwIfNotThing(thing);\n  return addTime(removeAll(thing, property), property, value);\n};\n\n/**\n * Create a new Thing with existing values replaced by the given decimal for the given Property.\n *\n * To preserve existing values, see [[addDecimal]].\n *\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\n *\n * @param thing Thing to set a decimal value on.\n * @param property Property for which to set the given decimal value.\n * @param value Decimal to set on `thing` for the given `property`.\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\n */\nexport const setDecimal: SetOfType<number> = (thing, property, value) => {\n  internal_throwIfNotThing(thing);\n  return addDecimal(removeAll(thing, property), property, value);\n};\n\n/**\n * Create a new Thing with existing values replaced by the given integer for the given Property.\n *\n * To preserve existing values, see [[addInteger]].\n *\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\n *\n * @param thing Thing to set an integer value on.\n * @param property Property for which to set the given integer value.\n * @param value Integer to set on `thing` for the given `property`.\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\n */\nexport const setInteger: SetOfType<number> = (thing, property, value) => {\n  internal_throwIfNotThing(thing);\n  return addInteger(removeAll(thing, property), property, value);\n};\n\n/**\n * Create a new Thing with existing values replaced by the given English string for the given\n * Property.\n *\n * To preserve existing values, see [[addStringEnglish]].\n *\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\n *\n * @param thing Thing to set a localised string value on.\n * @param property Property for which to set the given localised string value.\n * @param value Localised string to set on `thing` for the given `property`.\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\n * @since 1.13.0\n */\nexport function setStringEnglish<T extends Thing>(\n  thing: T,\n  property: Url | UrlString,\n  value: string,\n): T {\n  return setStringWithLocale(thing, property, value, \"en\");\n}\n\n/**\n * Create a new Thing with existing values replaced by the given localised string for the given Property.\n *\n * To preserve existing values, see [[addStringWithLocale]].\n *\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\n *\n * @param thing Thing to set a localised string value on.\n * @param property Property for which to set the given localised string value.\n * @param value Localised string to set on `thing` for the given `property`.\n * @param locale Locale of the added string.\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\n */\nexport function setStringWithLocale<T extends Thing>(\n  thing: T,\n  property: Url | UrlString,\n  value: string,\n  locale: string,\n): T {\n  internal_throwIfNotThing(thing);\n  return addStringWithLocale(\n    removeAll(thing, property),\n    property,\n    value,\n    locale,\n  );\n}\n\n/**\n * Create a new Thing with existing values replaced by the given unlocalised string for the given Property.\n *\n * To preserve existing values, see [[addStringNoLocale]].\n *\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\n *\n * @param thing Thing to set an unlocalised string value on.\n * @param property Property for which to set the given unlocalised string value.\n * @param value Unlocalised string to set on `thing` for the given `property`.\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\n */\nexport const setStringNoLocale: SetOfType<string> = (\n  thing,\n  property,\n  value,\n) => {\n  internal_throwIfNotThing(thing);\n  return addStringNoLocale(removeAll(thing, property), property, value);\n};\n\n/**\n * Create a new Thing with existing values replaced by the given Named Node for the given Property.\n *\n * This replaces existing values for the given Property. To preserve them, see [[addNamedNode]].\n *\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\n *\n * @ignore This should not be needed due to the other set*() functions. If you do find yourself needing it, please file a feature request for your use case.\n * @param thing The [[Thing]] to set a NamedNode on.\n * @param property Property for which to set the value.\n * @param value The NamedNode to set on `thing` for the given `property`.\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\n */\nexport function setNamedNode<T extends Thing>(\n  thing: T,\n  property: Url | UrlString,\n  value: NamedNode,\n): T {\n  internal_throwIfNotThing(thing);\n  return addNamedNode(removeAll(thing, property), property, value);\n}\n\n/**\n * Create a new Thing with existing values replaced by the given Literal for the given Property.\n *\n * This replaces existing values for the given Property. To preserve them, see [[addLiteral]].\n *\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\n *\n * @ignore This should not be needed due to the other set*() functions. If you do find yourself needing it, please file a feature request for your use case.\n * @param thing The [[Thing]] to set a Literal on.\n * @param property Property for which to set the value.\n * @param value The Literal to set on `thing` for the given `property`.\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\n */\nexport function setLiteral<T extends Thing>(\n  thing: T,\n  property: Url | UrlString,\n  value: Literal,\n): T {\n  internal_throwIfNotThing(thing);\n  return addLiteral(removeAll(thing, property), property, value);\n}\n\n/**\n * Creates a new Thing with existing values replaced by the given Term for the given Property.\n *\n * This replaces existing values for the given Property. To preserve them, see [[addTerm]].\n *\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\n *\n * @ignore This should not be needed due to the other set*() functions. If you do find yourself needing it, please file a feature request for your use case.\n * @param thing The [[Thing]] to set a Term on.\n * @param property Property for which to set the value.\n * @param value The raw RDF/JS value to set on `thing` for the given `property`.\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\n * @since 0.3.0\n */\nexport function setTerm<T extends Thing>(\n  thing: T,\n  property: Url | UrlString,\n  value: Quad_Object,\n): T {\n  internal_throwIfNotThing(thing);\n  if (!internal_isValidUrl(property)) {\n    throw new ValidPropertyUrlExpectedError(property);\n  }\n\n  return addTerm(removeAll(thing, property), property, value);\n}\n\n/**\n * Create a new Thing with existing values replaced by the given value for the given Property.\n *\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\n *\n * @param thing Thing to set a value on.\n * @param property Property for which to set the given value.\n * @param value Value to set on `thing` for the given `property`.\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\n */\nexport type SetOfType<Type> = <T extends Thing>(\n  thing: T,\n  property: Url | UrlString,\n  value: Type,\n) => T;\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { Literal, Quad_Object, NamedNode } from \"@rdfjs/types\";\nimport type { Time } from \"../datatypes\";\nimport type {\n  Thing,\n  ThingLocal,\n  ThingPersisted,\n  Url,\n  UrlString,\n} from \"../interfaces\";\nimport type { AddOfType } from \"./add\";\nimport {\n  addBoolean,\n  addDate,\n  addDatetime,\n  addTime,\n  addDecimal,\n  addInteger,\n  addIri,\n  addLiteral,\n  addNamedNode,\n  addStringNoLocale,\n  addStringWithLocale,\n  addTerm,\n  addUrl,\n} from \"./add\";\nimport type { RemoveOfType } from \"./remove\";\nimport {\n  removeAll,\n  removeBoolean,\n  removeDate,\n  removeDatetime,\n  removeTime,\n  removeDecimal,\n  removeInteger,\n  removeIri,\n  removeLiteral,\n  removeNamedNode,\n  removeStringNoLocale,\n  removeStringWithLocale,\n  removeUrl,\n} from \"./remove\";\nimport type { SetOfType } from \"./set\";\nimport {\n  setBoolean,\n  setDate,\n  setDatetime,\n  setTime,\n  setDecimal,\n  setInteger,\n  setIri,\n  setLiteral,\n  setNamedNode,\n  setStringNoLocale,\n  setStringWithLocale,\n  setTerm,\n  setUrl,\n} from \"./set\";\nimport type {\n  CreateThingLocalOptions,\n  CreateThingOptions,\n  CreateThingPersistedOptions,\n} from \"./thing\";\nimport { createThing, isThing } from \"./thing\";\n\ntype Adder<Type, T extends Thing> = (\n  property: Parameters<AddOfType<Type>>[1],\n  value: Parameters<AddOfType<Type>>[2],\n) => ThingBuilder<T>;\ntype Setter<Type, T extends Thing> = (\n  property: Parameters<SetOfType<Type>>[1],\n  value: Parameters<SetOfType<Type>>[2],\n) => ThingBuilder<T>;\ntype Remover<Type, T extends Thing> = (\n  property: Parameters<RemoveOfType<Type>>[1],\n  value: Parameters<RemoveOfType<Type>>[2],\n) => ThingBuilder<T>;\n\n// Unfortunately this interface has too many properties for TypeScript to infer,\n// hence the duplication between the interface and the implementation method names.\n/**\n * A Fluent interface to build a [[Thing]].\n *\n * Add, replace or remove property values using consecutive calls to `.add*()`,\n * `.set*()` and `.remove*()`, then finally generate a [[Thing]] with the given\n * properties using `.build()`.\n * @since 1.9.0\n */\nexport type ThingBuilder<T extends Thing> = {\n  build: () => T;\n  addUrl: Adder<Url | UrlString | Thing, T>;\n  addIri: Adder<Url | UrlString | Thing, T>;\n  addBoolean: Adder<boolean, T>;\n  addDatetime: Adder<Date, T>;\n  addDate: Adder<Date, T>;\n  addTime: Adder<Time, T>;\n  addDecimal: Adder<number, T>;\n  addInteger: Adder<number, T>;\n  addStringNoLocale: Adder<string, T>;\n  addStringEnglish: Adder<string, T>;\n  addStringWithLocale: (\n    property: Parameters<typeof addStringWithLocale>[1],\n    value: Parameters<typeof addStringWithLocale>[2],\n    locale: Parameters<typeof addStringWithLocale>[3],\n  ) => ThingBuilder<T>;\n  addNamedNode: Adder<NamedNode, T>;\n  addLiteral: Adder<Literal, T>;\n  addTerm: Adder<Quad_Object, T>;\n  setUrl: Setter<Url | UrlString | Thing, T>;\n  setIri: Setter<Url | UrlString | Thing, T>;\n  setBoolean: Setter<boolean, T>;\n  setDatetime: Setter<Date, T>;\n  setDate: Setter<Date, T>;\n  setTime: Setter<Time, T>;\n  setDecimal: Setter<number, T>;\n  setInteger: Setter<number, T>;\n  setStringNoLocale: Setter<string, T>;\n  setStringEnglish: Setter<string, T>;\n  setStringWithLocale: (\n    property: Parameters<typeof setStringWithLocale>[1],\n    value: Parameters<typeof setStringWithLocale>[2],\n    locale: Parameters<typeof setStringWithLocale>[3],\n  ) => ThingBuilder<T>;\n  setNamedNode: Setter<NamedNode, T>;\n  setLiteral: Setter<Literal, T>;\n  setTerm: Setter<Quad_Object, T>;\n  removeAll: (property: Parameters<typeof removeLiteral>[1]) => ThingBuilder<T>;\n  removeUrl: Remover<Url | UrlString | Thing, T>;\n  removeIri: Remover<Url | UrlString | Thing, T>;\n  removeBoolean: Remover<boolean, T>;\n  removeDatetime: Remover<Date, T>;\n  removeDate: Remover<Date, T>;\n  removeTime: Remover<Time, T>;\n  removeDecimal: Remover<number, T>;\n  removeInteger: Remover<number, T>;\n  removeStringNoLocale: Remover<string, T>;\n  removeStringEnglish: Remover<string, T>;\n  removeStringWithLocale: (\n    property: Parameters<typeof removeStringWithLocale>[1],\n    value: Parameters<typeof removeStringWithLocale>[2],\n    locale: Parameters<typeof removeStringWithLocale>[3],\n  ) => ThingBuilder<T>;\n  removeNamedNode: Remover<NamedNode, T>;\n  removeLiteral: Remover<Literal, T>;\n};\n\n/**\n * Modify a [[Thing]], setting multiple properties in a single expresssion.\n *\n * For example, you can initialise several properties of a given Thing as follows:\n *\n *     const me = buildThing(createThing({ name: \"profile-vincent\" }))\n *       .addUrl(rdf.type, schema.Person)\n *       .addStringNoLocale(schema.givenName, \"Vincent\")\n *       .build();\n *\n * Take note of the final call to `.build()` to obtain the actual Thing.\n *\n * @param init A Thing to modify.\n * @returns a [[ThingBuilder]], a Fluent API that allows you to set multiple properties in a single expression.\n * @since 1.9.0\n */\nexport function buildThing(init: ThingLocal): ThingBuilder<ThingLocal>;\n/**\n * Modify a [[Thing]], setting multiple properties in a single expresssion.\n *\n * For example, you can initialise several properties of a given Thing as follows:\n *\n *     const me = buildThing(createThing({ url: \"https://example.pod/profile#vincent\" }))\n *       .addUrl(rdf.type, schema.Person)\n *       .addStringNoLocale(schema.givenName, \"Vincent\")\n *       .build();\n *\n * Take note of the final call to `.build()` to obtain the actual Thing.\n *\n * @param init A Thing to modify.\n * @returns a [[ThingBuilder]], a Fluent API that allows you to set multiple properties in a single expression.\n * @since 1.9.0\n */\nexport function buildThing(init: ThingPersisted): ThingBuilder<ThingPersisted>;\n/**\n * Create a [[Thing]], setting multiple properties in a single expresssion.\n *\n * For example, you can create a new Thing and initialise several properties as follows:\n *\n *     const me = buildThing({ name: \"profile-vincent\" })\n *       .addUrl(rdf.type, schema.Person)\n *       .addStringNoLocale(schema.givenName, \"Vincent\")\n *       .build();\n *\n * Take note of the final call to `.build()` to obtain the actual Thing.\n *\n * @param init Options used to initialise a new Thing.\n * @returns a [[ThingBuilder]], a Fluent API that allows you to set multiple properties in a single expression.\n * @since 1.9.0\n */\nexport function buildThing(\n  init: CreateThingLocalOptions,\n): ThingBuilder<ThingLocal>;\n/**\n * Create a [[Thing]], setting multiple properties in a single expresssion.\n *\n * For example, you can create a new Thing and initialise several properties as follows:\n *\n *     const me = buildThing({ url: \"https://example.pod/profile#vincent\" })\n *       .addUrl(rdf.type, schema.Person)\n *       .addStringNoLocale(schema.givenName, \"Vincent\")\n *       .build();\n *\n * Take note of the final call to `.build()` to obtain the actual Thing.\n *\n * @param init Optionally pass an existing [[Thing]] to modify the properties of. If left empty, `buildThing` will initialise a new Thing.\n * @returns a [[ThingBuilder]], a Fluent API that allows you to set multiple properties in a single expression.\n * @since 1.9.0\n */\nexport function buildThing(\n  init: CreateThingPersistedOptions,\n): ThingBuilder<ThingPersisted>;\n/**\n * Create a [[Thing]], setting multiple properties in a single expresssion.\n *\n * For example, you can create a new Thing and initialise several properties as follows:\n *\n *     const me = buildThing()\n *       .addUrl(rdf.type, schema.Person)\n *       .addStringNoLocale(schema.givenName, \"Vincent\")\n *       .build();\n *\n * Take note of the final call to `.build()` to obtain the actual Thing.\n *\n * @returns a [[ThingBuilder]], a Fluent API that allows you to set multiple properties in a single expression.\n * @since 1.9.0\n */\nexport function buildThing(): ThingBuilder<ThingLocal>;\n/**\n * Create or modify a [[Thing]], setting multiple properties in a single expresssion.\n *\n * For example, you can create a new Thing and initialise several properties as follows:\n *\n *     const me = buildThing()\n *       .addUrl(rdf.type, schema.Person)\n *       .addStringNoLocale(schema.givenName, \"Vincent\")\n *       .build();\n *\n * Take note of the final call to `.build()` to obtain the actual Thing.\n *\n * @param init Optionally pass an existing [[Thing]] to modify the properties of. If left empty, `buildThing` will initialise a new Thing.\n * @returns a [[ThingBuilder]], a Fluent API that allows you to set multiple properties in a single expression.\n * @since 1.9.0\n */\nexport function buildThing(\n  init: Thing | CreateThingOptions = createThing(),\n): ThingBuilder<Thing> {\n  let thing = isThing(init) ? init : createThing(init);\n\n  function getAdder<Type>(adder: AddOfType<Type>) {\n    return (\n      property: Parameters<typeof adder>[1],\n      value: Parameters<typeof adder>[2],\n    ) => {\n      thing = adder(thing, property, value);\n      return builder;\n    };\n  }\n\n  function getSetter<Type>(setter: SetOfType<Type>) {\n    return (\n      property: Parameters<typeof setter>[1],\n      value: Parameters<typeof setter>[2],\n    ) => {\n      thing = setter(thing, property, value);\n      return builder;\n    };\n  }\n\n  function getRemover<Type>(remover: RemoveOfType<Type>) {\n    return (\n      property: Parameters<typeof remover>[1],\n      value: Parameters<typeof remover>[2],\n    ) => {\n      thing = remover(thing, property, value);\n      return builder;\n    };\n  }\n\n  const builder: ThingBuilder<Thing> = {\n    build: () => thing,\n    addUrl: getAdder(addUrl),\n    addIri: getAdder(addIri),\n    addBoolean: getAdder(addBoolean),\n    addDatetime: getAdder(addDatetime),\n    addDate: getAdder(addDate),\n    addTime: getAdder(addTime),\n    addDecimal: getAdder(addDecimal),\n    addInteger: getAdder(addInteger),\n    addStringNoLocale: getAdder(addStringNoLocale),\n    addStringEnglish: (\n      property: Parameters<typeof addStringWithLocale>[1],\n      value: Parameters<typeof addStringWithLocale>[2],\n    ) => {\n      thing = addStringWithLocale(thing, property, value, \"en\");\n      return builder;\n    },\n    addStringWithLocale: (\n      property: Parameters<typeof addStringWithLocale>[1],\n      value: Parameters<typeof addStringWithLocale>[2],\n      locale: Parameters<typeof addStringWithLocale>[3],\n    ) => {\n      thing = addStringWithLocale(thing, property, value, locale);\n      return builder;\n    },\n    addNamedNode: getAdder(addNamedNode),\n    addLiteral: getAdder(addLiteral),\n    addTerm: getAdder(addTerm),\n    setUrl: getSetter(setUrl),\n    setIri: getSetter(setIri),\n    setBoolean: getSetter(setBoolean),\n    setDatetime: getSetter(setDatetime),\n    setDate: getSetter(setDate),\n    setTime: getSetter(setTime),\n    setDecimal: getSetter(setDecimal),\n    setInteger: getSetter(setInteger),\n    setStringNoLocale: getSetter(setStringNoLocale),\n    setStringEnglish: (\n      property: Parameters<typeof setStringWithLocale>[1],\n      value: Parameters<typeof setStringWithLocale>[2],\n    ) => {\n      thing = setStringWithLocale(thing, property, value, \"en\");\n      return builder;\n    },\n    setStringWithLocale: (\n      property: Parameters<typeof setStringWithLocale>[1],\n      value: Parameters<typeof setStringWithLocale>[2],\n      locale: Parameters<typeof setStringWithLocale>[3],\n    ) => {\n      thing = setStringWithLocale(thing, property, value, locale);\n      return builder;\n    },\n    setNamedNode: getSetter(setNamedNode),\n    setLiteral: getSetter(setLiteral),\n    setTerm: getSetter(setTerm),\n    removeAll: (property: Parameters<typeof removeAll>[1]) => {\n      thing = removeAll(thing, property);\n      return builder;\n    },\n    removeUrl: getRemover(removeUrl),\n    removeIri: getRemover(removeIri),\n    removeBoolean: getRemover(removeBoolean),\n    removeDatetime: getRemover(removeDatetime),\n    removeDate: getRemover(removeDate),\n    removeTime: getRemover(removeTime),\n    removeDecimal: getRemover(removeDecimal),\n    removeInteger: getRemover(removeInteger),\n    removeStringNoLocale: getRemover(removeStringNoLocale),\n    removeStringEnglish: (\n      property: Parameters<typeof removeStringWithLocale>[1],\n      value: Parameters<typeof removeStringWithLocale>[2],\n    ) => buildThing(removeStringWithLocale(thing, property, value, \"en\")),\n    removeStringWithLocale: (\n      property: Parameters<typeof removeStringWithLocale>[1],\n      value: Parameters<typeof removeStringWithLocale>[2],\n      locale: Parameters<typeof removeStringWithLocale>[3],\n    ) => buildThing(removeStringWithLocale(thing, property, value, locale)),\n    removeNamedNode: getRemover(removeNamedNode),\n    removeLiteral: getRemover(removeLiteral),\n  };\n\n  return builder;\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { Url, UrlString, ThingPersisted } from \"../interfaces\";\nimport { internal_toIriString } from \"../interfaces.internal\";\n\n/**\n * Function for use in unit tests to mock a [[Thing]] with a given URL.\n *\n * Warning: do not use this function in actual production code.\n * This function initialises a new empty Thing and sets its URL to a given URL.\n * This is useful to mock a Thing in tests of code that call e.g.\n * [[asUrl]].\n *\n * @param url The URL that the mocked Thing pretends identifies it.\n * @returns A new Thing, pretending to be identified by the given URL.\n * @since 0.2.0\n */\nexport function mockThingFrom(url: Url | UrlString): ThingPersisted {\n  const iri = internal_toIriString(url);\n  const thing: ThingPersisted = {\n    type: \"Subject\",\n    predicates: {},\n    url: iri,\n  };\n\n  return thing;\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport { acp } from \"../constants\";\nimport type { WithServerResourceInfo } from \"../interfaces\";\nimport { getLinkedResourceUrlAll } from \"../resource/resource\";\n\n/**\n * @param linkedAccessResource A Resource exposed via the Link header of another Resource with rel=\"acl\".\n * @returns Whether that Resource is an ACP ACR or not (in which case it's likely a WAC ACL).\n */\nexport function isAcr(linkedAccessResource: WithServerResourceInfo): boolean {\n  const relTypeLinks = getLinkedResourceUrlAll(linkedAccessResource).type;\n  return (\n    Array.isArray(relTypeLinks) &&\n    relTypeLinks.includes(acp.AccessControlResource)\n  );\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { Quad } from \"@rdfjs/types\";\nimport { getSolidDataset } from \"../resource/solidDataset\";\nimport type {\n  IriString,\n  WithChangeLog,\n  Thing,\n  WithServerResourceInfo,\n} from \"../interfaces\";\nimport {\n  getSourceUrl,\n  getResourceInfo,\n  getSourceIri,\n} from \"../resource/resource\";\nimport { acl, rdf } from \"../constants\";\nimport { DataFactory, subjectToRdfJsQuads } from \"../rdfjs.internal\";\nimport {\n  createThing,\n  getThingAll,\n  removeThing,\n  setThing,\n} from \"../thing/thing\";\nimport { getIri, getIriAll } from \"../thing/get\";\nimport { setIri } from \"../thing/set\";\nimport { addIri } from \"../thing/add\";\nimport type {\n  Access,\n  AclDataset,\n  AclRule,\n  WithAccessibleAcl,\n  WithAcl,\n  WithFallbackAcl,\n  WithResourceAcl,\n} from \"./acl\";\nimport { hasAccessibleAcl } from \"./acl\";\nimport { removeAll, removeIri } from \"../thing/remove\";\nimport { freeze } from \"../rdf.internal\";\nimport { internal_cloneResource } from \"../resource/resource.internal\";\nimport { isAcr } from \"../acp/acp.internal\";\n\n/**\n * This (currently internal) function fetches the ACL indicated in the [[WithServerResourceInfo]]\n * attached to a resource.\n *\n * @internal\n * @param resourceInfo The Resource info with the ACL URL\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters).\n */\nexport async function internal_fetchAcl(\n  resourceInfo: WithServerResourceInfo,\n  options?: { fetch?: typeof fetch },\n): Promise<WithAcl[\"internal_acl\"]> {\n  if (!hasAccessibleAcl(resourceInfo)) {\n    return {\n      resourceAcl: null,\n      fallbackAcl: null,\n    };\n  }\n  try {\n    const resourceAcl = await internal_fetchResourceAcl(resourceInfo, options);\n\n    const acl =\n      resourceAcl === null\n        ? {\n            resourceAcl: null,\n            fallbackAcl: await internal_fetchFallbackAcl(resourceInfo, options),\n          }\n        : { resourceAcl, fallbackAcl: null };\n\n    return acl;\n  } catch (e: unknown) {\n    /* istanbul ignore else: fetchResourceAcl swallows all non-AclIsAcrErrors */\n    if (e instanceof AclIsAcrError) {\n      return {\n        resourceAcl: null,\n        fallbackAcl: null,\n      };\n    }\n    /* istanbul ignore next: fetchResourceAcl swallows all non-AclIsAcrErrors */\n    throw e;\n  }\n}\n\n/** @internal */\nexport async function internal_fetchResourceAcl(\n  dataset: WithServerResourceInfo,\n  options?: { fetch?: typeof fetch },\n): Promise<AclDataset | null> {\n  if (!hasAccessibleAcl(dataset)) {\n    return null;\n  }\n\n  try {\n    const aclSolidDataset = await getSolidDataset(\n      dataset.internal_resourceInfo.aclUrl,\n      options,\n    );\n    if (isAcr(aclSolidDataset)) {\n      throw new AclIsAcrError(dataset, aclSolidDataset);\n    }\n    return freeze({\n      ...aclSolidDataset,\n      internal_accessTo: getSourceUrl(dataset),\n    });\n  } catch (e) {\n    if (e instanceof AclIsAcrError) {\n      throw e;\n    }\n    // Since a Solid server adds a `Link` header to an ACL even if that ACL does not exist,\n    // failure to fetch the ACL is expected to happen - we just return `null` and let callers deal\n    // with it.\n    return null;\n  }\n}\n\n/** @internal */\nexport async function internal_fetchFallbackAcl(\n  resource: WithAccessibleAcl,\n  options?: { fetch?: typeof fetch },\n): Promise<AclDataset | null> {\n  const resourceUrl = new URL(getSourceUrl(resource));\n  const resourcePath = resourceUrl.pathname;\n  // Note: we're currently assuming that the Origin is the root of the Pod. However, it is not yet\n  //       set in stone that that will always be the case. We might need to check the Container's\n  //       metadata at some point in time to check whether it is actually the root of the Pod.\n  //       See: https://github.com/solid/specification/issues/153#issuecomment-624630022\n  if (resourcePath === \"/\") {\n    // We're already at the root, so there's no Container we can retrieve:\n    return null;\n  }\n\n  const containerPath = internal_getContainerPath(resourcePath);\n  const containerIri = new URL(containerPath, resourceUrl.origin).href;\n  const containerInfo = await getResourceInfo(containerIri, options);\n\n  if (!hasAccessibleAcl(containerInfo)) {\n    // If the current user does not have access to this Container's ACL,\n    // we cannot determine whether its ACL is the one that applies. Thus, return null:\n    return null;\n  }\n\n  const containerAcl = await internal_fetchResourceAcl(containerInfo, options);\n  if (containerAcl === null) {\n    return internal_fetchFallbackAcl(containerInfo, options);\n  }\n  return containerAcl;\n}\n\n/**\n * Given the path to a Resource, get the URL of the Container one level up in the hierarchy.\n * @param resourcePath The path of the Resource of which we need to determine the Container's path.\n * @hidden For internal use only.\n */\nexport function internal_getContainerPath(resourcePath: string): string {\n  const resourcePathWithoutTrailingSlash =\n    resourcePath.substring(resourcePath.length - 1) === \"/\"\n      ? resourcePath.substring(0, resourcePath.length - 1)\n      : resourcePath;\n\n  const containerPath = `${resourcePath.substring(\n    0,\n    resourcePathWithoutTrailingSlash.lastIndexOf(\"/\"),\n  )}/`;\n\n  return containerPath;\n}\n\n/** @internal */\nexport function internal_getAclRules(aclDataset: AclDataset): AclRule[] {\n  const things = getThingAll(aclDataset);\n  return things.filter(isAclRule);\n}\n\nfunction isAclRule(thing: Thing): thing is AclRule {\n  return getIriAll(thing, rdf.type).includes(acl.Authorization);\n}\n\n/** @internal */\nexport function internal_getResourceAclRules(aclRules: AclRule[]): AclRule[] {\n  return aclRules.filter(isResourceAclRule);\n}\n\nfunction isResourceAclRule(aclRule: AclRule): boolean {\n  return getIri(aclRule, acl.accessTo) !== null;\n}\n\n/** @internal */\nexport function internal_getResourceAclRulesForResource(\n  aclRules: AclRule[],\n  resource: IriString,\n): AclRule[] {\n  return aclRules.filter((rule) => appliesToResource(rule, resource));\n}\n\nfunction appliesToResource(aclRule: AclRule, resource: IriString): boolean {\n  return getIriAll(aclRule, acl.accessTo).includes(resource);\n}\n\n/** @internal */\nexport function internal_getDefaultAclRules(aclRules: AclRule[]): AclRule[] {\n  return aclRules.filter(isDefaultAclRule);\n}\n\nfunction isDefaultAclRule(aclRule: AclRule): boolean {\n  return (\n    getIri(aclRule, acl.default) !== null ||\n    getIri(aclRule, acl.defaultForNew) !== null\n  );\n}\n\n/** @internal */\nexport function internal_getDefaultAclRulesForResource(\n  aclRules: AclRule[],\n  resource: IriString,\n): AclRule[] {\n  return aclRules.filter((rule) => isDefaultForResource(rule, resource));\n}\n\nfunction isDefaultForResource(aclRule: AclRule, resource: IriString): boolean {\n  return (\n    getIriAll(aclRule, acl.default).includes(resource) ||\n    getIriAll(aclRule, acl.defaultForNew).includes(resource)\n  );\n}\n\n/** @internal */\nexport function internal_getAccess(rule: AclRule): Access {\n  const ruleAccessModes = getIriAll(rule, acl.mode);\n  const writeAccess = ruleAccessModes.includes(\n    internal_accessModeIriStrings.write,\n  );\n  return writeAccess\n    ? {\n        read: ruleAccessModes.includes(internal_accessModeIriStrings.read),\n        append: true,\n        write: true,\n        control: ruleAccessModes.includes(\n          internal_accessModeIriStrings.control,\n        ),\n      }\n    : {\n        read: ruleAccessModes.includes(internal_accessModeIriStrings.read),\n        append: ruleAccessModes.includes(internal_accessModeIriStrings.append),\n        write: false,\n        control: ruleAccessModes.includes(\n          internal_accessModeIriStrings.control,\n        ),\n      };\n}\n\n/** @internal */\nexport function internal_combineAccessModes(modes: Access[]): Access {\n  return modes.reduce(\n    (accumulator, current) => {\n      const writeAccess = accumulator.write || current.write;\n      return writeAccess\n        ? {\n            read: accumulator.read || current.read,\n            append: true,\n            write: true,\n            control: accumulator.control || current.control,\n          }\n        : {\n            read: accumulator.read || current.read,\n            append: accumulator.append || current.append,\n            write: false,\n            control: accumulator.control || current.control,\n          };\n    },\n    { read: false, append: false, write: false, control: false },\n  );\n}\n\n/** @internal */\nexport function internal_removeEmptyAclRules<Dataset extends AclDataset>(\n  aclDataset: Dataset,\n): Dataset {\n  const aclRules = internal_getAclRules(aclDataset);\n  const aclRulesToRemove = aclRules.filter(isEmptyAclRule);\n\n  // Is this too clever? It iterates over aclRulesToRemove, one by one removing them from aclDataset.\n  const updatedAclDataset = aclRulesToRemove.reduce(removeThing, aclDataset);\n\n  return updatedAclDataset;\n}\n\nfunction isEmptyAclRule(aclRule: AclRule): boolean {\n  // If there are Quads in there unrelated to Access Control,\n  // this is not an empty ACL rule that can be deleted:\n  if (\n    subjectToRdfJsQuads(\n      aclRule.predicates,\n      DataFactory.namedNode(aclRule.url),\n      DataFactory.defaultGraph(),\n    ).some((quad) => !isAclQuad(quad))\n  ) {\n    return false;\n  }\n\n  // If the rule does not apply to any Resource, it is no longer working:\n  if (\n    getIri(aclRule, acl.accessTo) === null &&\n    getIri(aclRule, acl.default) === null &&\n    getIri(aclRule, acl.defaultForNew) === null\n  ) {\n    return true;\n  }\n\n  // If the rule does not specify Access Modes, it is no longer working:\n  if (getIri(aclRule, acl.mode) === null) {\n    return true;\n  }\n\n  // If the rule does not specify whom it applies to, it is no longer working:\n  if (\n    getIri(aclRule, acl.agent) === null &&\n    getIri(aclRule, acl.agentGroup) === null &&\n    getIri(aclRule, acl.agentClass) === null\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction isAclQuad(quad: Quad): boolean {\n  const { predicate } = quad;\n  const { object } = quad;\n  if (\n    predicate.equals(DataFactory.namedNode(rdf.type)) &&\n    object.equals(DataFactory.namedNode(acl.Authorization))\n  ) {\n    return true;\n  }\n  if (\n    predicate.equals(DataFactory.namedNode(acl.accessTo)) ||\n    predicate.equals(DataFactory.namedNode(acl.default)) ||\n    predicate.equals(DataFactory.namedNode(acl.defaultForNew))\n  ) {\n    return true;\n  }\n  if (\n    predicate.equals(DataFactory.namedNode(acl.mode)) &&\n    Object.values(internal_accessModeIriStrings).some((mode) =>\n      object.equals(DataFactory.namedNode(mode)),\n    )\n  ) {\n    return true;\n  }\n  if (\n    predicate.equals(DataFactory.namedNode(acl.agent)) ||\n    predicate.equals(DataFactory.namedNode(acl.agentGroup)) ||\n    predicate.equals(DataFactory.namedNode(acl.agentClass))\n  ) {\n    return true;\n  }\n  if (predicate.equals(DataFactory.namedNode(acl.origin))) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * IRIs of potential Access Modes\n * @internal\n */\nexport const internal_accessModeIriStrings = {\n  read: \"http://www.w3.org/ns/auth/acl#Read\",\n  append: \"http://www.w3.org/ns/auth/acl#Append\",\n  write: \"http://www.w3.org/ns/auth/acl#Write\",\n  control: \"http://www.w3.org/ns/auth/acl#Control\",\n} as const;\n\n/** @internal\n * This function finds, among a set of ACL rules, the ones granting access to a given entity (the target)\n * and identifying it with a specific property (`acl:agent` or `acl:agentGroup`).\n * @param aclRules The set of rules to filter\n * @param targetIri The IRI of the target\n * @param targetType The property linking the rule to the target\n */\nexport function internal_getAclRulesForIri(\n  aclRules: AclRule[],\n  targetIri: IriString,\n  targetType: typeof acl.agent | typeof acl.agentGroup,\n): AclRule[] {\n  return aclRules.filter((rule) =>\n    getIriAll(rule, targetType).includes(targetIri),\n  );\n}\n\n/** @internal\n * This function transforms a given set of rules into a map associating the IRIs\n * of the entities to which permissions are granted by these rules, and the permissions\n * granted to them. Additionally, it filters these entities based on the predicate\n * that refers to them in the rule.\n */\nexport function internal_getAccessByIri(\n  aclRules: AclRule[],\n  targetType: typeof acl.agent | typeof acl.agentGroup,\n): Record<IriString, Access> {\n  const targetIriAccess: Record<IriString, Access> = {};\n\n  aclRules.forEach((rule) => {\n    const ruleTargetIri = getIriAll(rule, targetType);\n    const access = internal_getAccess(rule);\n\n    // A rule might apply to multiple agents. If multiple rules apply to the same agent, the Access\n    // Modes granted by those rules should be combined:\n    ruleTargetIri.forEach((targetIri) => {\n      targetIriAccess[targetIri] =\n        typeof targetIriAccess[targetIri] === \"undefined\"\n          ? access\n          : internal_combineAccessModes([targetIriAccess[targetIri], access]);\n    });\n  });\n  return targetIriAccess;\n}\n\n/**\n * Initialises a new ACL Rule that grants some access - but does not yet specify to whom.\n *\n * @hidden This is an internal utility function that should not be used directly by downstreams.\n * @param access Access mode that this Rule will grant\n */\nexport function internal_initialiseAclRule(access: Access): AclRule {\n  let newRule = createThing();\n  newRule = setIri(newRule, rdf.type, acl.Authorization);\n  if (access.read) {\n    newRule = addIri(newRule, acl.mode, internal_accessModeIriStrings.read);\n  }\n  if (access.append && !access.write) {\n    newRule = addIri(newRule, acl.mode, internal_accessModeIriStrings.append);\n  }\n  if (access.write) {\n    newRule = addIri(newRule, acl.mode, internal_accessModeIriStrings.write);\n  }\n  if (access.control) {\n    newRule = addIri(newRule, acl.mode, internal_accessModeIriStrings.control);\n  }\n  return newRule;\n}\n\n/**\n * Creates a new ACL Rule with the same ACL values as the input ACL Rule, but having a different IRI.\n *\n * Note that non-ACL values will not be copied over.\n *\n * @hidden This is an internal utility function that should not be used directly by downstreams.\n * @param sourceRule ACL rule to duplicate.\n */\nexport function internal_duplicateAclRule(sourceRule: AclRule): AclRule {\n  let targetRule = createThing();\n  targetRule = setIri(targetRule, rdf.type, acl.Authorization);\n\n  function copyIris(\n    inputRule: typeof sourceRule,\n    outputRule: typeof targetRule,\n    predicate: IriString,\n  ) {\n    return getIriAll(inputRule, predicate).reduce(\n      (outputRule, iriTarget) => addIri(outputRule, predicate, iriTarget),\n      outputRule,\n    );\n  }\n\n  targetRule = copyIris(sourceRule, targetRule, acl.accessTo);\n  targetRule = copyIris(sourceRule, targetRule, acl.default);\n  targetRule = copyIris(sourceRule, targetRule, acl.defaultForNew);\n  targetRule = copyIris(sourceRule, targetRule, acl.agent);\n  targetRule = copyIris(sourceRule, targetRule, acl.agentGroup);\n  targetRule = copyIris(sourceRule, targetRule, acl.agentClass);\n  targetRule = copyIris(sourceRule, targetRule, acl.origin);\n  targetRule = copyIris(sourceRule, targetRule, acl.mode);\n\n  return targetRule;\n}\n\n/**\n * Attach an ACL dataset to a Resource.\n *\n * @hidden This is an internal utility function that should not be used directly by downstreams.\n * @param resource The Resource to which an ACL is being attached\n * @param acl The ACL being attached to the Resource\n */\nexport function internal_setAcl<ResourceExt extends WithServerResourceInfo>(\n  resource: ResourceExt,\n  acl: WithResourceAcl[\"internal_acl\"],\n): ResourceExt & WithResourceAcl;\nexport function internal_setAcl<ResourceExt extends WithServerResourceInfo>(\n  resource: ResourceExt,\n  acl: WithFallbackAcl[\"internal_acl\"],\n): ResourceExt & WithFallbackAcl;\nexport function internal_setAcl<ResourceExt extends WithServerResourceInfo>(\n  resource: ResourceExt,\n  acl: WithAcl[\"internal_acl\"],\n): ResourceExt & WithAcl;\nexport function internal_setAcl<ResourceExt extends WithServerResourceInfo>(\n  resource: ResourceExt,\n  acl: WithAcl[\"internal_acl\"],\n): ResourceExt & WithAcl {\n  return Object.assign(internal_cloneResource(resource), { internal_acl: acl });\n}\n\nconst supportedActorPredicates = [\n  acl.agent,\n  acl.agentClass,\n  acl.agentGroup,\n  acl.origin,\n];\n/**\n * Union type of all relations defined in `knownActorRelations`.\n *\n * When the ACP spec evolves to support additional relations of Rules to Actors,\n * adding those relations to `knownActorRelations` will cause TypeScript to warn\n * us everywhere to update everywhere the ActorRelation type is used and that\n * needs additional work to handle it.\n */\ntype SupportedActorPredicate =\n  typeof supportedActorPredicates extends Array<infer E> ? E : never;\n\n/**\n * Given an ACL Rule, returns two new ACL Rules that cover all the input Rule's use cases,\n * except for giving the given Actor access to the given Resource.\n *\n * @param rule The ACL Rule that should no longer apply for a given Actor to a given Resource.\n * @param actor The Actor that should be removed from the Rule for the given Resource.\n * @param resourceIri The Resource to which the Rule should no longer apply for the given Actor.\n * @returns A tuple with the original ACL Rule without the given Actor, and a new ACL Rule for the given Actor for the remaining Resources, respectively.\n */\nfunction internal_removeActorFromRule(\n  rule: AclRule,\n  actor: IriString,\n  actorPredicate: SupportedActorPredicate,\n  resourceIri: IriString,\n  ruleType: \"resource\" | \"default\",\n): [AclRule, AclRule] {\n  // If the existing Rule does not apply to the given Actor, we don't need to split up.\n  // Without this check, we'd be creating a new rule for the given Actor (ruleForOtherTargets)\n  // that would give it access it does not currently have:\n  if (!getIriAll(rule, actorPredicate).includes(actor)) {\n    const emptyRule = internal_initialiseAclRule({\n      read: false,\n      append: false,\n      write: false,\n      control: false,\n    });\n    return [rule, emptyRule];\n  }\n  // The existing rule will keep applying to Actors other than the given one:\n  const ruleWithoutActor = removeIri(rule, actorPredicate, actor);\n  // The actor might have been given other access in the existing rule, so duplicate it...\n  let ruleForOtherTargets = internal_duplicateAclRule(rule);\n  // ...but remove access to the original Resource...\n  ruleForOtherTargets = removeIri(\n    ruleForOtherTargets,\n    ruleType === \"resource\" ? acl.accessTo : acl.default,\n    resourceIri,\n  );\n  // Prevents the legacy predicate 'acl:defaultForNew' to lead to privilege escalation\n  if (ruleType === \"default\") {\n    ruleForOtherTargets = removeIri(\n      ruleForOtherTargets,\n      acl.defaultForNew,\n      resourceIri,\n    );\n  }\n  // ...and only apply the new Rule to the given Actor (because the existing Rule covers the others):\n  ruleForOtherTargets = setIri(ruleForOtherTargets, actorPredicate, actor);\n  supportedActorPredicates\n    .filter((predicate) => predicate !== actorPredicate)\n    .forEach((predicate) => {\n      ruleForOtherTargets = removeAll(ruleForOtherTargets, predicate);\n    });\n\n  return [ruleWithoutActor, ruleForOtherTargets];\n}\n\n/**\n * ```{note}\n * This function is still experimental and subject to change, even in a non-major release.\n * ```\n * Modifies the resource ACL (Access Control List) to set the Access Modes for the given Agent.\n * Specifically, the function returns a new resource ACL initialised with the given ACL and\n * new rules for the Actor's access.\n *\n * If rules for Actor's access already exist in the given ACL, in the returned ACL,\n * they are replaced by the new rules.\n *\n * This function does not modify:\n *\n * - Access Modes granted indirectly to Actors through other ACL rules, e.g., public or group-specific permissions.\n * - Access Modes granted to Actors for the child Resources if the associated Resource is a Container.\n * - The original ACL.\n *\n * @param aclDataset The SolidDataset that contains Access-Control List rules.\n * @param actor The Actor to grant specific Access Modes.\n * @param access The Access Modes to grant to the Actor for the Resource.\n * @returns A new resource ACL initialised with the given `aclDataset` and `access` for the `agent`.\n */\nexport function internal_setActorAccess(\n  aclDataset: AclDataset,\n  access: Access,\n  actorPredicate: SupportedActorPredicate,\n  accessType: \"default\" | \"resource\",\n  actor: IriString,\n): AclDataset & WithChangeLog {\n  // First make sure that none of the pre-existing rules in the given ACL SolidDataset\n  // give the Agent access to the Resource:\n  let filteredAcl = aclDataset;\n  getThingAll(aclDataset).forEach((aclRule) => {\n    // Obtain both the Rule that no longer includes the given Actor,\n    // and a new Rule that includes all ACL Quads\n    // that do not pertain to the given Actor-Resource combination.\n    // Note that usually, the latter will no longer include any meaningful statements;\n    // we'll clean them up afterwards.\n    const [filteredRule, remainingRule] = internal_removeActorFromRule(\n      aclRule,\n      actor,\n      actorPredicate,\n      aclDataset.internal_accessTo,\n      accessType,\n    );\n    filteredAcl = setThing(filteredAcl, filteredRule);\n    filteredAcl = setThing(filteredAcl, remainingRule);\n  });\n\n  // Create a new Rule that only grants the given Actor the given Access Modes:\n  let newRule = internal_initialiseAclRule(access);\n  newRule = setIri(\n    newRule,\n    accessType === \"resource\" ? acl.accessTo : acl.default,\n    aclDataset.internal_accessTo,\n  );\n  newRule = setIri(newRule, actorPredicate, actor);\n  const updatedAcl = setThing(filteredAcl, newRule);\n\n  // Remove any remaining Rules that do not contain any meaningful statements:\n  return internal_removeEmptyAclRules(updatedAcl);\n}\n\nexport function internal_setResourceAcl<\n  T extends WithServerResourceInfo & WithAcl,\n>(resource: T, acl: AclDataset): T & WithResourceAcl {\n  const newAcl: WithResourceAcl[\"internal_acl\"] = {\n    resourceAcl: acl,\n    fallbackAcl: null,\n  };\n  return internal_setAcl(resource, newAcl);\n}\n\nexport function internal_getResourceAcl(\n  resource: WithServerResourceInfo & WithResourceAcl,\n): AclDataset {\n  return resource.internal_acl.resourceAcl;\n}\n\n/**\n * This error indicates that, if we're following a Link with rel=\"acl\",\n * it does not result in a WAC ACL, but in an ACP ACR.\n */\nclass AclIsAcrError extends Error {\n  constructor(\n    sourceResource: WithServerResourceInfo,\n    aclResource: WithServerResourceInfo,\n  ) {\n    super(\n      `[${getSourceIri(\n        sourceResource,\n      )}] is governed by Access Control Policies in [${getSourceIri(\n        aclResource,\n      )}] rather than by Web Access Control.`,\n    );\n  }\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport { acl } from \"../constants\";\nimport {\n  createSolidDataset,\n  getSolidDataset,\n  saveSolidDatasetAt,\n} from \"../resource/solidDataset\";\nimport type {\n  WithResourceInfo,\n  File,\n  WithServerResourceInfo,\n  UrlString,\n  Url,\n  SolidDataset,\n  Thing,\n} from \"../interfaces\";\nimport { setThing } from \"../thing/thing\";\nimport { removeAll } from \"../thing/remove\";\nimport { setIri } from \"../thing/set\";\nimport { getResourceInfo, getSourceUrl } from \"../resource/resource\";\nimport { getFile } from \"../resource/file\";\nimport { internal_cloneResource } from \"../resource/resource.internal\";\nimport {\n  internal_fetchAcl,\n  internal_getAclRules,\n  internal_getDefaultAclRulesForResource,\n  internal_setAcl,\n} from \"./acl.internal\";\nimport { freeze } from \"../rdf.internal\";\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Verify whether a given SolidDataset was fetched together with its Access Control List.\n *\n * @param dataset A [[SolidDataset]] that may have its ACLs attached.\n * @returns True if `dataset` was fetched together with its ACLs.\n */\nexport function hasAcl<T extends object>(dataset: T): dataset is T & WithAcl {\n  const potentialAcl = dataset as T & WithAcl;\n  return typeof potentialAcl.internal_acl === \"object\";\n}\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Verifies whether the given Resource has a resource ACL (Access Control List) attached.\n *\n * The [[hasResourceAcl]] function checks that:\n * - a given Resource has a resource ACL attached, and\n * - the user calling [[hasResourceAcl]] has Control access to the Resource.\n *\n * To retrieve a Resource with its ACLs, see [[getSolidDatasetWithAcl]].\n *\n * @param resource A Resource that might have an ACL attached.\n * @returns `true` if the Resource has a resource ACL attached that is accessible by the user.\n */\nexport function hasResourceAcl<\n  Resource extends WithAcl & WithServerResourceInfo,\n>(\n  resource: Resource,\n): resource is Resource & WithResourceAcl & WithAccessibleAcl {\n  return (\n    resource.internal_acl.resourceAcl !== null &&\n    getSourceUrl(resource) ===\n      resource.internal_acl.resourceAcl.internal_accessTo &&\n    resource.internal_resourceInfo.aclUrl ===\n      getSourceUrl(resource.internal_acl.resourceAcl)\n  );\n}\n\n/**\n * Experimental: fetch a SolidDataset and its associated Access Control List.\n *\n * This is an experimental function that fetches both a Resource, the linked ACL Resource (if\n * available), and the ACL that applies to it if the linked ACL Resource is not available. This can\n * result in many HTTP requests being executed, in lieu of the Solid spec mandating servers to\n * provide this info in a single request. Therefore, and because this function is still\n * experimental, prefer [[getSolidDataset]] instead.\n *\n * If the Resource does not advertise the ACL Resource (because the authenticated user does not have\n * access to it), the `acl` property in the returned value will be null. `acl.resourceAcl` will be\n * undefined if the Resource's linked ACL Resource could not be fetched (because it does not exist),\n * and `acl.fallbackAcl` will be null if the applicable Container's ACL is not accessible to the\n * authenticated user.\n *\n * @param url URL of the SolidDataset to fetch.\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\n * @returns A SolidDataset and the ACLs that apply to it, if available to the authenticated user.\n */\nexport async function getSolidDatasetWithAcl(\n  url: UrlString | Url,\n  options?: { fetch?: typeof fetch },\n): Promise<SolidDataset & WithServerResourceInfo & WithAcl> {\n  const solidDataset = await getSolidDataset(url, options);\n  const acl = await internal_fetchAcl(solidDataset, options);\n  return internal_setAcl(solidDataset, acl);\n}\n\n/**\n * ```{note} This function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Retrieves a file, its resource ACL (Access Control List) if available,\n * and its fallback ACL from a URL and returns them as a blob.\n *\n * If the user calling the function does not have access to the file's resource ACL,\n * [[hasAccessibleAcl]] on the returned blob returns false.\n * If the user has access to the file's resource ACL but the resource ACL does not exist,\n * [[getResourceAcl]] on the returned blob returns null.\n * If the fallback ACL is inaccessible by the user,\n * [[getFallbackAcl]] on the returned blob returns null.\n *\n * ```{tip}\n * To retrieve the ACLs, the function results in multiple HTTP requests rather than a single\n * request as mandated by the Solid spec. As such, prefer [[getFile]] instead if you do not need the ACL.\n * ```\n *\n * @param url The URL of the fetched file\n * @param options Fetching options: a custom fetcher and/or headers.\n * @returns A file and its ACLs, if available to the authenticated user, as a blob.\n * @since 0.2.0\n */\nexport async function getFileWithAcl(\n  input: Url | UrlString,\n  options?: { fetch?: typeof fetch },\n): Promise<File & WithServerResourceInfo & WithAcl> {\n  const file = await getFile(input, options);\n  const acl = await internal_fetchAcl(file, options);\n  return internal_setAcl(file, acl);\n}\n\n/**\n * Experimental: fetch a Resource's metadata and its associated Access Control List.\n *\n * This is an experimental function that fetches both a Resource's metadata, the linked ACL Resource (if\n * available), and the ACL that applies to it if the linked ACL Resource is not available (if accessible). This can\n * result in many HTTP requests being executed, in lieu of the Solid spec mandating servers to\n * provide this info in a single request.\n *\n * If the Resource's linked ACL Resource could not be fetched (because it does not exist, or because\n * the authenticated user does not have access to it), `acl.resourceAcl` will be `null`. If the\n * applicable Container's ACL is not accessible to the authenticated user, `acl.fallbackAcl` will be\n * `null`.\n *\n * @param url URL of the SolidDataset to fetch.\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\n * @returns A Resource's metadata and the ACLs that apply to the Resource, if available to the authenticated user.\n */\nexport async function getResourceInfoWithAcl(\n  url: UrlString,\n  options?: { fetch?: typeof fetch },\n): Promise<WithServerResourceInfo & WithAcl> {\n  const resourceInfo = await getResourceInfo(url, options);\n  const acl = await internal_fetchAcl(resourceInfo, options);\n  return internal_setAcl(resourceInfo, acl);\n}\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n * Returns the resource ACL (Access Control List) attached to a Resource.\n *\n * If the Resource has its resource ACL attached and is accessible by the user\n * (see [[hasResourceAcl]]), the function returns the resource ACL.\n * If the Resource does not have a resource ACL attached or is inaccessible by the user,\n * the function returns `null`.\n *\n * @param resource A Resource with potentially an ACL attached.\n * @returns The resource ACL if available and `null` if not.\n */\nexport function getResourceAcl(\n  resource: WithAcl & WithServerResourceInfo & WithResourceAcl,\n): AclDataset;\nexport function getResourceAcl(\n  resource: WithAcl & WithServerResourceInfo,\n): AclDataset | null;\nexport function getResourceAcl(\n  resource: WithAcl & WithServerResourceInfo,\n): AclDataset | null {\n  if (!hasResourceAcl(resource)) {\n    return null;\n  }\n  return resource.internal_acl.resourceAcl;\n}\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Verifies whether the given Resource has a fallback ACL (Access Control List) attached.\n *\n * A fallback ACL for a Resource is inherited from the Resource's parent Container\n * (or another of its ancestor Containers) and applies if the Resource does\n * not have its own resource ACL.\n *\n * The [[hasFallbackAcl]] function checks that:\n * - a given Resource has a fallback ACL attached, and\n * - the user calling [[hasFallbackAcl]] has Control access to the Container\n * from which the Resource inherits its ACL.\n *\n * To retrieve a Resource with its ACLs, see [[getSolidDatasetWithAcl]].\n *\n * @param resource A [[SolidDataset]] that might have a fallback ACL attached.\n *\n * @returns `true` if the Resource has a fallback ACL attached that is accessible to the user.\n */\nexport function hasFallbackAcl<Resource extends WithAcl>(\n  resource: Resource,\n): resource is Resource & WithFallbackAcl {\n  return resource.internal_acl.fallbackAcl !== null;\n}\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Returns the fallback ACL (Access Control List) attached to a Resource.\n *\n * If the Resource has a fallback ACL attached and is accessible by the user\n * (see [[hasFallbackAcl]]), the function returns the fallback ACL.\n * If the Resource does not hava a fallback ACL attached or is inaccessible by the user,\n * the function returns `null`.\n *\n * @param resource A Resource with potentially a fallback ACL attached.\n * @returns The fallback ACL if available or `null` if not.\n */\nexport function getFallbackAcl(resource: WithFallbackAcl): AclDataset;\nexport function getFallbackAcl(dataset: WithAcl): AclDataset | null;\nexport function getFallbackAcl(dataset: WithAcl): AclDataset | null {\n  if (!hasFallbackAcl(dataset)) {\n    return null;\n  }\n  return dataset.internal_acl.fallbackAcl;\n}\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Creates an empty resource ACL (Access Control List) for a given Resource.\n *\n * @param targetResource A Resource that does not have its own ACL yet (see [[hasResourceAcl]]).\n * @returns An empty resource ACL for the given Resource.\n */\nexport function createAcl(\n  targetResource: WithResourceInfo & WithAccessibleAcl,\n): AclDataset {\n  const emptyResourceAcl: AclDataset = freeze({\n    ...createSolidDataset(),\n    internal_accessTo: getSourceUrl(targetResource),\n    internal_resourceInfo: {\n      sourceIri: targetResource.internal_resourceInfo.aclUrl,\n      isRawData: false,\n      linkedResources: {},\n    },\n  });\n\n  return emptyResourceAcl;\n}\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Creates a resource ACL (Access Control List), initialised from the fallback ACL\n * inherited from the given Resource's Container (or another of its ancestor Containers).\n * That is, the new ACL has the same rules/entries as the fallback ACL that currently\n * applies to the Resource.\n *\n * @param resource A Resource without its own resource ACL (see [[hasResourceAcl]]) but with an accessible fallback ACL (see [[hasFallbackAcl]]).\n * @returns A resource ACL initialised with the rules/entries from the Resource's fallback ACL.\n */\nexport function createAclFromFallbackAcl(\n  resource: WithFallbackAcl & WithServerResourceInfo & WithAccessibleAcl,\n): AclDataset {\n  const emptyResourceAcl: AclDataset = createAcl(resource);\n\n  const fallbackAclRules = internal_getAclRules(\n    resource.internal_acl.fallbackAcl,\n  );\n  const defaultAclRules = internal_getDefaultAclRulesForResource(\n    fallbackAclRules,\n    resource.internal_acl.fallbackAcl.internal_accessTo,\n  );\n  const newAclRules = defaultAclRules.map((rule) => {\n    rule = removeAll(rule, acl.default);\n    rule = removeAll(rule, acl.defaultForNew);\n    rule = setIri(rule, acl.accessTo, getSourceUrl(resource));\n    rule = setIri(rule, acl.default, getSourceUrl(resource));\n    return rule;\n  });\n\n  // Iterate over every ACL Rule we want to import, inserting them into `emptyResourceAcl` one by one:\n  const initialisedResourceAcl = newAclRules.reduce(setThing, emptyResourceAcl);\n\n  return initialisedResourceAcl;\n}\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Saves the resource ACL for a Resource.\n *\n * @param resource The Resource to which the given resource ACL applies.\n * @param resourceAcl An [[AclDataset]] whose ACL Rules will apply to `resource`.\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\n */\nexport async function saveAclFor(\n  resource: WithAccessibleAcl,\n  resourceAcl: SolidDataset,\n  options?: { fetch?: typeof fetch },\n): Promise<AclDataset & WithResourceInfo> {\n  if (!hasAccessibleAcl(resource)) {\n    throw new Error(\n      `Could not determine the location of the ACL for the Resource at [${getSourceUrl(\n        resource,\n      )}]; possibly the current user does not have Control access to that Resource. Try calling \\`hasAccessibleAcl()\\` before calling \\`saveAclFor()\\`.`,\n    );\n  }\n  const savedDataset = await saveSolidDatasetAt(\n    resource.internal_resourceInfo.aclUrl,\n    resourceAcl,\n    options,\n  );\n  const savedAclDataset: AclDataset & typeof savedDataset = {\n    ...savedDataset,\n    internal_accessTo: getSourceUrl(resource),\n  };\n\n  return savedAclDataset;\n}\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Removes the resource ACL (Access Control List) from a Resource.\n *\n * Once the resource ACL is removed from the Resource, the Resource relies on the\n * fallback ACL inherited from the Resource's parent Container (or another of its ancestor Containers).\n *\n * @param resource The Resource for which you want to delete the ACL.\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\n */\nexport async function deleteAclFor<\n  Resource extends WithResourceInfo & WithAccessibleAcl,\n>(\n  resource: Resource,\n  options?: { fetch?: typeof fetch },\n): Promise<Resource & { acl: { resourceAcl: null } }> {\n  const response = await (options?.fetch ?? fetch)(\n    resource.internal_resourceInfo.aclUrl,\n    {\n      method: \"DELETE\",\n    },\n  );\n\n  if (!response.ok) {\n    throw new Error(\n      `Deleting the ACL of the Resource at [${getSourceUrl(\n        resource,\n      )}] failed: [${response.status}] [${response.statusText}].`,\n    );\n  }\n\n  const storedResource = Object.assign(internal_cloneResource(resource), {\n    acl: {\n      resourceAcl: null,\n    },\n  });\n\n  return storedResource;\n}\n\n/**\n * A [[SolidDataset]] containing Access Control rules for another SolidDataset.\n *\n * Please note that the Web Access Control specification is not yet finalised, and hence, this\n * function is still experimental and can change in a non-major release.\n */\nexport type AclDataset = SolidDataset &\n  WithResourceInfo & { internal_accessTo: UrlString };\n\n/**\n * @hidden Developers shouldn't need to directly access ACL rules. Instead, we provide our own functions that verify what access someone has.\n */\nexport type AclRule = Thing;\n\n/**\n * An object with the boolean properties `read`, `append`, `write` and `control`, representing the\n * respective Access Modes defined by the Web Access Control specification.\n *\n * Since that specification is not finalised yet, this interface is still experimental.\n */\nexport type Access =\n  // If someone has write permissions, they also have append permissions:\n  {\n    read: boolean;\n    append: boolean;\n    write: boolean;\n    control: boolean;\n  };\n\n/**\n * Please note that the Web Access Control specification is not yet finalised, and hence, this\n * function is still experimental and can change in a non-major release.\n *\n * @hidden Developers should use [[getResourceAcl]] and [[getFallbackAcl]] to access these.\n */\nexport type WithAcl = {\n  internal_acl:\n    | {\n        resourceAcl: AclDataset;\n        fallbackAcl: null;\n      }\n    | {\n        resourceAcl: null;\n        fallbackAcl: AclDataset | null;\n      };\n};\n\n/**\n * If this type applies to a Resource, an Access Control List that applies to it exists and is accessible to the currently authenticated user.\n *\n * Please note that the Web Access Control specification is not yet finalised, and hence, this\n * function is still experimental and can change in a non-major release.\n */\nexport type WithResourceAcl<ResourceExt extends WithAcl = WithAcl> =\n  ResourceExt & {\n    internal_acl: {\n      resourceAcl: Exclude<WithAcl[\"internal_acl\"][\"resourceAcl\"], null>;\n    };\n  };\n\n/**\n * If this type applies to a Resource, the Access Control List that applies to its nearest Container with an ACL is accessible to the currently authenticated user.\n *\n * Please note that the Web Access Control specification is not yet finalised, and hence, this\n * function is still experimental and can change in a non-major release.\n */\nexport type WithFallbackAcl<ResourceExt extends WithAcl = WithAcl> =\n  ResourceExt & {\n    internal_acl: {\n      fallbackAcl: Exclude<WithAcl[\"internal_acl\"][\"fallbackAcl\"], null>;\n    };\n  };\n\n/**\n * If this type applies to a Resource, its Access Control List, if it exists, is accessible to the currently authenticated user.\n *\n * Please note that the Web Access Control specification is not yet finalised, and hence, this\n * function is still experimental and can change in a non-major release.\n */\nexport type WithAccessibleAcl<\n  ResourceExt extends WithServerResourceInfo = WithServerResourceInfo,\n> = ResourceExt & {\n  internal_resourceInfo: {\n    aclUrl: Exclude<\n      WithServerResourceInfo[\"internal_resourceInfo\"][\"aclUrl\"],\n      undefined\n    >;\n  };\n};\n\n/**\n * Given a [[SolidDataset]], verify whether its Access Control List is accessible to the current user.\n *\n * This should generally only be true for SolidDatasets fetched by\n * [[getSolidDatasetWithAcl]].\n *\n * Please note that the Web Access Control specification is not yet finalised, and hence, this\n * function is still experimental and can change in a non-major release.\n *\n * @param dataset A [[SolidDataset]].\n * @returns Whether the given `dataset` has a an ACL that is accessible to the current user.\n */\nexport function hasAccessibleAcl<ResourceExt extends WithServerResourceInfo>(\n  dataset: ResourceExt,\n): dataset is WithAccessibleAcl<ResourceExt> {\n  return typeof dataset.internal_resourceInfo.aclUrl === \"string\";\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type {\n  WithServerResourceInfo,\n  WithChangeLog,\n  WebId,\n} from \"../interfaces\";\nimport { getIri } from \"../thing/get\";\nimport { acl } from \"../constants\";\nimport type { AclDataset, Access, AclRule, WithAcl } from \"./acl\";\nimport {\n  hasResourceAcl,\n  getResourceAcl,\n  hasFallbackAcl,\n  getFallbackAcl,\n} from \"./acl\";\nimport {\n  internal_combineAccessModes,\n  internal_getAccess,\n  internal_getAccessByIri,\n  internal_getAclRules,\n  internal_getAclRulesForIri,\n  internal_getDefaultAclRulesForResource,\n  internal_getResourceAclRulesForResource,\n  internal_setActorAccess,\n} from \"./acl.internal\";\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n */\nexport type AgentAccess = Record<WebId, Access>;\n\n/**\n * ```{note}\n * This function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Returns an Agent's explicitly-granted Access Modes for the given Resource.\n *\n * The function does not return Access Modes granted indirectly to the Agent through other\n * ACL rules, e.g., public or group-specific permissions.\n *\n * @param resourceInfo Information about the Resource to which the given Agent may have been granted access.\n * @param agent WebID of the Agent for which to retrieve what access it has to the Resource.\n * @returns Access Modes that have been explicitly granted to the Agent for the given Resource, or `null` if it could not be determined (e.g. because the current user does not have Control access to a given Resource or its Container).\n */\nexport function getAgentAccess(\n  resourceInfo: WithAcl & WithServerResourceInfo,\n  agent: WebId,\n): Access | null {\n  if (hasResourceAcl(resourceInfo)) {\n    return getAgentResourceAccess(resourceInfo.internal_acl.resourceAcl, agent);\n  }\n  if (hasFallbackAcl(resourceInfo)) {\n    return getAgentDefaultAccess(resourceInfo.internal_acl.fallbackAcl, agent);\n  }\n  return null;\n}\n\n/**\n * ```{note}\n * This function is still experimental and subject to change, even in a non-major release.\n * ```\n * Returns all explicitly-granted Access Modes per Agent for the given Resource.\n *\n * The function does not return Access Modes granted indirectly to Agents through other\n * ACL rules, e.g., public or group-specific permissions.\n *\n * @param resourceInfo Information about the Resource to which Agents may have been granted access.\n * @returns Access Modes per Agent that have been explicitly granted for the given Resource, or `null` if it could not be determined (e.g. because the current user does not have Control access to a given Resource or its Container).\n */\nexport function getAgentAccessAll(\n  resourceInfo: WithAcl & WithServerResourceInfo,\n): AgentAccess | null {\n  if (hasResourceAcl(resourceInfo)) {\n    const resourceAcl = getResourceAcl(resourceInfo);\n    return getAgentResourceAccessAll(resourceAcl);\n  }\n  if (hasFallbackAcl(resourceInfo)) {\n    const fallbackAcl = getFallbackAcl(resourceInfo);\n    return getAgentDefaultAccessAll(fallbackAcl);\n  }\n  return null;\n}\n\n/**\n * ```{note}\n * This function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Returns the Access Modes explicitly granted to an Agent for the Resource\n * associated with an ACL (Access ControlList).\n *\n * The function does not return:\n *\n * - Access Modes granted indirectly to the Agent through other ACL rules, e.g., public or group-specific permissions.\n * - Access Modes granted to the Agent for the child Resources if the associated Resource is a Container (see [[getAgentDefaultAccess]] instead).\n *\n * @param aclDataset The SolidDataset that contains ACL rules.\n * @param agent WebID of the Agent for which to retrieve what access it has to the Resource.\n * @returns Access Modes that have been explicitly granted to an Agent for the Resource associated with an ACL SolidDataset.\n */\nexport function getAgentResourceAccess(\n  aclDataset: AclDataset,\n  agent: WebId,\n): Access {\n  const allRules = internal_getAclRules(aclDataset);\n  const resourceRules = internal_getResourceAclRulesForResource(\n    allRules,\n    aclDataset.internal_accessTo,\n  );\n  const agentResourceRules = getAgentAclRulesForAgent(resourceRules, agent);\n  const agentAccessModes = agentResourceRules.map(internal_getAccess);\n  return internal_combineAccessModes(agentAccessModes);\n}\n\n/**\n * ```{note}\n * This function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Returns the explicitly granted Access Modes per Agent for the Resource associated\n * with an ACL (Access Control List).\n *\n * The function does not return:\n *\n * - Access Modes granted indirectly to Agents through other ACL rules, e.g., public or group-specific permissions.\n * - Access Modes granted to Agents for the child Resources if the associated Resource is a Container.\n *\n * @param aclDataset The SolidDataset that contains ACL rules.\n * @returns Access Modes per Agent that have been explicitly granted for the Resource associated with an ACL SolidDataset.\n */\nexport function getAgentResourceAccessAll(aclDataset: AclDataset): AgentAccess {\n  const allRules = internal_getAclRules(aclDataset);\n  const resourceRules = internal_getResourceAclRulesForResource(\n    allRules,\n    aclDataset.internal_accessTo,\n  );\n  const agentResourceRules = getAgentAclRules(resourceRules);\n  return getAccessByAgent(agentResourceRules);\n}\n\n/**\n * ```{note}\n * This function is still experimental and subject to change, even in a non-major release.\n * ```\n * Modifies the resource ACL (Access Control List) to set the Access Modes for the given Agent.\n * Specifically, the function returns a new resource ACL initialised with the given ACL and\n * new rules for the Agent's access.\n *\n * If rules for Agent's access already exist in the given ACL, in the returned ACL,\n * they are replaced by the new rules.\n *\n * This function does not modify:\n *\n * - Access Modes granted indirectly to Agents through other ACL rules, e.g., public or group-specific permissions.\n * - Access Modes granted to Agents for the child Resources if the associated Resource is a Container.\n * - The original ACL.\n *\n * @param aclDataset The SolidDataset that contains Access-Control List rules.\n * @param agent The Agent to grant specific Access Modes.\n * @param access The Access Modes to grant to the Agent for the Resource.\n * @returns A new resource ACL initialised with the given `aclDataset` and `access` for the `agent`.\n */\nexport function setAgentResourceAccess(\n  aclDataset: AclDataset,\n  agent: WebId,\n  access: Access,\n): AclDataset & WithChangeLog {\n  return internal_setActorAccess(\n    aclDataset,\n    access,\n    acl.agent,\n    \"resource\",\n    agent,\n  );\n}\n\n/**\n * ```{note}\n * This function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Returns an Agent's Access Modes explicitly granted for the children of the\n * Container associated with the given ACL (Access Control List).\n *\n * The function does not return:\n * - Access Modes granted indirectly to the Agent through other ACL rules, e.g. public or group-specific permissions.\n * - Access Modes granted to the Agent for the Container Resource itself (see [[getAgentResourceAccess]] instead).\n *\n * @param aclDataset The SolidDataset that contains Access-Control List rules for a certain Container.\n * @param agent WebID of the Agent for which to retrieve what access it has to the Container's children.\n * @returns Access Modes that have been explicitly granted to an Agent for the children of the Container associated with the given ACL.\n */\nexport function getAgentDefaultAccess(\n  aclDataset: AclDataset,\n  agent: WebId,\n): Access {\n  const allRules = internal_getAclRules(aclDataset);\n  const resourceRules = internal_getDefaultAclRulesForResource(\n    allRules,\n    aclDataset.internal_accessTo,\n  );\n  const agentResourceRules = getAgentAclRulesForAgent(resourceRules, agent);\n  const agentAccessModes = agentResourceRules.map(internal_getAccess);\n  return internal_combineAccessModes(agentAccessModes);\n}\n\n/**\n * ```{note}\n * This function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Returns the Access Modes, per Agent, that have been explicitly granted for the children\n * of the Container associated with the given ACL (Access Control List).\n *\n * The function does not return:\n *\n * - Access Modes granted indirectly to the Agents through other ACL rules, e.g. public or group-specific permissions.\n * - Access Modes granted to the Agents for the Container Resource itself (see [[getAgentResourceAccessAll]] instead).\n *\n * @param aclDataset The SolidDataset that contains Access-Control List rules.\n * @returns Access Modes, per Agent, that have been explicitly granted for the children of the Container associated with the given ACL.\n */\nexport function getAgentDefaultAccessAll(aclDataset: AclDataset): AgentAccess {\n  const allRules = internal_getAclRules(aclDataset);\n  const resourceRules = internal_getDefaultAclRulesForResource(\n    allRules,\n    aclDataset.internal_accessTo,\n  );\n  const agentResourceRules = getAgentAclRules(resourceRules);\n\n  return getAccessByAgent(agentResourceRules);\n}\n\n/**\n * ```{note}\n * This function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Modifies the default ACL (Access Control List) to set an Agent's Access Modes for the Container's children.\n * Specifically, the function returns a new default ACL initialised with the given ACL and\n * new rules for the Agent's access.\n *\n * If rules already exist for the Agent in the given ACL, in the returned ACL, they are replaced by the new rules.\n *\n * This function does not modify:\n * - Access Modes granted indirectly to the Agent through other ACL rules, e.g., public or group-specific permissions.\n * - Access Modes granted to the Agent for the Container Resource itself.\n * - The original ACL.\n *\n * @param aclDataset The SolidDataset that contains Access-Control List rules.\n * @param agent The Agent to grant specific Access Modes.\n * @param access The Access Modes to grant to the Agent.\n * @returns A new default ACL initialised with the given `aclDataset` and `access` for the `agent`.\n */\nexport function setAgentDefaultAccess(\n  aclDataset: AclDataset,\n  agent: WebId,\n  access: Access,\n): AclDataset & WithChangeLog {\n  return internal_setActorAccess(\n    aclDataset,\n    access,\n    acl.agent,\n    \"default\",\n    agent,\n  );\n}\n\nfunction getAgentAclRulesForAgent(\n  aclRules: AclRule[],\n  agent: WebId,\n): AclRule[] {\n  return internal_getAclRulesForIri(aclRules, agent, acl.agent);\n}\n\nfunction getAgentAclRules(aclRules: AclRule[]): AclRule[] {\n  return aclRules.filter(isAgentAclRule);\n}\n\nfunction isAgentAclRule(aclRule: AclRule): boolean {\n  return getIri(aclRule, acl.agent) !== null;\n}\n\nfunction getAccessByAgent(aclRules: AclRule[]): AgentAccess {\n  return internal_getAccessByIri(aclRules, acl.agent);\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type {\n  WithServerResourceInfo,\n  IriString,\n  UrlString,\n  WithChangeLog,\n} from \"../interfaces\";\nimport type { AclDataset, Access, AclRule, WithAcl } from \"./acl\";\nimport {\n  hasResourceAcl,\n  hasFallbackAcl,\n  getResourceAcl,\n  getFallbackAcl,\n} from \"./acl\";\nimport {\n  internal_getAclRules,\n  internal_getDefaultAclRulesForResource,\n  internal_getAccess,\n  internal_combineAccessModes,\n  internal_getResourceAclRulesForResource,\n  internal_getAclRulesForIri,\n  internal_getAccessByIri,\n  internal_setActorAccess,\n} from \"./acl.internal\";\n\nimport { acl } from \"../constants\";\n\n/**\n * ```{note} This function is still experimental and subject to change, even in a non-major release.\n * ```\n * Returns a Group's explicity-granted Access Modes for a given Resource.\n *\n * The function does not return Access Modes granted indirectly to the Group through other\n * ACL rules, e.g., public permissions.\n *\n * @param resourceInfo Information about the Resource to which the given Group may have been granted access.\n * @param group URL of the Group for which to retrieve what access it has to the Resource.\n * @returns Access Modes that have been explicitly granted to the `group` for the given Resource, or `null` if it could not be determined (e.g. because the current user does not have Control Access to a given Resource or its Container).\n */\nexport function getGroupAccess(\n  resourceInfo: WithAcl & WithServerResourceInfo,\n  group: UrlString,\n): Access | null {\n  if (hasResourceAcl(resourceInfo)) {\n    return getGroupResourceAccess(resourceInfo.internal_acl.resourceAcl, group);\n  }\n  if (hasFallbackAcl(resourceInfo)) {\n    return getGroupDefaultAccess(resourceInfo.internal_acl.fallbackAcl, group);\n  }\n  return null;\n}\n\n/**\n * ```{note} This function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Returns all explicitly-granted Access Modes per Group for the given Resource.\n *\n * The function does not return Access Modes granted indirectly to the Group through other\n * ACL rules, e.g., public permissions.\n *\n * @param resourceInfo Information about the Resource to which the given Group may have been granted access.\n * @returns Access Modes per Group that have been explicitly granted for the given Resource, or `null` if it could not be determined (e.g. because the current user does not have Control Access to a given Resource or its Container).\n */\nexport function getGroupAccessAll(\n  resourceInfo: WithAcl & WithServerResourceInfo,\n): Record<IriString, Access> | null {\n  if (hasResourceAcl(resourceInfo)) {\n    const resourceAcl = getResourceAcl(resourceInfo);\n    return getGroupResourceAccessAll(resourceAcl);\n  }\n  if (hasFallbackAcl(resourceInfo)) {\n    const fallbackAcl = getFallbackAcl(resourceInfo);\n    return getGroupDefaultAccessAll(fallbackAcl);\n  }\n  return null;\n}\n\n/**\n * ```{note} This function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Returns the Access Modes explicitly granted to a Group for the Resource\n * associated with an ACL (Access Control List).\n *\n * The function does not return:\n * - Access Modes granted indirectly to the Group through other ACL rules, e.g., public permissions.\n * - Access Modes granted to the Group for the child Resources if the associated Resource is a Container\n *   (see [[getGroupDefaultAccess]] instead).\n *\n * @param aclDataset The SolidDataset that contains Access Control List rules.\n * @param group URL of the Group for which to retrieve what access it has to the Resource.\n * @returns Access Modes explicitly granted to a Group for the Resource associated with an ACL.\n */\nexport function getGroupResourceAccess(\n  aclDataset: AclDataset,\n  group: UrlString,\n): Access {\n  const allRules = internal_getAclRules(aclDataset);\n  const resourceRules = internal_getResourceAclRulesForResource(\n    allRules,\n    aclDataset.internal_accessTo,\n  );\n  const groupResourceRules = getGroupAclRuleForGroup(resourceRules, group);\n  const groupAccessModes = groupResourceRules.map(internal_getAccess);\n  return internal_combineAccessModes(groupAccessModes);\n}\n\n/**\n * ```{note} This function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Returns the explicitly granted Access Modes per Group for the Resource associated\n * with an ACL (Access Control List).\n *\n * The function does not return:\n * - Access Modes granted indirectly to the Group through other ACL rules, e.g., public permissions.\n * - Access Modes granted to Groups for the child Resources if the associated Resource is a Container.\n *\n * @param aclDataset The SolidDataset that contains Access Control List rules.\n * @returns Access Modes per Group that have been explicitly granted for the Resource associated with an ACL.\n */\nexport function getGroupResourceAccessAll(\n  aclDataset: AclDataset,\n): Record<UrlString, Access> {\n  const allRules = internal_getAclRules(aclDataset);\n  const resourceRules = internal_getResourceAclRulesForResource(\n    allRules,\n    aclDataset.internal_accessTo,\n  );\n  return getAccessByGroup(resourceRules);\n}\n\n/**\n * ```{note} This function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Returns a Group's Access Modes explicitly granted for the children of the\n * Container associated with an ACL (Access ControlList).\n *\n * The function does not return:\n * - Access Modes granted indirectly to the Group through other ACL rules, e.g. public permissions.\n * - Access Modes granted to the Group for the Container Resource itself (see [[getGroupResourceAccess]] instead).\n *\n * @param aclDataset The SolidDataset that contains ACL rules for a certain Container.\n * @param group URL of the Group for which to retrieve what access it has to the child Resources of the given Container.\n * @returns Access Modes that have been explicitly granted to the Group for the children of the Container associated with the given ACL.\n */\nexport function getGroupDefaultAccess(\n  aclDataset: AclDataset,\n  group: UrlString,\n): Access {\n  const allRules = internal_getAclRules(aclDataset);\n  const defaultRules = internal_getDefaultAclRulesForResource(\n    allRules,\n    aclDataset.internal_accessTo,\n  );\n  const groupDefaultRules = getGroupAclRuleForGroup(defaultRules, group);\n  const groupAccessModes = groupDefaultRules.map(internal_getAccess);\n  return internal_combineAccessModes(groupAccessModes);\n}\n\n/**\n * ```{note} This function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Returns the Access Modes, per Group, that have been explicitly granted for the children\n * of the Container associated with the given ACL (Access Control List).\n *\n * The function does not return:\n * - Access Modes granted indirectly to the Groups through other ACL rules, e.g. public permissions.\n * - Access Modes granted to the Groups for the Container Resource itself (see [[getGroupResourceAccessAll]] instead).\n *\n * @param aclDataset The SolidDataset that contains Access Control List rules for a certain Container.\n * @returns Access Modes per Group that have been explicitly granted for the children of the Container associated with the given ACL SolidDataset.\n */\nexport function getGroupDefaultAccessAll(\n  aclDataset: AclDataset,\n): Record<UrlString, Access> {\n  const allRules = internal_getAclRules(aclDataset);\n  const defaultRules = internal_getDefaultAclRulesForResource(\n    allRules,\n    aclDataset.internal_accessTo,\n  );\n  return getAccessByGroup(defaultRules);\n}\n\nfunction getGroupAclRuleForGroup(\n  rules: AclRule[],\n  group: UrlString,\n): AclRule[] {\n  return internal_getAclRulesForIri(rules, group, acl.agentGroup);\n}\n\nfunction getAccessByGroup(aclRules: AclRule[]): Record<IriString, Access> {\n  return internal_getAccessByIri(aclRules, acl.agentGroup);\n}\n\n/**\n * ```{note}\n * This function is still experimental and subject to change, even in a non-major release.\n * ```\n * Modifies the resource ACL (Access Control List) to set the Access Modes for the given Group.\n * Specifically, the function returns a new resource ACL initialised with the given ACL and\n * new rules for the Group's access.\n *\n * If rules for Groups's access already exist in the given ACL, in the returned ACL,\n * they are replaced by the new rules.\n *\n * This function does not modify:\n *\n * - Access Modes granted indirectly to Groups through other ACL rules, e.g., public or Agent-specific permissions.\n * - Access Modes granted to Groups for the child Resources if the associated Resource is a Container.\n * - The original ACL.\n *\n * @param aclDataset The SolidDataset that contains Access-Control List rules.\n * @param group The Group to grant specific Access Modes.\n * @param access The Access Modes to grant to the Group for the Resource.\n * @returns A new resource ACL initialised with the given `aclDataset` and `access` for the `group`.\n * @since 1.4.0\n */\nexport function setGroupResourceAccess(\n  aclDataset: AclDataset,\n  group: UrlString,\n  access: Access,\n): AclDataset & WithChangeLog {\n  return internal_setActorAccess(\n    aclDataset,\n    access,\n    acl.agentGroup,\n    \"resource\",\n    group,\n  );\n}\n\n/**\n * ```{note}\n * This function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Modifies the default ACL (Access Control List) to set a Group's Access Modes for the Container's children.\n * Specifically, the function returns a new default ACL initialised with the given ACL and\n * new rules for the Group's access.\n *\n * If rules already exist for the Group in the given ACL, in the returned ACL, they are replaced by the new rules.\n *\n * This function does not modify:\n * - Access Modes granted indirectly to the Group through other ACL rules, e.g., public or Agent-specific permissions.\n * - Access Modes granted to the Group for the Container Resource itself.\n * - The original ACL.\n *\n * @param aclDataset The SolidDataset that contains Access-Control List rules.\n * @param group The Group to grant specific Access Modes.\n * @param access The Access Modes to grant to the Group.\n * @returns A new default ACL initialised with the given `aclDataset` and `access` for the `group`.\n * @since 1.4.0\n */\nexport function setGroupDefaultAccess(\n  aclDataset: AclDataset,\n  group: UrlString,\n  access: Access,\n): AclDataset & WithChangeLog {\n  return internal_setActorAccess(\n    aclDataset,\n    access,\n    acl.agentGroup,\n    \"default\",\n    group,\n  );\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type {\n  IriString,\n  WithServerResourceInfo,\n  WithChangeLog,\n} from \"../interfaces\";\nimport { acl, foaf } from \"../constants\";\nimport { getIriAll } from \"../thing/get\";\nimport type { Access, AclDataset, AclRule, WithAcl } from \"./acl\";\nimport { hasResourceAcl, hasFallbackAcl } from \"./acl\";\nimport {\n  internal_getAclRules,\n  internal_getResourceAclRulesForResource,\n  internal_getDefaultAclRulesForResource,\n  internal_getAccess,\n  internal_combineAccessModes,\n  internal_setActorAccess,\n} from \"./acl.internal\";\n\n/**\n * ```{note}\n * This function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Returns the Access Modes granted to the public in general for a Resource.\n *\n * This function does not return Access Modes granted to specific Agents\n * through other ACL (Access Control List) rules, e.g., agent- or group-specific permissions.\n *\n * @param resourceInfo Information about the Resource to which the given Agent may have been granted access.\n * @returns Access Modes granted to the public in general for the Resource, or `null` if it could not be determined (e.g. because the current user does not have Control Access to a given Resource or its Container).\n */\nexport function getPublicAccess(\n  resourceInfo: WithAcl & WithServerResourceInfo,\n): Access | null {\n  if (hasResourceAcl(resourceInfo)) {\n    return getPublicResourceAccess(resourceInfo.internal_acl.resourceAcl);\n  }\n  if (hasFallbackAcl(resourceInfo)) {\n    return getPublicDefaultAccess(resourceInfo.internal_acl.fallbackAcl);\n  }\n  return null;\n}\n\n/**\n * ```{note}\n * This function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Returns the Access Modes granted to the public in general for the Resource\n * associated with an ACL (Access Control List).\n *\n * This function does not return:\n * - Access Modes granted to specific Agents through other ACL rules, e.g., agent- or group-specific permissions.\n * - Access Modes to child Resources if the associated Resource is a Container (see [[getPublicDefaultAccess]] instead).\n *\n * @param aclDataset The SolidDataset that contains Access Control List rules.\n * @returns Access Modes granted to the public in general for the Resource associated with the `aclDataset`.\n */\nexport function getPublicResourceAccess(aclDataset: AclDataset): Access {\n  const allRules = internal_getAclRules(aclDataset);\n  const resourceRules = internal_getResourceAclRulesForResource(\n    allRules,\n    aclDataset.internal_accessTo,\n  );\n  const publicResourceRules = getClassAclRulesForClass(\n    resourceRules,\n    foaf.Agent,\n  );\n  const publicAccessModes = publicResourceRules.map(internal_getAccess);\n  return internal_combineAccessModes(publicAccessModes);\n}\n\n/**\n * ```{note}\n * This function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Returns the Access Modes granted to the public in general for the child Resources\n * of the Container associated with an ACL (Access Control List).\n *\n * This function does not return:\n * - Access Modes granted to Agents through other ACL rules, e.g., agent- or group-specific permissions.\n * - Access Modes to the Container Resource itself (see [[getPublicResourceAccess]] instead).\n *\n * @param aclDataset The SolidDataset that contains Access Control List rules for a certain Container.\n * @returns Access Modes granted to the public in general for the children of the Container associated with the given `aclDataset`.\n */\nexport function getPublicDefaultAccess(aclDataset: AclDataset): Access {\n  const allRules = internal_getAclRules(aclDataset);\n  const resourceRules = internal_getDefaultAclRulesForResource(\n    allRules,\n    aclDataset.internal_accessTo,\n  );\n  const publicResourceRules = getClassAclRulesForClass(\n    resourceRules,\n    foaf.Agent,\n  );\n  const publicAccessModes = publicResourceRules.map(internal_getAccess);\n  return internal_combineAccessModes(publicAccessModes);\n}\n\n/**\n * ```{note}\n * This function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Modifies the resource ACL (Access Control List) to set the Access Modes for the public.\n * Specifically, the function returns a new resource ACL (Access Control List) initialised\n * with the given resource ACL and new rules for the given public access.\n *\n * If rules for public access already exist in the given ACL, in the *returned* ACL,\n * they are replaced by the new rules.\n *\n * This function does not modify:\n * - Access Modes granted to Agents through other ACL rules, e.g., agent- or group-specific permissions.\n * - Access Modes to child Resources if the associated Resource is a Container.\n * - The original ACL.\n *\n * @param aclDataset The SolidDataset that contains Access Control List rules.\n * @param access The Access Modes to grant to the public.\n * @returns A new resource ACL initialised with the given `aclDataset` and public `access`.\n */\nexport function setPublicResourceAccess(\n  aclDataset: AclDataset,\n  access: Access,\n): AclDataset & WithChangeLog {\n  return internal_setActorAccess(\n    aclDataset,\n    access,\n    acl.agentClass,\n    \"resource\",\n    foaf.Agent,\n  );\n}\n\n/**\n * ```{note}\n * This function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Modifies the default ACL (Access Control List) to set the public's default Access Modes\n * to child resources. Specifically, the function returns a new default ACL initialised\n * with the given default ACL and new rules for the given public access.\n *\n * If rules for public access already exist in the given ACL, in the *returned* ACL,\n * they are replaced by the new rules.\n *\n * This function does not modify:\n * - Access Modes granted to Agents through other ACL rules, e.g., agent- or group-specific permissions.\n * - Access Modes to Container Resource itself.\n * - The original ACL.\n *\n * @param aclDataset The SolidDataset that contains Access Control List rules.\n * @param access The Access Modes to grant to the public.\n * @returns A new default ACL initialised with the given `aclDataset` and public `access`.\n */\nexport function setPublicDefaultAccess(\n  aclDataset: AclDataset,\n  access: Access,\n): AclDataset & WithChangeLog {\n  return internal_setActorAccess(\n    aclDataset,\n    access,\n    acl.agentClass,\n    \"default\",\n    foaf.Agent,\n  );\n}\n\nfunction getClassAclRulesForClass(\n  aclRules: AclRule[],\n  agentClass: IriString,\n): AclRule[] {\n  return aclRules.filter((rule) => appliesToClass(rule, agentClass));\n}\n\nfunction appliesToClass(aclRule: AclRule, agentClass: IriString): boolean {\n  return getIriAll(aclRule, acl.agentClass).includes(agentClass);\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type {\n  IriString,\n  SolidDataset,\n  Thing,\n  UrlString,\n  WithResourceInfo,\n  WithServerResourceInfo,\n} from \"../interfaces\";\nimport { internal_cloneResource } from \"../resource/resource.internal\";\nimport { addIri } from \"../thing/add\";\nimport { createThing, getThing, setThing } from \"../thing/thing\";\nimport type { Access, AclDataset, WithAccessibleAcl } from \"./acl\";\n\nexport function addMockAclRuleQuads(\n  aclDataset: SolidDataset & WithResourceInfo,\n  agent: IriString,\n  resource: IriString,\n  access: Access,\n  type: \"resource\" | \"default\" | \"legacyDefault\",\n  ruleIri?: IriString,\n  targetType:\n    | \"http://www.w3.org/ns/auth/acl#agent\"\n    | \"http://www.w3.org/ns/auth/acl#agentGroup\"\n    | \"http://www.w3.org/ns/auth/acl#agentClass\"\n    | \"http://www.w3.org/ns/auth/acl#origin\" = \"http://www.w3.org/ns/auth/acl#agent\",\n): AclDataset {\n  let newControl: Thing = createThing({\n    name: encodeURIComponent(agent) + Math.random(),\n  });\n  if (typeof ruleIri === \"string\") {\n    newControl = getThing(aclDataset, ruleIri) ?? createThing({ url: ruleIri });\n  }\n  newControl = addIri(\n    newControl,\n    \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\",\n    \"http://www.w3.org/ns/auth/acl#Authorization\",\n  );\n  let resourceRelation: IriString = \"http://www.w3.org/ns/auth/acl#accessTo\";\n  if (type === \"default\") {\n    resourceRelation = \"http://www.w3.org/ns/auth/acl#default\";\n  }\n  if (type === \"legacyDefault\") {\n    resourceRelation = \"http://www.w3.org/ns/auth/acl#defaultForNew\";\n  }\n  newControl = addIri(newControl, resourceRelation, resource);\n  newControl = addIri(newControl, targetType, agent);\n  if (access.read) {\n    newControl = addIri(\n      newControl,\n      \"http://www.w3.org/ns/auth/acl#mode\",\n      \"http://www.w3.org/ns/auth/acl#Read\",\n    );\n  }\n  if (access.append) {\n    newControl = addIri(\n      newControl,\n      \"http://www.w3.org/ns/auth/acl#mode\",\n      \"http://www.w3.org/ns/auth/acl#Append\",\n    );\n  }\n  if (access.write) {\n    newControl = addIri(\n      newControl,\n      \"http://www.w3.org/ns/auth/acl#mode\",\n      \"http://www.w3.org/ns/auth/acl#Write\",\n    );\n  }\n  if (access.control) {\n    newControl = addIri(\n      newControl,\n      \"http://www.w3.org/ns/auth/acl#mode\",\n      \"http://www.w3.org/ns/auth/acl#Control\",\n    );\n  }\n\n  aclDataset = setThing(aclDataset, newControl);\n  return { ...aclDataset, internal_accessTo: resource };\n}\n\nexport function setMockAclUrl<T extends WithServerResourceInfo>(\n  resource: T,\n  aclUrl: UrlString,\n): T & WithAccessibleAcl {\n  const resourceWithAclUrl: typeof resource & WithAccessibleAcl = Object.assign(\n    internal_cloneResource(resource),\n    {\n      internal_resourceInfo: {\n        ...resource.internal_resourceInfo,\n        aclUrl,\n      },\n    },\n  );\n\n  return resourceWithAclUrl;\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { WithServerResourceInfo } from \"../interfaces\";\nimport { getSourceIri } from \"../resource/resource\";\nimport { internal_cloneResource } from \"../resource/resource.internal\";\nimport type {\n  WithAccessibleAcl,\n  WithFallbackAcl,\n  WithResourceAcl,\n} from \"./acl\";\nimport { createAcl } from \"./acl\";\nimport { internal_getContainerPath, internal_setAcl } from \"./acl.internal\";\nimport { mockContainerFrom } from \"../resource/mock\";\nimport { setMockAclUrl } from \"./mock.internal\";\n\n/**\n * ```{warning}\n * Do not use this function in production code. For use in **unit tests** that\n * require a [[SolidDataset]] with a resource ACL (Access Control List).\n * ```\n *\n * Initialises a new empty ACL and attaches it to a given [[SolidDataset]] for use\n * in **unit tests**; e.g., unit tests that call [[getResourceAcl]].\n *\n * @param resource The Resource to mock up with a new resource ACL.\n * @returns The input Resource with an empty resource ACL attached.\n * @since 0.2.0\n */\nexport function addMockResourceAclTo<T extends WithServerResourceInfo>(\n  resource: T,\n): T & WithResourceAcl {\n  const aclUrl =\n    resource.internal_resourceInfo.aclUrl ?? \"https://your.pod/mock-acl.ttl\";\n  const resourceWithAclUrl: typeof resource & WithAccessibleAcl = Object.assign(\n    internal_cloneResource(resource),\n    {\n      internal_resourceInfo: {\n        ...resource.internal_resourceInfo,\n        aclUrl,\n      },\n    },\n  );\n  const aclDataset = createAcl(resourceWithAclUrl);\n\n  const resourceWithResourceAcl = internal_setAcl(resourceWithAclUrl, {\n    resourceAcl: aclDataset,\n    fallbackAcl: null,\n  });\n\n  return resourceWithResourceAcl;\n}\n\n/**\n *\n * ```{warning}\n * Do not use this function in production code.  For use in **unit tests** that require a\n * [[SolidDataset]] with a fallback ACL (Access Control List).\n * ```\n *\n * Initialises a new empty fallback ACL and attaches it to a given [[SolidDataset]] for use\n * in **unit tests**; e.g., unit tests that call [[getFallbackAcl]].\n *\n * @param resource The Resource to mock up with new fallback ACL.\n * @returns The input Resource with an empty fallback ACL attached.\n * @since 0.2.0\n */\nexport function addMockFallbackAclTo<T extends WithServerResourceInfo>(\n  resource: T,\n): T & WithFallbackAcl {\n  const containerUrl = internal_getContainerPath(getSourceIri(resource));\n  const aclUrl = `${containerUrl}.acl`;\n  const mockContainer = setMockAclUrl(mockContainerFrom(containerUrl), aclUrl);\n  const aclDataset = createAcl(mockContainer);\n\n  const resourceWithFallbackAcl = internal_setAcl(\n    internal_cloneResource(resource),\n    {\n      resourceAcl: null,\n      fallbackAcl: aclDataset,\n    },\n  );\n\n  return resourceWithFallbackAcl;\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport { security } from \"../constants\";\nimport type {\n  Iri,\n  IriString,\n  Jwk,\n  Jwks,\n  SolidDataset,\n  ThingPersisted,\n  UrlString,\n  WebId,\n  WithResourceInfo,\n} from \"../interfaces\";\nimport { overwriteFile } from \"../resource/file\";\nimport { getSourceUrl } from \"../resource/resource\";\nimport { getSolidDataset } from \"../resource/solidDataset\";\nimport { getUrl } from \"../thing/get\";\nimport { setIri } from \"../thing/set\";\nimport { getThing, setThing } from \"../thing/thing\";\n\nfunction getProfileFromProfileDoc(\n  profileDataset: SolidDataset,\n  webId: WebId,\n): ThingPersisted {\n  const profile = getThing(profileDataset, webId);\n  if (profile === null) {\n    throw new Error(\n      `Profile document [${getSourceUrl(\n        profileDataset,\n      )}] does not include WebID [${webId}]`,\n    );\n  }\n  return profile;\n}\n\n/**\n * Set a JWKS IRI associated with a WebID in a profile document.\n *\n * @param profileDocument The profile document dataset.\n * @param webId The WebID associated with the profile document.\n * @param jwksIri The JWKS IRI to be set.\n * @returns A modified copy of the profile document, with the JWKS IRI set.\n * @since 1.12.0\n */\nexport function setProfileJwks<Dataset extends SolidDataset>(\n  profileDocument: Dataset,\n  webId: WebId,\n  jwksIri: Iri | IriString,\n): Dataset {\n  return setThing(\n    profileDocument,\n    setIri(\n      getProfileFromProfileDoc(profileDocument, webId),\n      security.publicKey,\n      jwksIri,\n    ),\n  );\n}\n\n/**\n * Look for a JWKS IRI optionally advertized from a profile document.\n *\n * @param profileDocument The profile document.\n * @param webId The WebID featured in the profile document.\n * @returns The JWKS IRI associated with the WebID, if any.\n * @since 1.12.0\n */\nexport function getProfileJwksIri(\n  profileDocument: SolidDataset,\n  webId: WebId,\n): UrlString | null {\n  return getUrl(\n    getProfileFromProfileDoc(profileDocument, webId),\n    security.publicKey,\n  );\n}\n\nconst isJwks = (jwksDocument: Jwks | unknown): jwksDocument is Jwks => {\n  return typeof (jwksDocument as Jwks).keys !== \"undefined\";\n};\n\n/**\n * Fetch a JWKS at a given IRI, and add the given JWK to the obtained key set.\n *\n * @param jwk The JWK to add to the set.\n * @param jwksIri The IRI where the key set should be looked up.\n * @param options @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\n * @returns Promise resolving to a JWKS where the given key has been added.\n * @since 1.12.0\n */\nexport async function addJwkToJwks(\n  jwk: Jwk,\n  jwksIri: IriString,\n  options?: { fetch?: typeof fetch },\n): Promise<Jwks> {\n  const jwksResponse = await (options?.fetch ?? fetch)(jwksIri);\n  if (!jwksResponse.ok) {\n    throw new Error(\n      `Fetching [${jwksIri}] returned an error: ${jwksResponse.status} ${jwksResponse.statusText}`,\n    );\n  }\n  try {\n    const jwksDocument = await jwksResponse.json();\n    if (!isJwks(jwksDocument)) {\n      throw new Error(\n        `[${jwksIri}] does not dereference to a valid JWKS: ${JSON.stringify(\n          jwksDocument,\n        )}`,\n      );\n    }\n    return {\n      keys: [...jwksDocument.keys, jwk],\n    };\n  } catch (e) {\n    throw new Error(`Parsing the document at [${jwksIri}] failed: ${e}`);\n  }\n}\n\n/**\n * Adds a public key to the JWKS listed in the profile associated to the given WebID.\n * Retrieves the profile document for the specified WebID and looks up the associated\n * JWKS. Having added the given key to the JWKS, this function overwrites the\n * previous JWKS so that the new version is saved. This assumes the JWKS is hosted\n * at a read-write IRI, such as in a Solid Pod.\n *\n * @param publicKey The public key value to set.\n * @param webId The WebID whose profile document references the key set to which we wish to add the specified public key.\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\n * @since 1.12.0\n */\nexport async function addPublicKeyToProfileJwks(\n  publicKey: Jwk,\n  webId: WebId,\n  options: { fetch?: typeof fetch } = {},\n): Promise<Blob & WithResourceInfo> {\n  const profileDataset = await getSolidDataset(webId, options);\n  if (profileDataset === null) {\n    throw new Error(\n      `The profile document associated with WebID [${webId}] could not be retrieved.`,\n    );\n  }\n\n  const jwksIri = getProfileJwksIri(profileDataset, webId);\n\n  if (jwksIri === null) {\n    throw new Error(\n      `No key set is declared for the property [${security.publicKey}] in the profile of [${webId}]`,\n    );\n  }\n\n  const updatedJwks = await addJwkToJwks(publicKey, jwksIri, options);\n\n  return overwriteFile(jwksIri, new Blob([JSON.stringify(updatedJwks)]), {\n    contentType: \"application/json\",\n    fetch: options.fetch,\n  });\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type {\n  SolidDataset,\n  UrlString,\n  WebId,\n  WithServerResourceInfo,\n} from \"..\";\nimport { asIri, getIriAll, getSolidDataset, getThing, getThingAll } from \"..\";\nimport { foaf, pim, rdfs } from \"../constants\";\nimport { getSourceIri } from \"../resource/resource\";\n\nexport type ProfileAll<T extends SolidDataset & WithServerResourceInfo> = {\n  webIdProfile: T;\n  altProfileAll: Array<SolidDataset & WithServerResourceInfo>;\n};\n\n/**\n * List all the alternative profiles IRI found in a given WebID profile.\n *\n * Note that some of these profiles may be private, and you may not have access to\n * the resulting resource.\n *\n * @param webId The WebID of the user's whose alternative profiles you are discovering.\n * @param webIdProfile The WebID profile obtained dereferencing the provided WebID.\n * @returns A list of URLs of the user's alternative profiles.\n * @since 1.20.0\n */\nexport function getAltProfileUrlAllFrom(\n  webId: WebId,\n  webIdProfile: SolidDataset,\n): UrlString[] {\n  const webIdThing = getThing(webIdProfile, webId);\n\n  const altProfileUrlAll = getThingAll(webIdProfile)\n    .filter((thing) => getIriAll(thing, foaf.primaryTopic).length > 0)\n    .map(asIri)\n    .concat(webIdThing ? getIriAll(webIdThing, rdfs.seeAlso) : [])\n    .concat(webIdThing ? getIriAll(webIdThing, foaf.isPrimaryTopicOf) : [])\n    .filter((profileIri) => profileIri !== getSourceIri(webIdProfile));\n\n  // Deduplicate the results.\n  return Array.from(new Set(altProfileUrlAll));\n}\n\n/**\n * Get all the Profile Resources discoverable from a WebID Profile.\n *\n * A WebID Profile may be any RDF resource on the Web, it doesn't have\n * to be a Solid resource. That is why, in order to expose a Solid-enabled part\n * of their profile, some WebID profiles link to one or more Extended Profile Resources,\n * which may are Solid resources. A WebID resource should be public, so `getProfileAll` will\n * issue an unauthenticated request to the WebID, and only use the provided\n * authenticated `fetch` (if any) to access extended profile documents.\n *\n * @param webId WebID of the agent you want the profile of.\n * @param options Optional parameter\n *  - `options.webIdProfile`: The data retrieved when looking up the WebID. This\n *    will be fetched if not provided.\n *  - `options.fetch`: An alternative `fetch` function to make the HTTP request,\n *    compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\n * @returns Promise resolving to an array of [[SolidDataset]], each corresponding\n *  to a personal profile document discoverable from the WebID Profile Document.\n *  If none are found, the WebID profile document itself is returned.\n * @since 1.16.0\n */\nexport async function getProfileAll<\n  T extends SolidDataset & WithServerResourceInfo,\n>(\n  webId: WebId,\n  options?: {\n    fetch?: typeof fetch;\n    webIdProfile?: T;\n  },\n): Promise<ProfileAll<T>>;\nexport async function getProfileAll(\n  webId: WebId,\n  options?: { fetch?: typeof fetch; webIdProfile: undefined },\n): Promise<ProfileAll<SolidDataset & WithServerResourceInfo>>;\nexport async function getProfileAll<\n  T extends SolidDataset & WithServerResourceInfo,\n>(\n  webId: WebId,\n  options?: {\n    fetch?: typeof fetch;\n    webIdProfile?: T;\n  },\n): Promise<ProfileAll<T | (SolidDataset & WithServerResourceInfo)>> {\n  const authFetch = options?.fetch ?? fetch;\n  const webIdProfile =\n    options?.webIdProfile ??\n    // This should always use an unauthenticated fetch.\n    (await getSolidDataset(webId));\n  const altProfileAll = (\n    await Promise.allSettled(\n      getAltProfileUrlAllFrom(webId, webIdProfile).map((uniqueProfileIri) =>\n        getSolidDataset(uniqueProfileIri, { fetch: authFetch }),\n      ),\n    )\n  )\n    // Ignore the alternative profiles lookup which failed.\n    .filter(\n      (result): result is PromiseFulfilledResult<T> =>\n        result.status === \"fulfilled\",\n    )\n    .map((successfulResult) => successfulResult.value);\n\n  return {\n    webIdProfile,\n    altProfileAll,\n  };\n}\n\n/**\n * Discover the Pods an agent advertises for in their profile resources. Both the\n * agent's WebID and alternative profiles are fetched. Note that this function will\n * only return URLs of Pods linked to using the `pim:storage`, i.e. a triple\n * looking like <myWebid, pim:storage, myPodUrl> should appear in the profile\n * resources.\n *\n * @param webId The WebID of the agent whose Pods should be discovered\n * @param options Optional parameter\n * - `options.fetch`: An alternative `fetch` function to make the HTTP request,\n *    compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\n * @returns a Promise resolving to an array containing the URLs of all the Pods\n * linked from the agent's profile resource using the `pim:storage` predicate.\n * @since 1.18.0\n */\nexport async function getPodUrlAll(\n  webId: WebId,\n  options?: { fetch?: typeof fetch },\n): Promise<UrlString[]> {\n  const profiles = await getProfileAll(webId, options);\n  return getPodUrlAllFrom(profiles, webId);\n}\n\n/**\n * Discover the Pods advertised for in the provided profile resources. Note that\n * this function will only return URLs of Pods linked to using the `pim:storage`\n * predicate, i.e. a triple looking like <myWebid, pim:storage, myPodUrl>\n * should appear in the profile resources.\n *\n * @param profiles The profile resources in which the Pods should be discovered\n * @param webId The WebID of the agent whose Pods should be discovered\n * @returns An array containing the URLs of all the Pods linked from the agent's\n * profile resource using the `pim:storage` predicate.\n * @since 1.18.0\n */\nexport function getPodUrlAllFrom(\n  profiles: ProfileAll<SolidDataset & WithServerResourceInfo>,\n  webId: WebId,\n): UrlString[] {\n  const result: Set<string> = new Set();\n  [profiles.webIdProfile, ...profiles.altProfileAll].forEach(\n    (profileResource) => {\n      const webIdThing = getThing(profileResource, webId);\n      if (webIdThing !== null) {\n        getIriAll(webIdThing, pim.storage).forEach((podIri) =>\n          result.add(podIri),\n        );\n      }\n    },\n  );\n  return Array.from(result);\n}\n\n/**\n * Get the WebID Profile document dataset.\n *\n * @example\n * ```\n * const webId = \"https://example.org/people/me\";\n * const profile = await getWebIdDataset(webId);\n * const podRoot = getPodUrlAllFrom({ webIdProfile: profile, altProfileAll: [] }, webId);\n * const profileThing = getThing(profile, webId);\n * const name = getStringNoLocale(profileThing, FOAF.name);\n * ```\n *\n * @param webId The WebID of the agent whose WebID Profile dataset is to be fetched.\n * @returns a SolidDataset for the WebID Profile document.\n * @since 1.24.0\n */\nexport async function getWebIdDataset(\n  webId: WebId,\n): Promise<ReturnType<typeof getSolidDataset>> {\n  return getSolidDataset(webId);\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { WithServerResourceInfo } from \"../interfaces\";\nimport type { DefaultOptions } from \"../acp/type/DefaultOptions\";\nimport { getResourceInfo } from \"../resource/resource\";\n\n/**\n * Retrieve the Server Resource Info of Resource expressing access control over\n * another resource it is linked to. It applies in both ACP and WAC contexts:\n * the Access Control Resource is discovered consistently using a Link header\n * with `rel=acl`.\n *\n * @param {WithServerResourceInfo} resource The Resource for which ACL we want\n * to retrieve the Server Resource Info.\n * @param {DefaultOptions} options\n * @returns The Server Resource Info if available, null otherwise.\n * @since 1.19.0\n */\nexport async function getAclServerResourceInfo(\n  resource: WithServerResourceInfo,\n  options?: DefaultOptions,\n): Promise<WithServerResourceInfo | null> {\n  if (typeof resource.internal_resourceInfo.aclUrl !== \"string\") {\n    return null;\n  }\n  try {\n    return await getResourceInfo(\n      resource.internal_resourceInfo.aclUrl,\n      options,\n    );\n  } catch {\n    // A WAC-governed resource may have a link to a non-existant ACL (by design).\n    // The absence of an ACL at the target URL is a useful information that is\n    // used by the universal API to pick between ACR and WAC.\n    return null;\n  }\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\n/** @hidden */\nexport const ACP_NAMESPACE = \"http://www.w3.org/ns/solid/acp#\";\n\n/** @hidden */\nexport const ACP = {\n  AccessControl: ACP_NAMESPACE.concat(\"AccessControl\"),\n  AccessControlResource: ACP_NAMESPACE.concat(\"AccessControlResource\"),\n  AuthenticatedAgent: ACP_NAMESPACE.concat(\"AuthenticatedAgent\"),\n  CreatorAgent: ACP_NAMESPACE.concat(\"CreatorAgent\"),\n  Matcher: ACP_NAMESPACE.concat(\"Matcher\"),\n  Policy: ACP_NAMESPACE.concat(\"Policy\"),\n  PublicAgent: ACP_NAMESPACE.concat(\"PublicAgent\"),\n  access: ACP_NAMESPACE.concat(\"access\"),\n  accessControl: ACP_NAMESPACE.concat(\"accessControl\"),\n  agent: ACP_NAMESPACE.concat(\"agent\"),\n  allOf: ACP_NAMESPACE.concat(\"allOf\"),\n  allow: ACP_NAMESPACE.concat(\"allow\"),\n  anyOf: ACP_NAMESPACE.concat(\"anyOf\"),\n  apply: ACP_NAMESPACE.concat(\"apply\"),\n  client: ACP_NAMESPACE.concat(\"client\"),\n  deny: ACP_NAMESPACE.concat(\"deny\"),\n  memberAccessControl: ACP_NAMESPACE.concat(\"memberAccessControl\"),\n  noneOf: ACP_NAMESPACE.concat(\"noneOf\"),\n  vc: ACP_NAMESPACE.concat(\"vc\"),\n};\n\n/** @hidden */\nexport const ACL_NAMESPACE = \"http://www.w3.org/ns/auth/acl#\";\n\n/** @hidden */\nexport const ACL = {\n  Append: ACL_NAMESPACE.concat(\"Append\"),\n  Control: ACL_NAMESPACE.concat(\"Control\"),\n  Read: ACL_NAMESPACE.concat(\"Read\"),\n  Write: ACL_NAMESPACE.concat(\"Write\"),\n};\n\n/** @hidden */\nexport const VC_ACCESS_GRANT = \"http://www.w3.org/ns/solid/vc#SolidAccessGrant\";\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport { acp } from \"../constants\";\nimport type {\n  SolidDataset,\n  Thing,\n  ThingPersisted,\n  Url,\n  UrlString,\n  WithResourceInfo,\n  WithServerResourceInfo,\n} from \"../interfaces\";\nimport { hasServerResourceInfo } from \"../interfaces\";\nimport { getSourceUrl } from \"../resource/resource\";\nimport { addIri } from \"../thing/add\";\nimport { getIriAll } from \"../thing/get\";\nimport { removeAll, removeIri } from \"../thing/remove\";\nimport { createThing, getThing, setThing } from \"../thing/thing\";\nimport type { WithAccessibleAcr } from \"./acp\";\nimport {\n  internal_addMemberPolicyUrl,\n  internal_addPolicyUrl,\n  internal_getAcr,\n  internal_getControlAll,\n  internal_getInitialisedControl,\n  internal_getMemberPolicyUrlAll,\n  internal_getPolicyUrlAll,\n  internal_removeMemberPolicyUrl,\n  internal_removeMemberPolicyUrlAll,\n  internal_removePolicyUrl,\n  internal_removePolicyUrlAll,\n  internal_setAcr,\n  internal_setControl,\n} from \"./control.internal\";\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Given a Resource, check whether it is governed by Access Policies.\n * (Specifically, a Resource that is governed by Access Policies will refer to exactly one Access\n * Control Resource, and expose that to users who are allowed to see or modify access to the given\n * Resource.)\n *\n * @param resource Resource which may or may not be governed by Access Policies.\n * @returns True if the Resource refers to an Access Control Resource and is hence governed by Access Policies, or false if it does not.\n * @since 1.6.0\n */\nexport function hasLinkedAcr<Resource extends WithServerResourceInfo>(\n  resource: Resource,\n): resource is WithLinkedAcr<Resource> {\n  return (\n    hasServerResourceInfo(resource) &&\n    Array.isArray(\n      resource.internal_resourceInfo.linkedResources[acp.accessControl],\n    ) &&\n    resource.internal_resourceInfo.linkedResources[acp.accessControl].length ===\n      1\n  );\n}\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * An Access Control Resource, containing [[Control]]s specifying which [[Policy]]'s\n * apply to the Resource this Access Control Resource is linked to.\n * @since 1.6.0\n */\nexport type AccessControlResource = SolidDataset &\n  WithResourceInfo & { accessTo: UrlString };\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * A Control, usually contained in an [[AccessControlResource]]. It describes which\n * [[Policy]]'s apply to a Resource.\n * @since 1.6.0\n */\nexport type Control = Thing;\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * If this type applies to a Resource, it is governed by an Access Control Resource,\n * and thus not the Web Access Control spec.\n * It does not indicate that this Access Control Resource will also be accessible to the current\n * user.\n * @since 1.6.0\n */\nexport type WithLinkedAcr<\n  Resource extends WithServerResourceInfo = WithServerResourceInfo,\n> = Resource & {\n  internal_resourceInfo: {\n    linkedResources: {\n      [acp.accessControl]: [string];\n    };\n  };\n};\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Add a [[Policy]] to an Access Control Resource such that that [[Policy]] applies to the Access\n * Control Resource itself, rather than the Resource it governs.\n *\n * @param resourceWithAcr The Resource with an Access Control Resource to which the ACR Policy should be added.\n * @param policyUrl URL of the Policy that should apply to the given Access Control Resource.\n * @returns A Resource with a new Access Control Resource equal to the original ACR, but with the given ACR Policy added to it.\n * @since 1.6.0\n */\nexport function addAcrPolicyUrl<ResourceExt extends WithAccessibleAcr>(\n  resourceWithAcr: ResourceExt,\n  policyUrl: Url | UrlString | ThingPersisted,\n): ResourceExt {\n  const acr = internal_getAcr(resourceWithAcr);\n  const acrUrl = getSourceUrl(acr);\n\n  let acrThing = getThing(acr, acrUrl) ?? createThing({ url: acrUrl });\n  acrThing = addIri(acrThing, acp.access, policyUrl);\n  const updatedAcr = setThing(acr, acrThing);\n\n  const updatedResource = internal_setAcr(resourceWithAcr, updatedAcr);\n  return updatedResource;\n}\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Add a [[Policy]] to a Resource's Access Control Resource such that that\n * Policy applies to the Access Control Resources of child Resources.\n *\n * @param resourceWithAcr The Resource with an Access Control Resource to which the ACR Policy should be added.\n * @param policyUrl URL of the Policy that should apply to the given Access Control Resources of children of the Resource.\n * @returns A Resource with a new Access Control Resource equal to the original ACR, but with the given ACR Policy added to it.\n * @since 1.6.0\n */\nexport function addMemberAcrPolicyUrl<ResourceExt extends WithAccessibleAcr>(\n  resourceWithAcr: ResourceExt,\n  policyUrl: Url | UrlString | ThingPersisted,\n): ResourceExt {\n  const acr = internal_getAcr(resourceWithAcr);\n  const acrUrl = getSourceUrl(acr);\n\n  let acrThing = getThing(acr, acrUrl) ?? createThing({ url: acrUrl });\n  acrThing = addIri(acrThing, acp.accessMembers, policyUrl);\n  const updatedAcr = setThing(acr, acrThing);\n\n  const updatedResource = internal_setAcr(resourceWithAcr, updatedAcr);\n  return updatedResource;\n}\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Get the URLs of the Access Policies that apply to an Access Control Resource itself, rather than\n * to the Resource it governs.\n *\n * @param resourceWithAcr The Resource with the Access Control Resource of which to get the URLs of the Policies that govern access to it.\n * @returns URLs of the Policies that govern access to the given Access Control Resource.\n * @since 1.6.0\n */\nexport function getAcrPolicyUrlAll<ResourceExt extends WithAccessibleAcr>(\n  resourceWithAcr: ResourceExt,\n): UrlString[] {\n  const acr = internal_getAcr(resourceWithAcr);\n  const acrUrl = getSourceUrl(acr);\n\n  const acrThing = getThing(acr, acrUrl);\n  if (acrThing === null) {\n    return [];\n  }\n  return getIriAll(acrThing, acp.access);\n}\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Get the URLs of the Access Policies that apply to the Access Control Resources of the Resource's\n * children.\n *\n * @param resourceWithAcr The Resource with the Access Control Resource of which to get the URLs of the Policies that govern access to its children.\n * @returns URLs of the Policies that govern access to the Access Control Resources of the given Resource's children.\n * @since 1.6.0\n */\nexport function getMemberAcrPolicyUrlAll<ResourceExt extends WithAccessibleAcr>(\n  resourceWithAcr: ResourceExt,\n): UrlString[] {\n  const acr = internal_getAcr(resourceWithAcr);\n  const acrUrl = getSourceUrl(acr);\n\n  const acrThing = getThing(acr, acrUrl);\n  if (acrThing === null) {\n    return [];\n  }\n  return getIriAll(acrThing, acp.accessMembers);\n}\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Stop the URL of a given [[Policy]] from applying to an Access Control Resource itself.\n *\n * @param resourceWithAcr The Resource with the Access Control Resource to which the given URL of a Policy should no longer apply.\n * @param policyUrl The URL of the Policy that should no longer apply.\n * @returns A Resource with a new Access Control Resource equal to the original ACR, but with the given ACR Policy removed from it.\n * @since 1.6.0\n */\nexport function removeAcrPolicyUrl<ResourceExt extends WithAccessibleAcr>(\n  resourceWithAcr: ResourceExt,\n  policyUrl: Url | UrlString | ThingPersisted,\n): ResourceExt {\n  const acr = internal_getAcr(resourceWithAcr);\n  const acrUrl = getSourceUrl(acr);\n\n  const acrThing = getThing(acr, acrUrl);\n  if (acrThing === null) {\n    return resourceWithAcr;\n  }\n  const updatedAcrThing = removeIri(acrThing, acp.access, policyUrl);\n  const updatedAcr = setThing(acr, updatedAcrThing);\n\n  return internal_setAcr(resourceWithAcr, updatedAcr);\n}\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Stop the URL of a given [[Policy]] from applying to the Access Control Resources of the\n * Resource's children.\n *\n * @param resourceWithAcr The Resource with the Access Control Resource to whose children's ACRs the given URL of a Policy should no longer apply.\n * @param policyUrl The URL of the Policy that should no longer apply.\n * @returns A Resource with a new Access Control Resource equal to the original ACR, but with the given member ACR Policy removed from it.\n * @since 1.6.0\n */\nexport function removeMemberAcrPolicyUrl<ResourceExt extends WithAccessibleAcr>(\n  resourceWithAcr: ResourceExt,\n  policyUrl: Url | UrlString | ThingPersisted,\n): ResourceExt {\n  const acr = internal_getAcr(resourceWithAcr);\n  const acrUrl = getSourceUrl(acr);\n\n  const acrThing = getThing(acr, acrUrl);\n  if (acrThing === null) {\n    return resourceWithAcr;\n  }\n  const updatedAcrThing = removeIri(acrThing, acp.accessMembers, policyUrl);\n  const updatedAcr = setThing(acr, updatedAcrThing);\n\n  return internal_setAcr(resourceWithAcr, updatedAcr);\n}\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Stop all URL of Access Policies from applying to an Access Control Resource itself.\n *\n * @param resourceWithAcr The Resource with the Access Control Resource to which no more Policies should apply.\n * @returns A Resource with a new Access Control Resource equal to the original ACR, but without any Policy applying to it.\n * @since 1.6.0\n */\nexport function removeAcrPolicyUrlAll<ResourceExt extends WithAccessibleAcr>(\n  resourceWithAcr: ResourceExt,\n): ResourceExt {\n  const acr = internal_getAcr(resourceWithAcr);\n  const acrUrl = getSourceUrl(acr);\n\n  const acrThing = getThing(acr, acrUrl);\n  if (acrThing === null) {\n    return resourceWithAcr;\n  }\n  const updatedAcrThing = removeAll(acrThing, acp.access);\n  const updatedAcr = setThing(acr, updatedAcrThing);\n\n  return internal_setAcr(resourceWithAcr, updatedAcr);\n}\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Stop all URL of Access Policies from applying to the Access Control Resources of the Resource's\n * children.\n *\n * @param resourceWithAcr The Resource with the Access Control Resource that should no longer apply Policies to its children's ACRs.\n * @returns A Resource with a new Access Control Resource equal to the original ACR, but without any Policy applying to its children's ACRs.\n * @since 1.6.0\n */\nexport function removeMemberAcrPolicyUrlAll<\n  ResourceExt extends WithAccessibleAcr,\n>(resourceWithAcr: ResourceExt): ResourceExt {\n  const acr = internal_getAcr(resourceWithAcr);\n  const acrUrl = getSourceUrl(acr);\n\n  const acrThing = getThing(acr, acrUrl);\n  if (acrThing === null) {\n    return resourceWithAcr;\n  }\n  const updatedAcrThing = removeAll(acrThing, acp.accessMembers);\n  const updatedAcr = setThing(acr, updatedAcrThing);\n\n  return internal_setAcr(resourceWithAcr, updatedAcr);\n}\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Add a [[Policy]] to an Access Control Resource such that that [[Policy]] applies to that Resource.\n *\n * @param resourceWithAcr The Resource to which the ACR Policy should be added.\n * @param policyUrl URL of the Policy that should apply to the given Resource.\n * @returns A Resource with a new Access Control Resource equal to the original ACR, but with the given Policy added to it.\n * @since 1.6.0\n */\nexport function addPolicyUrl<ResourceExt extends WithAccessibleAcr>(\n  resourceWithAcr: ResourceExt,\n  policyUrl: Url | UrlString,\n): ResourceExt {\n  const control = internal_getInitialisedControl(resourceWithAcr);\n  const updatedControl = internal_addPolicyUrl(control, policyUrl);\n  const updatedResource = internal_setControl(resourceWithAcr, updatedControl);\n  return updatedResource;\n}\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Add a [[Policy]] to a Resource's Access Control Resource such that that\n * Policy applies to that Resource's children.\n *\n * @param resourceWithAcr The Resource to whose Access Control Resource the Policy should be added.\n * @param policyUrl URL of the Policy that should apply to the given Resource's children.\n * @returns A new Resource equal to the given Resource, but with the given Member Policy added to its Access Control Resource.\n * @since 1.6.0\n */\nexport function addMemberPolicyUrl<ResourceExt extends WithAccessibleAcr>(\n  resourceWithAcr: ResourceExt,\n  policyUrl: Url | UrlString,\n): ResourceExt {\n  const control = internal_getInitialisedControl(resourceWithAcr);\n  const updatedControl = internal_addMemberPolicyUrl(control, policyUrl);\n  const updatedResource = internal_setControl(resourceWithAcr, updatedControl);\n  return updatedResource;\n}\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Get the URLs of the Access Policies that apply to a Resource.\n *\n * @param resourceWithAcr The Resource with the Access Control Resource of which to get the URLs of the Policies that govern access to it.\n * @returns URLs of the Policies that govern access to the given Resource.\n * @since 1.6.0\n */\nexport function getPolicyUrlAll<ResourceExt extends WithAccessibleAcr>(\n  resourceWithAcr: ResourceExt,\n): UrlString[] {\n  const controls = internal_getControlAll(resourceWithAcr);\n  const policyUrlsByControl = controls.map((control) =>\n    internal_getPolicyUrlAll(control),\n  );\n  const uniquePolicyUrls = new Set<UrlString>();\n  policyUrlsByControl.forEach((policyUrls) => {\n    policyUrls.forEach((url) => uniquePolicyUrls.add(url));\n  });\n  return Array.from(uniquePolicyUrls);\n}\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Get the URLs of the Access Policies that apply to a Resource's children.\n *\n * @param resourceWithAcr The Resource with the Access Control Resource of which to get the URLs of the Policies that govern access to its children.\n * @returns URLs of the Policies that govern access to the given Resource's children.\n * @since 1.6.0\n */\nexport function getMemberPolicyUrlAll<ResourceExt extends WithAccessibleAcr>(\n  resourceWithAcr: ResourceExt,\n): UrlString[] {\n  const controls = internal_getControlAll(resourceWithAcr);\n  const memberPolicyUrlsByControl = controls.map((control) =>\n    internal_getMemberPolicyUrlAll(control),\n  );\n  const uniquePolicyUrls = new Set<UrlString>();\n  memberPolicyUrlsByControl.forEach((policyUrls) => {\n    policyUrls.forEach((url) => uniquePolicyUrls.add(url));\n  });\n  return Array.from(uniquePolicyUrls);\n}\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Stop the URL of a given [[Policy]] from applying to a Resource.\n *\n * @param resourceWithAcr The Resource, with its Access Control Resource, to which the given URL of a Policy should no longer apply.\n * @param policyUrl The URL of the Policy that should no longer apply.\n * @returns A Resource with a new Access Control Resource equal to the original ACR, but with the given Policy removed from it.\n * @since 1.6.0\n */\nexport function removePolicyUrl<ResourceExt extends WithAccessibleAcr>(\n  resourceWithAcr: ResourceExt,\n  policyUrl: Url | UrlString | ThingPersisted,\n): ResourceExt {\n  const controls = internal_getControlAll(resourceWithAcr);\n  const updatedControls = controls.map((control) =>\n    internal_removePolicyUrl(control, policyUrl),\n  );\n  const updatedResource = updatedControls.reduce(\n    internal_setControl,\n    resourceWithAcr,\n  );\n  return updatedResource;\n}\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Stop the URL of a given [[Policy]] from applying to the Resource's children.\n *\n * @param resourceWithAcr The Resource with the Access Control Resource to whose children the given URL of a Policy should no longer apply.\n * @param policyUrl The URL of the Policy that should no longer apply.\n * @returns A Resource with a new Access Control Resource equal to the original ACR, but with the given Member Policy removed from it.\n * @since 1.6.0\n */\nexport function removeMemberPolicyUrl<ResourceExt extends WithAccessibleAcr>(\n  resourceWithAcr: ResourceExt,\n  policyUrl: Url | UrlString | ThingPersisted,\n): ResourceExt {\n  const controls = internal_getControlAll(resourceWithAcr);\n  const updatedControls = controls.map((control) =>\n    internal_removeMemberPolicyUrl(control, policyUrl),\n  );\n  const updatedResource = updatedControls.reduce(\n    internal_setControl,\n    resourceWithAcr,\n  );\n  return updatedResource;\n}\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Stop all URL of Access Policies from applying to a Resource.\n *\n * @param resourceWithAcr The Resource, with its Access Control Resource, to which no more Policies should apply.\n * @returns A Resource with a new Access Control Resource equal to the original ACR, but without any Policy applying to the Resource.\n * @since 1.6.0\n */\nexport function removePolicyUrlAll<ResourceExt extends WithAccessibleAcr>(\n  resourceWithAcr: ResourceExt,\n): ResourceExt {\n  const controls = internal_getControlAll(resourceWithAcr);\n  const updatedControls = controls.map((control) =>\n    internal_removePolicyUrlAll(control),\n  );\n  const updatedResource = updatedControls.reduce(\n    internal_setControl,\n    resourceWithAcr,\n  );\n  return updatedResource;\n}\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Stop all URL of Access Policies from applying to the Resource's children.\n *\n * @param resourceWithAcr The Resource with the Access Control Resource that should no longer apply Policies to its children.\n * @returns A Resource with a new Access Control Resource equal to the original ACR, but without any Policy applying to the Resource's children.\n * @since 1.6.0\n */\nexport function removeMemberPolicyUrlAll<ResourceExt extends WithAccessibleAcr>(\n  resourceWithAcr: ResourceExt,\n): ResourceExt {\n  const controls = internal_getControlAll(resourceWithAcr);\n  const updatedControls = controls.map((control) =>\n    internal_removeMemberPolicyUrlAll(control),\n  );\n  const updatedResource = updatedControls.reduce(\n    internal_setControl,\n    resourceWithAcr,\n  );\n  return updatedResource;\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { WithAccessibleAcr } from \"../acp\";\nimport { getSourceUrl } from \"../..\";\nimport { internal_getAcr as getAccessControlResource } from \"../control.internal\";\n\n/** @hidden */\nexport type DefaultAccessControlName =\n  | typeof DEFAULT_ACCESS_CONTROL\n  | typeof DEFAULT_ACR_ACCESS_CONTROL\n  | typeof DEFAULT_MEMBER_ACCESS_CONTROL\n  | typeof DEFAULT_MEMBER_ACR_ACCESS_CONTROL;\n\n/** @hidden */\nexport const DEFAULT_ACCESS_CONTROL = \"defaultAccessControl\";\n\n/** @hidden */\nexport const DEFAULT_ACR_ACCESS_CONTROL = \"defaultAcrAccessControl\";\n\n/** @hidden */\nexport const DEFAULT_MEMBER_ACCESS_CONTROL = \"defaultMemberAccessControl\";\n\n/** @hidden */\nexport const DEFAULT_MEMBER_ACR_ACCESS_CONTROL =\n  \"defaultMemberAcrAccessControl\";\n\n/** @hidden */\nexport function getDefaultAccessControlUrl(\n  resource: WithAccessibleAcr,\n  name: DefaultAccessControlName,\n): string {\n  const acr = getAccessControlResource(resource);\n  const acrUrl = getSourceUrl(acr);\n  return acrUrl.concat(\"#\").concat(name);\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { ThingPersisted } from \"../..\";\nimport { createThing, getThing } from \"../..\";\nimport type { WithAccessibleAcr } from \"../acp\";\nimport { internal_getAcr as getAccessControlResource } from \"../control.internal\";\nimport type { DefaultAccessControlName } from \"./getDefaultAccessControlUrl\";\nimport { getDefaultAccessControlUrl } from \"./getDefaultAccessControlUrl\";\n\n/** @hidden */\nexport function getDefaultAccessControlThing(\n  resource: WithAccessibleAcr,\n  name: DefaultAccessControlName,\n): ThingPersisted {\n  const acr = getAccessControlResource(resource);\n  const defaultAccessControlUrl = getDefaultAccessControlUrl(resource, name);\n\n  const accessControlThing = getThing(acr, defaultAccessControlUrl);\n\n  if (\n    accessControlThing === null ||\n    typeof accessControlThing === \"undefined\"\n  ) {\n    return createThing({ url: defaultAccessControlUrl });\n  }\n\n  return accessControlThing;\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { AccessModes, ThingPersisted } from \"../../interfaces\";\nimport type { ACP } from \"../constants\";\nimport { ACL } from \"../constants\";\nimport { getIriAll } from \"../../thing/get\";\n\n/** @hidden */\nexport type ModeType = typeof ACP.allow | typeof ACP.deny;\n\n/** @hidden */\nexport function getModes<T extends ThingPersisted>(\n  policy: T,\n  type: ModeType,\n): AccessModes {\n  const modes = getIriAll(policy, type);\n\n  return {\n    read: modes.includes(ACL.Read),\n    append: modes.includes(ACL.Append),\n    write: modes.includes(ACL.Write),\n    controlRead: false,\n    controlWrite: false,\n  };\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport { internal_cloneResource } from \"../../resource/resource.internal\";\nimport type { WithAccessibleAcr } from \"../acp\";\nimport type { AccessControlResource } from \"../type/AccessControlResource\";\n\n/**\n * @hidden\n *\n * Internal function that attaches an ACR to a Resource. Prefer using this than\n * setting the internal values manually (easier to refactor when changing the internals).\n */\nexport function setAcr<T extends WithAccessibleAcr>(\n  resource: T,\n  acr: AccessControlResource,\n): T {\n  return Object.assign(internal_cloneResource(resource), {\n    internal_acp: {\n      acr,\n    },\n  });\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { AccessModes, ThingPersisted } from \"../../interfaces\";\nimport { removeAll } from \"../../thing/remove\";\nimport { addIri } from \"../../thing/add\";\nimport { ACL } from \"../constants\";\nimport type { ModeType } from \"./getModes\";\n\n/** @hidden */\nexport function setModes<T extends ThingPersisted>(\n  policy: T,\n  modes: AccessModes,\n  type: ModeType,\n): T {\n  let newPolicy = removeAll(policy, type);\n\n  if (modes.read || modes.controlRead) {\n    newPolicy = addIri(newPolicy, type, ACL.Read);\n  }\n\n  if (modes.append) {\n    newPolicy = addIri(newPolicy, type, ACL.Append);\n  }\n\n  if (modes.write || modes.controlWrite) {\n    newPolicy = addIri(newPolicy, type, ACL.Write);\n  }\n\n  return newPolicy;\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { SolidDataset, Thing } from \"../..\";\nimport {\n  addIri,\n  asIri,\n  buildThing,\n  createThing,\n  getIriAll,\n  getSourceIri,\n  getThing,\n  setThing,\n} from \"../..\";\nimport { rdf } from \"../../constants\";\nimport type { WithAccessibleAcr } from \"../acp\";\nimport { ACP, VC_ACCESS_GRANT } from \"../constants\";\nimport { internal_getAcr } from \"../control.internal\";\nimport { getAccessControlResourceThing } from \"../internal/getAccessControlResourceThing\";\nimport { getDefaultAccessControlThing } from \"../internal/getDefaultAccessControlThing\";\nimport { getModes } from \"../internal/getModes\";\nimport { setAcr } from \"../internal/setAcr\";\nimport { setModes } from \"../internal/setModes\";\nimport type { AccessModes } from \"../../interfaces\";\n\nexport const DEFAULT_VC_POLICY_NAME = \"defaultVcPolicy\";\nexport const DEFAULT_VC_MATCHER_NAME = \"defaultVcMatcher\";\n\nfunction createVcPolicy(\n  acr: SolidDataset,\n  policyIri: string,\n  matcherIri: string,\n  access: Partial<AccessModes>,\n): { policy: Thing; matcher: Thing } {\n  let vcPolicy = getThing(acr, policyIri);\n  if (vcPolicy === null) {\n    // If the policy does not exist, create it and link the default Access Control to it.\n    vcPolicy = buildThing({ url: policyIri })\n      .addIri(rdf.type, ACP.Policy)\n      .addIri(ACP.anyOf, matcherIri)\n      .build();\n  }\n  const vcMatcher: Thing =\n    getThing(acr, matcherIri) ??\n    buildThing({ url: matcherIri })\n      .addIri(rdf.type, ACP.Matcher)\n      .addIri(ACP.vc, VC_ACCESS_GRANT)\n      .build();\n\n  const currentModes = getModes(vcPolicy, ACP.allow);\n  // Only change the modes which are set in `access`, and preserve the others.\n  vcPolicy = setModes(vcPolicy, { ...currentModes, ...access }, ACP.allow);\n  return {\n    matcher: vcMatcher,\n    policy: vcPolicy,\n  };\n}\n\n/**\n * ```{note}\n * The ACP specification is a draft. As such, this function is experimental and\n * subject to change, even in a non-major release.\n * See also: https://solid.github.io/authorization-panel/acp-specification/\n * ```\n *\n * Set the maximum access modes that are allowed for a VC holder for a given resource.\n * If the resource owner issued an Access Grant for the resource, the agent that\n * has been granted access will have at most the permissions set by this function.\n * The Access Grant may be more restrictive.\n *\n * Note that additional access may have been set if the ACR has been manipulated\n * not using this library, which is currently out of scope. In this case, the access\n * set by this function may not apply.\n *\n * @param resourceWithAcr The resource for which the access modes are being set for VC holders.\n * @param access The access modes to set. Setting a mode to `true` will enable it, to `false`\n * will disable it, and to `undefined` will leave it unchanged compared to what was previously\n * set.\n * @param options An option object to customize the function behavior:\n *  - inherit: if set to `true`, the access set to the target resource cascades\n *    to its contained resources.\n * @returns A copy of the resource and its attached ACR, updated to the new access modes.\n * @since 1.17.0\n */\nexport function setVcAccess(\n  resourceWithAcr: WithAccessibleAcr,\n  access: Partial<AccessModes>,\n  options: {\n    inherit: boolean;\n  } = { inherit: false },\n): WithAccessibleAcr {\n  let acr = internal_getAcr(resourceWithAcr);\n  const defaultVcPolicyIri = `${getSourceIri(acr)}#${DEFAULT_VC_POLICY_NAME}`;\n  const defaultVcMatcherIri = `${getSourceIri(acr)}#${DEFAULT_VC_MATCHER_NAME}`;\n\n  const { policy, matcher } = createVcPolicy(\n    acr,\n    defaultVcPolicyIri,\n    defaultVcMatcherIri,\n    access,\n  );\n\n  let accessControl = getDefaultAccessControlThing(\n    resourceWithAcr,\n    \"defaultAccessControl\",\n  );\n  if (!getIriAll(accessControl, ACP.apply).includes(asIri(policy))) {\n    // Case when the ACR Thing existed, but did not include a link to the default Access Control.\n    accessControl = addIri(accessControl, ACP.apply, policy);\n  }\n\n  let memberAccessControl = getDefaultAccessControlThing(\n    resourceWithAcr,\n    \"defaultMemberAccessControl\",\n  );\n\n  let acrThing =\n    getAccessControlResourceThing(resourceWithAcr) ??\n    createThing({ url: getSourceIri(acr) });\n\n  if (!getIriAll(acrThing, ACP.accessControl).includes(asIri(accessControl))) {\n    // Case when the ACR Thing existed, but did not include a link to the default Access Control.\n    acrThing = addIri(acrThing, ACP.accessControl, accessControl);\n  }\n\n  // Write the changed access control, policy and matchers in the ACR\n  acr = [acrThing, accessControl, policy, matcher].reduce(setThing, acr);\n\n  if (options.inherit) {\n    // Add triples to the member access control and link it to the ACR only\n    // if the VC access is recursive if they don't exist already.\n    if (!getIriAll(memberAccessControl, ACP.apply).includes(asIri(policy))) {\n      memberAccessControl = addIri(memberAccessControl, ACP.apply, policy);\n    }\n    if (\n      !getIriAll(acrThing, ACP.memberAccessControl).includes(\n        asIri(memberAccessControl),\n      )\n    ) {\n      acrThing = addIri(acrThing, ACP.memberAccessControl, memberAccessControl);\n    }\n\n    acr = [acrThing, memberAccessControl].reduce(setThing, acr);\n  }\n\n  return setAcr(resourceWithAcr, acr);\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { Thing, UrlString } from \"../..\";\nimport { getSourceIri } from \"../../resource/resource\";\nimport { getIriAll } from \"../../thing/get\";\nimport { asIri, getThing } from \"../../thing/thing\";\nimport type { WithAccessibleAcr } from \"../acp\";\nimport { ACP } from \"../constants\";\nimport { internal_getAcr } from \"../control.internal\";\nimport { getAccessControlResourceThing } from \"../internal/getAccessControlResourceThing\";\nimport { getDefaultAccessControlThing } from \"../internal/getDefaultAccessControlThing\";\nimport { getModes } from \"../internal/getModes\";\nimport type { AccessModes } from \"../../interfaces\";\nimport { DEFAULT_VC_MATCHER_NAME, DEFAULT_VC_POLICY_NAME } from \"./setVcAccess\";\n\nconst DEFAULT_NO_ACCESS: AccessModes = {\n  read: false,\n  append: false,\n  write: false,\n  controlRead: false,\n  controlWrite: false,\n};\n\nconst linkExists = (\n  subject: Thing,\n  predicate: UrlString,\n  object: Thing,\n): boolean => getIriAll(subject, predicate).includes(asIri(object));\n\n// TODO: It should be possible to write a `chainExists` function, taking in a chain\n// of Thing, predicate, Thing, predicate... and checks whether such chain exists\n// in a given dataset. It would make the following function much easier to read,\n// instead of checking at each link that it isn't null and it is connected to the\n// next link.\n\n/**\n * ```{note}\n * The ACP specification is a draft. As such, this function is experimental and\n * subject to change, even in a non-major release.\n * See also: https://solid.github.io/authorization-panel/acp-specification/\n * ```\n *\n * Get the maximum access modes that are allowed for a VC holder for a given resource.\n * If the resource owner issued an Access Grant for the resource, the agent that\n * has been granted access will have at most the permissions returned by this function.\n * The Access Grant may be more restrictive.\n *\n * Note that only the modes set using [[setVcAccess]] will be returned by this function.\n * Additional access may have been set if the ACR has been manipulated not using this\n * library, which is currently out of scope.\n *\n * @param resourceWithAcr The resource for which the VC access modes are looked up.\n * @returns The access modes available to a VC holder.\n * @since 1.17.0\n */\nexport function getVcAccess(resourceWithAcr: WithAccessibleAcr): AccessModes {\n  const acr = internal_getAcr(resourceWithAcr);\n\n  const accessControl = getDefaultAccessControlThing(\n    resourceWithAcr,\n    \"defaultAccessControl\",\n  );\n\n  const acrThing = getAccessControlResourceThing(resourceWithAcr);\n\n  if (\n    acrThing === null ||\n    !linkExists(acrThing, ACP.accessControl, accessControl)\n  ) {\n    return DEFAULT_NO_ACCESS;\n  }\n\n  const defaultVcPolicyIri = `${getSourceIri(acr)}#${DEFAULT_VC_POLICY_NAME}`;\n  const vcPolicy = getThing(acr, defaultVcPolicyIri);\n  if (vcPolicy === null || !linkExists(accessControl, ACP.apply, vcPolicy)) {\n    return DEFAULT_NO_ACCESS;\n  }\n\n  const defaultVcMatcherIri = `${getSourceIri(acr)}#${DEFAULT_VC_MATCHER_NAME}`;\n  const vcMatcher = getThing(acr, defaultVcMatcherIri);\n  if (vcMatcher === null || !linkExists(vcPolicy, ACP.anyOf, vcMatcher)) {\n    return DEFAULT_NO_ACCESS;\n  }\n\n  return getModes(vcPolicy, ACP.allow);\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport { acp } from \"../constants\";\nimport type {\n  SolidDataset,\n  File,\n  Url,\n  UrlString,\n  WithServerResourceInfo,\n  WithResourceInfo,\n} from \"../interfaces\";\nimport { hasServerResourceInfo } from \"../interfaces\";\nimport { internal_toIriString } from \"../interfaces.internal\";\nimport { getFile } from \"../resource/file\";\nimport { getResourceInfo, getSourceUrl } from \"../resource/resource\";\nimport type { WithAcl } from \"../acl/acl\";\nimport { hasAccessibleAcl } from \"../acl/acl\";\nimport { internal_fetchAcl, internal_setAcl } from \"../acl/acl.internal\";\nimport { getSolidDataset, saveSolidDatasetAt } from \"../resource/solidDataset\";\nimport type { AccessControlResource } from \"./control\";\nimport {\n  getAcrPolicyUrlAll,\n  getMemberAcrPolicyUrlAll,\n  getMemberPolicyUrlAll,\n  getPolicyUrlAll,\n  hasLinkedAcr,\n} from \"./control\";\nimport { internal_getAcr, internal_setAcr } from \"./control.internal\";\nimport { normalizeServerSideIri } from \"../resource/iri.internal\";\nimport { isAcr } from \"./acp.internal\";\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Fetch a SolidDataset and its associated Access Control Resource (if available to the current user).\n *\n * @param url URL of the SolidDataset to fetch.\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\n * @returns A SolidDataset and the ACR that applies to it, if available to the authenticated user.\n * @since 1.6.0\n */\nexport async function getSolidDatasetWithAcr(\n  url: Url | UrlString,\n  options?: { fetch?: typeof fetch },\n): Promise<SolidDataset & WithServerResourceInfo & WithAcp> {\n  const urlString = internal_toIriString(url);\n  const solidDataset = await getSolidDataset(urlString, options);\n  const acp = await fetchAcr(solidDataset, options);\n  return { ...solidDataset, ...acp };\n}\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Fetch a file and its associated Access Control Resource (if available to the current user).\n *\n * @param url URL of the file to fetch.\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\n * @returns A file and the ACR that applies to it, if available to the authenticated user.\n * @since 1.6.0\n */\nexport async function getFileWithAcr(\n  url: Url | UrlString,\n  options?: { fetch: typeof fetch },\n): Promise<File & WithAcp> {\n  const urlString = internal_toIriString(url);\n\n  const file = await getFile(urlString, options);\n  const acp = await fetchAcr(file, options);\n  return Object.assign(file, acp);\n}\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Retrieve information about a Resource and its associated Access Control Resource (if available to\n * the current user), without fetching the Resource itself.\n *\n * @param url URL of the Resource about which to fetch its information.\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\n * @returns Metadata describing a Resource, and the ACR that applies to it, if available to the authenticated user.\n * @since 1.6.0\n */\nexport async function getResourceInfoWithAcr(\n  url: Url | UrlString,\n  options?: { fetch?: typeof fetch },\n): Promise<WithServerResourceInfo & WithAcp> {\n  const urlString = internal_toIriString(url);\n  const resourceInfo = await getResourceInfo(urlString, options);\n  const acp = await fetchAcr(resourceInfo, options);\n  return { ...resourceInfo, ...acp };\n}\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Fetch a SolidDataset, and:\n * - if the Resource is governed by an ACR: its associated Access Control Resource (if available to\n *                                          the current user), and all the Access Control Policies\n *                                          referred to therein, if available to the current user.\n * - if the Resource is governed by an ACL: its associated Resource ACL (if available to the current\n *                                          user), or its Fallback ACL if it does not exist.\n *\n * @param url URL of the SolidDataset to fetch.\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\n * @returns A SolidDataset and either the ACL access data or the ACR access data, if available to the current user.\n * @since 1.6.0\n */\nexport async function getSolidDatasetWithAccessDatasets(\n  url: Url | UrlString,\n  options?: { fetch?: typeof fetch },\n): Promise<SolidDataset & (WithAcp | WithAcl)> {\n  const urlString = internal_toIriString(url);\n  const solidDataset = await getSolidDataset(urlString, options);\n  if (hasAccessibleAcl(solidDataset)) {\n    const acl = await internal_fetchAcl(solidDataset, options);\n    return internal_setAcl(solidDataset, acl);\n  }\n  const acr = await fetchAcr(solidDataset, options);\n  return { ...solidDataset, ...acr };\n}\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Fetch a File, and:\n * - if the Resource is governed by an ACR: its associated Access Control Resource (if available to\n *                                          the current user), and all the Access Control Policies\n *                                          referred to therein, if available to the current user.\n * - if the Resource is governed by an ACL: its associated Resource ACL (if available to the current\n *                                          user), or its Fallback ACL if it does not exist.\n *\n * @param url URL of the File to fetch.\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\n * @returns A File and either the ACL access data or the ACR access data, if available to the current user.\n * @since 1.6.0\n */\nexport async function getFileWithAccessDatasets(\n  url: Url | UrlString,\n  options?: { fetch?: typeof fetch },\n): Promise<File & (WithAcp | WithAcl)> {\n  const urlString = internal_toIriString(url);\n  const file = await getFile(urlString, options);\n  if (hasAccessibleAcl(file)) {\n    const acl = await internal_fetchAcl(file, options);\n    return internal_setAcl(file, acl);\n  }\n  const acr = await fetchAcr(file, options);\n  return Object.assign(file, acr);\n}\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Fetch information about a Resource, and:\n * - if the Resource is governed by an ACR: its associated Access Control Resource (if available to\n *                                          the current user), and all the Access Control Policies\n *                                          referred to therein, if available to the current user.\n * - if the Resource is governed by an ACL: its associated Resource ACL (if available to the current\n *                                          user), or its Fallback ACL if it does not exist.\n *\n * @param url URL of the Resource information about which to fetch.\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\n * @returns Information about a Resource and either the ACL access data or the ACR access data, if available to the current user.\n * @since 1.6.0\n */\nexport async function getResourceInfoWithAccessDatasets(\n  url: Url | UrlString,\n  options?: { fetch?: typeof fetch },\n): Promise<WithServerResourceInfo & (WithAcp | WithAcl)> {\n  const urlString = internal_toIriString(url);\n  const resourceInfo = await getResourceInfo(urlString, options);\n  if (hasAccessibleAcl(resourceInfo)) {\n    const acl = await internal_fetchAcl(resourceInfo, options);\n    return internal_setAcl(resourceInfo, acl);\n  }\n  const acr = await fetchAcr(resourceInfo, options);\n  return { ...resourceInfo, ...acr };\n}\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Save a Resource's Access Control Resource.\n *\n * @param resource Resource with an Access Control Resource that should be saved.\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\n * @since 1.6.0\n */\nexport async function saveAcrFor<ResourceExt extends WithAccessibleAcr>(\n  resource: ResourceExt,\n  options?: { fetch?: typeof fetch },\n): Promise<ResourceExt> {\n  const acr = internal_getAcr(resource);\n  const savedAcr = await saveSolidDatasetAt(getSourceUrl(acr), acr, options);\n  return internal_setAcr(resource, savedAcr);\n}\n\n/**\n * The Access Control Resource of Resources that conform to this type were attempted to be fetched together with those Resources. This might not have been successful; see [[hasAccessibleAcr]] to check.\n * @since 1.6.0\n */\nexport type WithAcp = {\n  internal_acp: {\n    acr: AccessControlResource | null;\n  };\n};\n/**\n * Resources that conform to this type have an Access Control Resource attached. See [[hasAccessibleAcr]].\n * @since 1.6.0\n */\nexport type WithAccessibleAcr = WithAcp & {\n  internal_acp: {\n    acr: Exclude<WithAcp[\"internal_acp\"][\"acr\"], null>;\n  };\n};\n\n/**\n * @param resource Resource of which to check whether it has an Access Control Resource attached.\n * @returns Boolean representing whether the given Resource has an Access Control Resource attached for use in e.g. [[getPolicyUrlAll]].\n * @since 1.6.0\n */\nexport function hasAccessibleAcr(\n  resource: WithAcp,\n): resource is WithAccessibleAcr {\n  return (\n    typeof resource.internal_acp === \"object\" &&\n    resource.internal_acp !== null &&\n    typeof resource.internal_acp.acr === \"object\" &&\n    resource.internal_acp.acr !== null\n  );\n}\n\nasync function fetchAcr(\n  resource: WithServerResourceInfo,\n  options?: { fetch?: typeof fetch },\n): Promise<WithAcp> {\n  let acrUrl: UrlString | undefined;\n  if (hasLinkedAcr(resource)) {\n    // Whereas a Resource can generally have multiple linked Resources for the same relation,\n    // it can only have one Access Control Resource for that ACR to be valid.\n    // Hence the accessing of [0] directly:\n    const { linkedResources } = resource.internal_resourceInfo;\n    [acrUrl] = linkedResources[acp.accessControl];\n  } else if (hasAccessibleAcl(resource)) {\n    // The ACP proposal will be updated to expose the Access Control Resource\n    // via a Link header with rel=\"acl\", just like WAC. That means that if\n    // an ACL is advertised, we can still fetch its metadata — if that indicates\n    // that it's actually an ACP Access Control Resource, then we can fetch that\n    // instead.\n    let aclResourceInfo;\n    try {\n      aclResourceInfo = await getResourceInfo(\n        resource.internal_resourceInfo.aclUrl,\n        options,\n      );\n    } catch (e) {\n      // Since both ACL and ACR will be discovered through the same header, we\n      // need to ignore errors here so that in the case of ACL not found, the\n      // code can resume and a new ACL can be initialized. The case for ACR is\n      // covered in the code below, since in this case the ACR is always present\n    }\n\n    if (aclResourceInfo && isAcr(aclResourceInfo)) {\n      acrUrl = getSourceUrl(aclResourceInfo);\n    }\n  }\n  // If the Resource doesn't advertise an ACR via the old Link header,\n  // nor via a rel=\"acl\" header, then return, indicating that no ACR could be\n  // fetched:\n  if (typeof acrUrl !== \"string\") {\n    return {\n      internal_acp: {\n        acr: null,\n      },\n    };\n  }\n  let acr: SolidDataset & WithResourceInfo;\n  try {\n    acr = await getSolidDataset(acrUrl, options);\n  } catch (e: unknown) {\n    return {\n      internal_acp: {\n        acr: null,\n      },\n    };\n  }\n\n  const acrDataset: AccessControlResource = {\n    ...acr,\n    accessTo: getSourceUrl(resource),\n  };\n  const acpInfo: WithAccessibleAcr = {\n    internal_acp: {\n      acr: acrDataset,\n    },\n  };\n  return acpInfo;\n}\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * To make it easy to fetch all the relevant Access Policy Resources,\n * this function returns all referenced Access Policy Resources referenced in an\n * Access Control Resource.\n * In other words, if Access Controls refer to different Policies in the same\n * Access Policy Resource, this function will only return that Access Policy\n * Resource's URL once.\n *\n * @param withAcr A Resource with an Access Control Resource attached.\n * @returns List of all unique Access Policy Resources that are referenced in the given Access Control Resource.\n * @since 1.6.0\n */\nexport function getReferencedPolicyUrlAll(\n  withAcr: WithAccessibleAcr,\n): UrlString[] {\n  const policyUrls: UrlString[] = getPolicyUrlAll(withAcr)\n    .map(normalizeServerSideIri)\n    .concat(getMemberPolicyUrlAll(withAcr).map(normalizeServerSideIri))\n    .concat(getAcrPolicyUrlAll(withAcr).map(normalizeServerSideIri))\n    .concat(getMemberAcrPolicyUrlAll(withAcr).map(normalizeServerSideIri));\n\n  const uniqueUrls = Array.from(new Set(policyUrls));\n  return uniqueUrls;\n}\n\n/**\n * Verify whether the access to the given resource is controlled using the ACP\n * system.\n * @param resource The target resource\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\n * @returns True if the access to the resource is controlled using ACP, false otherwise.\n * @since 1.14.0.\n */\nexport async function isAcpControlled(\n  resource: Url | UrlString,\n  options?: { fetch?: typeof fetch },\n): Promise<boolean> {\n  const urlString = internal_toIriString(resource);\n  const resourceInfo = await getResourceInfo(urlString, options);\n  return hasAccessibleAcr(await fetchAcr(resourceInfo, options));\n}\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Given a Resource, find out the URL of its governing Access Control Resource.\n *\n * @param resource Resource which should be governed by Access Policies.\n * @returns The URL of the Access Control Resource, or undefined if not ACR is found.\n * @since 1.15.0\n */\nexport function getLinkedAcrUrl<Resource extends WithServerResourceInfo>(\n  resource: Resource,\n): UrlString | undefined {\n  if (!hasServerResourceInfo(resource)) {\n    return undefined;\n  }\n  // Two rels types are acceptable to indicate a link to an ACR.\n  const acrLinks = [acp.accessControl, \"acl\"].map((rel) => {\n    if (\n      Array.isArray(resource.internal_resourceInfo.linkedResources[rel]) &&\n      resource.internal_resourceInfo.linkedResources[rel].length === 1\n    ) {\n      return resource.internal_resourceInfo.linkedResources[rel][0];\n    }\n\n    return undefined;\n  });\n  return acrLinks.find((x) => x !== undefined);\n}\n\n// This file currently acts as an index for the `acp` module.\nexport { getVcAccess } from \"./util/getVcAccess\";\nexport { setVcAccess } from \"./util/setVcAccess\";\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport { acp, rdf } from \"../constants\";\nimport type { ThingPersisted, Url, UrlString } from \"../interfaces\";\nimport { getSourceUrl } from \"../resource/resource\";\nimport { internal_cloneResource } from \"../resource/resource.internal\";\nimport { addIri } from \"../thing/add\";\nimport { getIriAll } from \"../thing/get\";\nimport { removeAll, removeIri } from \"../thing/remove\";\nimport { setIri } from \"../thing/set\";\nimport { createThing, getThing, getThingAll, setThing } from \"../thing/thing\";\nimport type { WithAccessibleAcr, WithAcp } from \"./acp\";\nimport { hasAccessibleAcr } from \"./acp\";\nimport type { AccessControlResource, Control } from \"./control\";\n\n/** @hidden */\nexport function internal_getAcr(\n  resource: WithAccessibleAcr,\n): AccessControlResource {\n  if (!hasAccessibleAcr(resource)) {\n    throw new Error(\n      `An Access Control Resource for [${getSourceUrl(\n        resource,\n      )}] is not available. This could be because the current user is not allowed to see it, or because their Pod Server does not support Access Control Resources.`,\n    );\n  }\n  return resource.internal_acp.acr;\n}\n\n/** @hidden */\nexport function internal_setAcr<ResourceExt extends WithAcp>(\n  resource: ResourceExt,\n  acr: AccessControlResource,\n): ResourceExt & WithAccessibleAcr {\n  return Object.assign(internal_cloneResource(resource), {\n    internal_acp: {\n      ...resource.internal_acp,\n      acr,\n    },\n  });\n}\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Initialise a new [[Control]].\n * @hidden Developers don't need to care about initialising Controls - they can just add Policies directly.\n * @deprecated\n */\nexport function internal_createControl(\n  options?: Parameters<typeof createThing>[0],\n): Control {\n  let control = createThing(options);\n  control = setIri(control, rdf.type, acp.AccessControl);\n  return control;\n}\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Find an [[Control]] with a given URL in a given Resource with an Access Control Resource.\n *\n * @returns The requested Access Control, or `null` if it could not be found.\n * @hidden Developers don't need to care about initialising Controls - they can just add Policies directly.\n * @deprecated\n */\nexport function internal_getControl(\n  withAccessControlResource: WithAccessibleAcr,\n  url: Parameters<typeof getThing>[1],\n  options?: Parameters<typeof getThing>[2],\n): Control | null {\n  const acr = internal_getAcr(withAccessControlResource);\n  const foundThing = getThing(acr, url, options);\n  if (\n    foundThing === null ||\n    !getIriAll(foundThing, rdf.type).includes(acp.AccessControl)\n  ) {\n    return null;\n  }\n\n  return foundThing;\n}\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Get all [[Control]]s in the Access Control Resource of a given Resource.\n * @hidden Developers don't need to care about initialising Controls - they can just add Policies directly.\n * @deprecated\n */\nexport function internal_getControlAll(\n  withAccessControlResource: WithAccessibleAcr,\n  options?: Parameters<typeof getThingAll>[1],\n): Control[] {\n  const acr = internal_getAcr(withAccessControlResource);\n  const foundThings = getThingAll(acr, options);\n\n  const explicitAccessControl = foundThings.filter((foundThing) =>\n    getIriAll(foundThing, rdf.type).includes(acp.AccessControl),\n  );\n\n  const implicitAccessControl = foundThings\n    .filter((foundThing) => getIriAll(foundThing, acp.accessControl).length > 0)\n    .map((thingWithAccessControl) => {\n      // The initial filter ensures that at least one AccessControl will be found.\n      const controlIri = getIriAll(\n        thingWithAccessControl,\n        acp.accessControl,\n      )[0];\n      // The found control is only an object in the current dataset, so we create the\n      // associated thing in order to possibly make it a subject.\n      return createThing({ url: controlIri });\n    });\n\n  return explicitAccessControl.concat(implicitAccessControl);\n}\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Insert an [[Control]] into the [[AccessControlResource]] of a Resource, replacing previous\n * instances of that Access Control.\n *\n * @param withAccessControlResource A Resource with the Access Control Resource into which to insert an Access Control.\n * @param control The Control to insert into the Access Control Resource.\n * @returns The given Resource with a new Access Control Resource equal to the original Access Control Resource, but with the given Access Control.\n * @hidden Developers don't need to care about initialising Controls - they can just add Policies directly.\n * @deprecated\n */\nexport function internal_setControl<ResourceExt extends WithAccessibleAcr>(\n  withAccessControlResource: ResourceExt,\n  control: Control,\n): ResourceExt {\n  const acr = internal_getAcr(withAccessControlResource);\n  const updatedAcr = setThing(acr, control);\n  const updatedResource = internal_setAcr(\n    withAccessControlResource,\n    updatedAcr,\n  );\n  return updatedResource;\n}\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Add a [[Policy]] to an [[Control]] such that that Policy applies to the Resource to which\n * the [[Control]] is linked.\n *\n * @param accessControl The [[Control]] to which the Policy should be added.\n * @param policyUrl URL of the Policy that should apply to the Resource to which the [[Control]] is linked.\n * @returns A new [[Control]] equal to the given [[Control]], but with the given policy added to it.\n * @hidden Developers don't need to care about working with Controls - they can just add Policies to the Resource directly.\n * @deprecated\n */\nexport function internal_addPolicyUrl(\n  accessControl: Control,\n  policyUrl: Url | UrlString | ThingPersisted,\n): Control {\n  return addIri(accessControl, acp.apply, policyUrl);\n}\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Get all Policies that apply to the Resource to which the given [[Control]] is linked, and\n * which can be removed by anyone with Write access to the Access Control Resource that contains the\n * [[Control]].\n *\n * @param accessControl The [[Control]] of which to get the Policies.\n * @returns The Policies that are listed in this [[Control]] as applying to the Resource it is linked to, and as removable by anyone with Write access to the Access Control Resource.\n * @hidden Developers don't need to care about working with Controls - they can just add Policies to the Resource directly.\n * @deprecated\n */\nexport function internal_getPolicyUrlAll(accessControl: Control): UrlString[] {\n  return getIriAll(accessControl, acp.apply);\n}\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Remove a given Policy that applies to the Resource to which the given [[Control]] is linked,\n * and which can be removed by anyone with Write access to the Access Control Resource that contains\n * the Access Control.\n *\n * @param accessControl The [[Control]] of which to remove the Policies.\n * @param policyUrl URL of the Policy that should no longer apply to the Resource to which the [[Control]] is linked.\n * @returns A new [[Control]] equal to the given [[Control]], but with the given Policy removed from it.\n * @hidden Developers don't need to care about working with Controls - they can just add Policies to the Resource directly.\n * @deprecated\n */\nexport function internal_removePolicyUrl(\n  accessControl: Control,\n  policyUrl: Url | UrlString | ThingPersisted,\n): Control {\n  return removeIri(accessControl, acp.apply, policyUrl);\n}\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Remove all Policies that apply to the Resource to which the given [[Control]] is linked, and\n * which can be removed by anyone with Write access to the Access Control Resource that contains the\n * [[Control]].\n *\n * @param accessControl The [[Control]] of which to remove the Policies.\n * @returns A new [[Control]] equal to the given [[Control]], but with all Policies removed from it.\n * @hidden Developers don't need to care about working with Controls - they can just add Policies to the Resource directly.\n * @deprecated\n */\nexport function internal_removePolicyUrlAll(accessControl: Control): Control {\n  return removeAll(accessControl, acp.apply);\n}\n\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Add a [[Policy]] to an [[Control]] such that that Policy applies to the children of the\n * Resource to which the [[Control]] is linked.\n *\n * @param accessControl The [[Control]] to which the Policy should be added.\n * @param policyUrl URL of the Policy that should apply to the children of the Resource to which the [[Control]] is linked.\n * @returns A new [[Control]] equal to the given [[Control]], but with the given policy added to it as a Member Policy.\n * @hidden Developers don't need to care about working with Controls - they can just add Policies to the Resource directly.\n * @deprecated\n */\nexport function internal_addMemberPolicyUrl(\n  accessControl: Control,\n  policyUrl: Url | UrlString | ThingPersisted,\n): Control {\n  return addIri(accessControl, acp.applyMembers, policyUrl);\n}\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Get all Policies that apply to the children of the Resource to which the given [[Control]] is\n * linked, and which can be removed by anyone with Write access to the Access Control Resource that\n * contains the [[Control]].\n *\n * @param accessControl The [[Control]] of which to get the Policies.\n * @returns The Policies that are listed in this [[Control]] as applying to the children of the Resource it is linked to, and as removable by anyone with Write access to the Access Control Resource.\n * @hidden Developers don't need to care about working with Controls - they can just add Policies to the Resource directly.\n * @deprecated\n */\nexport function internal_getMemberPolicyUrlAll(\n  accessControl: Control,\n): UrlString[] {\n  return getIriAll(accessControl, acp.applyMembers);\n}\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Remove a given Policy that applies to the children of the Resource to which the given Access\n * Control is linked, and which can be removed by anyone with Write access to the Access Control\n * Resource that contains the Access Control.\n *\n * @param accessControl The [[Control]] of which to remove the Member Policy.\n * @param policyUrl URL of the Member Policy that should no longer apply to the Resource to which the [[Control]] is linked.\n * @returns A new [[Control]] equal to the given [[Control]], but with the given Member Policy removed from it.\n * @hidden Developers don't need to care about working with Controls - they can just add Policies to the Resource directly.\n * @deprecated\n */\nexport function internal_removeMemberPolicyUrl(\n  accessControl: Control,\n  policyUrl: Url | UrlString | ThingPersisted,\n): Control {\n  return removeIri(accessControl, acp.applyMembers, policyUrl);\n}\n/**\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Remove all Policies that apply to the children of the Resource to which the given Access Control\n * is linked, and which can be removed by anyone with Write access to the Access Control Resource\n * that contains the Access Control.\n *\n * @param accessControl The [[Control]] of which to remove the Member Policies.\n * @returns A new [[Control]] equal to the given [[Control]], but with all Member Policies removed from it.\n * @hidden Developers don't need to care about working with Controls - they can just add Policies to the Resource directly.\n * @deprecated\n */\nexport function internal_removeMemberPolicyUrlAll(\n  accessControl: Control,\n): Control {\n  return removeAll(accessControl, acp.applyMembers);\n}\n\nexport function internal_getInitialisedControl(\n  resourceWithAcr: WithAccessibleAcr,\n): Control {\n  const allControls = internal_getControlAll(resourceWithAcr);\n  return allControls.length === 0 ? internal_createControl() : allControls[0];\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { ThingPersisted } from \"../../interfaces\";\nimport type { WithAccessibleAcr } from \"../acp\";\nimport { getSourceUrl } from \"../../resource/resource\";\nimport { getThing } from \"../../thing/thing\";\nimport { internal_getAcr as getAccessControlResource } from \"../control.internal\";\n\n/** @hidden */\nexport function getAccessControlResourceThing(\n  resource: WithAccessibleAcr,\n): ThingPersisted | null {\n  const acr = getAccessControlResource(resource);\n  const acrUrl = getSourceUrl(acr);\n\n  return getThing(acr, acrUrl);\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport { ACP } from \"../constants\";\nimport type { UrlString } from \"../../interfaces\";\nimport { getIriAll } from \"../../thing/get\";\nimport type { WithAccessibleAcr } from \"../acp\";\nimport { getAccessControlResourceThing } from \"../internal/getAccessControlResourceThing\";\n\n/**\n * ```{note}\n * The ACP specification is a draft. As such, this function is experimental and\n * subject to change, even in a non-major release.\n * See also: https://solid.github.io/authorization-panel/acp-specification/\n * ```\n *\n * Get the URL of all access controls linked to the given resource's ACR.\n *\n * @param resourceWithAcr The resource for which to retrieve URLs of access\n * controls applying to it.\n * @returns Access Control URL array\n * @since 1.6.0\n */\nexport function getAccessControlUrlAll(\n  resourceWithAcr: WithAccessibleAcr,\n): UrlString[] {\n  const acrThing = getAccessControlResourceThing(resourceWithAcr);\n\n  if (acrThing === null) {\n    return [];\n  }\n\n  return getIriAll(acrThing, ACP.accessControl);\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { UrlString } from \"../../interfaces\";\nimport type { WithAccessibleAcr } from \"../acp\";\nimport type { ACP } from \"../constants\";\nimport { getIriAll } from \"../../thing/get\";\nimport { getThing } from \"../../thing/thing\";\nimport { internal_getAcr as getAccessControlResource } from \"../control.internal\";\n\n/** @hidden */\ntype PolicyType = typeof ACP.apply | typeof ACP.access;\n\n/** @hidden */\nexport function getPolicyUrls(\n  resource: WithAccessibleAcr,\n  accessControlUrls: UrlString[],\n  type: PolicyType,\n): string[] {\n  const acr = getAccessControlResource(resource);\n\n  return Array.from(\n    new Set(\n      accessControlUrls\n        .map((accessControlUrl) => {\n          const accessControlThing = getThing(acr, accessControlUrl);\n          // istanbul ignore next\n          if (accessControlThing !== null) {\n            return getIriAll(accessControlThing, type);\n          }\n          // istanbul ignore next\n          return [];\n        })\n        .reduce(\n          (previousValue, currentValue) => previousValue.concat(currentValue),\n          [],\n        ),\n    ),\n  );\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { UrlString } from \"../../interfaces\";\nimport type { WithAccessibleAcr } from \"../acp\";\nimport { ACP } from \"../constants\";\nimport { getAccessControlUrlAll } from \"../accessControl/getAccessControlUrlAll\";\nimport { getPolicyUrls } from \"../internal/getPolicyUrls\";\n\n/**\n * ```{note}\n * The ACP specification is a draft. As such, this function is experimental and\n * subject to change, even in a non-major release.\n * See also: https://solid.github.io/authorization-panel/acp-specification/\n * ```\n *\n * Get the URLs of policies applying to the given resource.\n *\n * @param resourceWithAcr The resource for which to retrieve URLs of policies\n * applying to it.\n * @returns Policy URL array.\n * @since 1.16.1\n */\nexport function getPolicyUrlAll(\n  resourceWithAcr: WithAccessibleAcr,\n): UrlString[] {\n  return getPolicyUrls(\n    resourceWithAcr,\n    getAccessControlUrlAll(resourceWithAcr),\n    ACP.apply,\n  );\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { UrlString } from \"../../interfaces\";\nimport type { WithAccessibleAcr } from \"../acp\";\nimport { ACP } from \"../constants\";\nimport { getAccessControlUrlAll } from \"../accessControl/getAccessControlUrlAll\";\nimport { getPolicyUrls } from \"../internal/getPolicyUrls\";\n\n/**\n * ```{note}\n * The ACP specification is a draft. As such, this function is experimental and\n * subject to change, even in a non-major release.\n * See also: https://solid.github.io/authorization-panel/acp-specification/\n * ```\n *\n * Get the URLs of policies applying to the ACR of the given resource.\n *\n * @param resourceWithAcr The resource for which to retrieve URLs of policies\n * applying to its access control resource.\n * @returns Policy URL array.\n * @since 1.16.1\n */\nexport function getAcrPolicyUrlAll<T extends WithAccessibleAcr>(\n  resourceWithAcr: T,\n): UrlString[] {\n  return getPolicyUrls(\n    resourceWithAcr,\n    getAccessControlUrlAll(resourceWithAcr),\n    ACP.access,\n  );\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { AccessModes, ThingPersisted } from \"../../interfaces\";\nimport { ACP } from \"../constants\";\nimport { getModes } from \"../internal/getModes\";\n\n/**\n * ```{note}\n * The ACP specification is a draft. As such, this function is experimental and\n * subject to change, even in a non-major release.\n * See also: https://solid.github.io/authorization-panel/acp-specification/\n * ```\n *\n * Policies allow or deny access modes over resources and their associated\n * access control resource.\n *\n * @param policy The Policy Thing which allows retrieved access modes.\n * @returns Policy URL array.\n * @since 1.16.1\n */\nexport function getAllowModes<T extends ThingPersisted>(\n  policy: T,\n): AccessModes {\n  return getModes(policy, ACP.allow);\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { AccessModes, ThingPersisted } from \"../../interfaces\";\nimport { ACP } from \"../constants\";\nimport { getModes } from \"../internal/getModes\";\n\n/**\n * ```{note}\n * The ACP specification is a draft. As such, this function is experimental and\n * subject to change, even in a non-major release.\n * See also: https://solid.github.io/authorization-panel/acp-specification/\n * ```\n *\n * Policies allow or deny access modes over resources and their associated\n * access control resource.\n *\n * @param policy The Policy Thing which denies retrieved access modes.\n * @returns Policy URL array.\n * @since 1.16.1\n */\nexport function getDenyModes<T extends ThingPersisted>(policy: T): AccessModes {\n  return getModes(policy, ACP.deny);\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { AccessModes, WebId } from \"../../interfaces\";\nimport type { WithAccessibleAcr } from \"../acp\";\nimport { getPolicyUrlAll } from \"../policy/getPolicyUrlAll\";\nimport type { ThingPersisted } from \"../..\";\nimport { getThing, getUrlAll } from \"../..\";\nimport { internal_getAcr } from \"../control.internal\";\nimport { getAcrPolicyUrlAll } from \"../policy/getAcrPolicyUrlAll\";\nimport { ACP } from \"../constants\";\nimport { getAllowModes } from \"../policy/getAllowModes\";\nimport { getDenyModes } from \"../policy/getDenyModes\";\n\n/** @hidden */\nfunction isAgentMatched(\n  acr: WithAccessibleAcr,\n  policy: ThingPersisted,\n  webId: string,\n): boolean {\n  // TODO: Proper solution\n  // Finalise, release and use the TypeScript ACP Solid library\n  // internal_getActorAccess in acp_v2:96 doesn't reduce the policies properly\n  // policyAppliesTo in acp_v2:256 assumes that every matcher is an agent matcher\n  //\n  // TODO: Stopgap solution\n  // Implement a simplistic reduce function that\n  // matches policies where the agent is present in the matchers\n  const allOfMatchers = getUrlAll(policy, ACP.allOf)\n    .map((url) => getThing(internal_getAcr(acr), url))\n    .filter((thing): thing is ThingPersisted => thing !== null);\n\n  const allOfMatched = allOfMatchers.every((thing) => {\n    return getUrlAll(thing, ACP.agent).includes(webId);\n  });\n\n  const anyOfMatchers = getUrlAll(policy, ACP.anyOf)\n    .map((url) => getThing(internal_getAcr(acr), url))\n    .filter((thing): thing is ThingPersisted => thing !== null);\n\n  const anyOfMatched = anyOfMatchers.some((thing) => {\n    return getUrlAll(thing, ACP.agent).includes(webId);\n  });\n\n  const noneOfMatchers = getUrlAll(policy, ACP.noneOf)\n    .map((url) => getThing(internal_getAcr(acr), url))\n    .filter((thing): thing is ThingPersisted => thing !== null);\n\n  const noneOfMatched = noneOfMatchers.some((thing) => {\n    return getUrlAll(thing, ACP.agent).includes(webId);\n  });\n\n  return (\n    allOfMatchers.length + anyOfMatchers.length > 0 &&\n    (allOfMatchers.length === 0 || allOfMatched) &&\n    (anyOfMatchers.length === 0 || anyOfMatched) &&\n    (noneOfMatchers.length === 0 || !noneOfMatched)\n  );\n}\n\n/** @hidden */\nfunction reduceModes(\n  policy: ThingPersisted,\n  modes: AccessModes,\n  type: \"control\" | \"resource\",\n): AccessModes {\n  const allowed = getAllowModes(policy);\n  const denied = getDenyModes(policy);\n\n  if (type === \"control\") {\n    return {\n      read: modes.read,\n      append: modes.append,\n      write: modes.write,\n      controlRead: (modes.controlRead || allowed.read) && !denied.read,\n      controlWrite: (modes.controlWrite || allowed.write) && !denied.write,\n    };\n  }\n  return {\n    read: (modes.read || allowed.read) && !denied.read,\n    append: (modes.append || allowed.append) && !denied.append,\n    write: (modes.write || allowed.write) && !denied.write,\n    controlRead: modes.controlRead,\n    controlWrite: modes.controlWrite,\n  };\n}\n\n/**\n * Get an overview of what access is defined for a given Agent.\n *\n * @param resourceWithAcr URL of the Resource you want to read the access for.\n * @param webId WebID of the Agent you want to get the access for.\n * @since 1.16.0\n */\nexport async function getAgentAccess<T extends WithAccessibleAcr>(\n  resourceWithAcr: T,\n  webId: WebId,\n): Promise<AccessModes> {\n  // TODO: add support for external resources\n  let resourceAccess = {\n    read: false,\n    append: false,\n    write: false,\n    controlRead: false,\n    controlWrite: false,\n  };\n\n  const policyAll = getPolicyUrlAll(resourceWithAcr)\n    .map((url) => getThing(internal_getAcr(resourceWithAcr), url))\n    .filter((policy): policy is ThingPersisted => policy !== null);\n\n  policyAll.forEach((policy) => {\n    if (isAgentMatched(resourceWithAcr, policy, webId)) {\n      resourceAccess = reduceModes(policy, resourceAccess, \"resource\");\n    }\n  });\n\n  const acrPolicyAll = getAcrPolicyUrlAll(resourceWithAcr)\n    .map((url) => getThing(internal_getAcr(resourceWithAcr), url))\n    .filter((policy): policy is ThingPersisted => policy !== null);\n\n  acrPolicyAll.forEach((policy) => {\n    if (isAgentMatched(resourceWithAcr, policy, webId)) {\n      resourceAccess = reduceModes(policy, resourceAccess, \"control\");\n    }\n  });\n\n  return resourceAccess;\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport {\n  internal_fetchAcl,\n  internal_getResourceAcl,\n  internal_setAcl,\n  internal_setResourceAcl,\n} from \"../acl/acl.internal\";\nimport {\n  getAgentAccess as getAgentAccessWac,\n  getAgentAccessAll as getAgentAccessAllWac,\n  setAgentResourceAccess as setAgentResourceAccessWac,\n} from \"../acl/agent\";\nimport {\n  getGroupAccess as getGroupAccessWac,\n  getGroupAccessAll as getGroupAccessAllWac,\n  setGroupResourceAccess as setGroupResourceAccessWac,\n} from \"../acl/group\";\nimport {\n  getPublicAccess as getPublicAccessWac,\n  setPublicResourceAccess as setPublicResourceAccessWac,\n} from \"../acl/class\";\nimport type {\n  IriString,\n  UrlString,\n  WebId,\n  WithServerResourceInfo,\n} from \"../interfaces\";\nimport type {\n  Access as AclAccess,\n  AclDataset,\n  WithAccessibleAcl,\n  WithResourceAcl,\n} from \"../acl/acl\";\nimport {\n  createAclFromFallbackAcl,\n  getResourceAcl,\n  hasAccessibleAcl,\n  hasFallbackAcl,\n  hasResourceAcl,\n  saveAclFor,\n} from \"../acl/acl\";\n\ninterface Access {\n  read: boolean;\n  append: boolean;\n  write: boolean;\n  controlRead: boolean;\n  controlWrite: boolean;\n}\nexport type WacAccess = (\n  | { controlRead: true; controlWrite: true }\n  | { controlRead: false; controlWrite: false }\n) & {\n  read: boolean;\n  append: boolean;\n  write: boolean;\n};\n\nfunction universalAccessToAcl(\n  newAccess: Partial<WacAccess>,\n  previousAccess: AclAccess,\n): AclAccess {\n  // Universal access is aligned on ACP, which means there is a distinction between\n  // controlRead and controlWrite. This split doesn't exist in WAC, which is why\n  // the type for the input variable of this function is a restriction on the\n  // universal Access type.\n  if (newAccess.controlRead !== newAccess.controlWrite) {\n    throw new Error(\n      \"For Pods using Web Access Control, controlRead and controlWrite must be equal.\",\n    );\n  }\n  return {\n    read: newAccess.read ?? previousAccess.read,\n    append: newAccess.append ?? previousAccess.append,\n    write: newAccess.write ?? previousAccess.write,\n    control: newAccess.controlRead ?? previousAccess.control,\n  };\n}\n\nfunction aclAccessToUniversal(access: AclAccess): WacAccess {\n  // In ACL, denying access to an actor is a notion that doesn't exist, so an\n  // access is either granted or not for a given mode.\n  // This creates a misalignment with the ACP notion of an access being granted,\n  // denied, or simply not mentioned. Here, we convert the boolean vision of\n  // ACL into the boolean or undefined vision of ACP.\n  return {\n    read: access.read,\n    write: access.write,\n    append: access.append,\n    controlRead: access.control,\n    controlWrite: access.control,\n  } as WacAccess;\n}\n\nasync function getActorAccess(\n  resource: WithServerResourceInfo,\n  actor: IriString,\n  accessEvaluationCallback: typeof getAgentAccessWac,\n  options?: { fetch?: typeof fetch },\n): Promise<Access | null> {\n  const resourceAcl = await internal_fetchAcl(resource, options);\n  const wacAccess = accessEvaluationCallback(\n    internal_setAcl(resource, resourceAcl),\n    actor,\n  );\n  if (wacAccess === null) {\n    return null;\n  }\n  return aclAccessToUniversal(wacAccess);\n}\n\nasync function getActorClassAccess(\n  resource: WithServerResourceInfo,\n  accessEvaluationCallback: typeof getPublicAccessWac,\n  options?: { fetch?: typeof fetch },\n): Promise<Access | null> {\n  const resourceAcl = await internal_fetchAcl(resource, options);\n  const wacAccess = accessEvaluationCallback(\n    internal_setAcl(resource, resourceAcl),\n  );\n  if (wacAccess === null) {\n    return null;\n  }\n  return aclAccessToUniversal(wacAccess);\n}\n\nasync function getActorAccessAll(\n  resource: WithServerResourceInfo,\n  accessEvaluationCallback: typeof getAgentAccessAllWac,\n  options?: { fetch?: typeof fetch },\n): Promise<Record<WebId, WacAccess> | null> {\n  const resourceAcl = await internal_fetchAcl(resource, options);\n  const wacAgentAccess = accessEvaluationCallback(\n    internal_setAcl(resource, resourceAcl),\n  );\n  if (wacAgentAccess === null) {\n    return null;\n  }\n  const result: Record<WebId, WacAccess> = {};\n  for (const [webId, wacAccess] of Object.entries(wacAgentAccess)) {\n    result[webId] = aclAccessToUniversal(wacAccess);\n  }\n  return result;\n}\n\n/**\n * For a given Resource, look up its metadata, and read the Access permissions\n * granted to the given Agent.\n *\n * Note that this only lists permissions granted to the given Agent individually,\n * and will not exhaustively list modes the given Agent may have access to because\n * they apply to everyone, or because they apply to the Agent through a group for\n * instance.\n *\n * @param resource The URL of the Resource for which we want to list Access\n * @param agent The Agent for which the Access is granted\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\n * @returns What Access modes are granted to the given Agent explicitly, or null if it could not be determined.\n */\nexport function getAgentAccess(\n  resource: WithServerResourceInfo,\n  agent: WebId,\n  options?: { fetch?: typeof fetch },\n): Promise<Access | null> {\n  return getActorAccess(resource, agent, getAgentAccessWac, options);\n}\n\n/**\n * For a given Resource, look up its metadata, and read the Access permissions\n * granted to the given Group.\n *\n * Note that this only lists permissions granted to the given Group individually,\n * and will not exhaustively list modes the given Group may have access to because\n * they apply to everyone, or because they apply to the Group through another\n * Group that may contain it for instance.\n *\n * @param resource The URL of the Resource for which we want to list Access\n * @param group The Group for which the Access is granted\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\n * @returns What Access modes are granted to the given Group explicitly, or null if it could not be determined.\n */\nexport function getGroupAccess(\n  resource: WithServerResourceInfo,\n  group: UrlString,\n  options?: { fetch?: typeof fetch },\n): Promise<Access | null> {\n  return getActorAccess(resource, group, getGroupAccessWac, options);\n}\n\n/**\n * For a given Resource, look up its metadata, and read the Access permissions\n * granted to everyone.\n *\n * Note that this only lists permissions explicitly granted to everyone as a whole,\n * and will not exhaustively list modes any individual Agent or Group may have\n * access to because they specifically apply to them only.\n *\n * @param resource The URL of the Resource for which we want to list public Access\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\n * @returns What Access modes are granted to the everyone explicitly, or null if it could not be determined.\n */\nexport function getPublicAccess(\n  resource: WithServerResourceInfo,\n  options?: { fetch?: typeof fetch },\n): Promise<Access | null> {\n  return getActorClassAccess(resource, getPublicAccessWac, options);\n}\n\n/**\n * For a given Resource, look up its metadata, and read the Access permissions\n * granted explicitly to each individual Agent.\n *\n * Note that this only lists permissions granted to each Agent individually,\n * and will not exhaustively list modes any Agent may have access to because\n * they apply to everyone, or because they apply to an Agent through a group for\n * instance.\n *\n * @param resource The URL of the Resource for which we want to list Agents Access\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\n * @returns A map of Agent WebIDs and the access granted to them, or null if it could not be determined.\n */\nexport function getAgentAccessAll(\n  resource: WithServerResourceInfo,\n  options?: { fetch?: typeof fetch },\n): Promise<Record<WebId, WacAccess> | null> {\n  return getActorAccessAll(resource, getAgentAccessAllWac, options);\n}\n\n/**\n * For a given Resource, look up its metadata, and read the Access permissions\n * granted explicitly to each individual Group.\n *\n * Note that this only lists permissions granted to each Group individually,\n * and will not exhaustively list modes any Group may have access to because\n * they apply individually to all of the Agents in the Group, or to everyone\n * for instance.\n *\n * @param resource The URL of the Resource for which we want to list Agents Access\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\n * @returns A map of Group URLs and the access granted to them, or null if it could not be determined.\n */\nexport function getGroupAccessAll(\n  resource: WithServerResourceInfo,\n  options?: { fetch?: typeof fetch },\n): Promise<Record<WebId, WacAccess> | null> {\n  return getActorAccessAll(resource, getGroupAccessAllWac, options);\n}\n\nasync function prepareResourceAcl<T extends WithServerResourceInfo>(\n  resource: T,\n  options?: { fetch?: typeof fetch },\n): Promise<(T & WithResourceAcl & WithAccessibleAcl) | null> {\n  if (!hasAccessibleAcl(resource)) {\n    return null;\n  }\n  const acl = await internal_fetchAcl(resource, options);\n  const resourceWithAcl = internal_setAcl(resource, acl);\n  let resourceAcl: AclDataset;\n  if (hasResourceAcl(resourceWithAcl)) {\n    // This is the simple case, where the Resource ACL we need to update already\n    // exists.\n    resourceAcl = internal_getResourceAcl(resourceWithAcl);\n  } else if (hasFallbackAcl(resourceWithAcl)) {\n    // In this case, the Resource ACL needs to be created first, and then updated.\n    resourceAcl = createAclFromFallbackAcl(resourceWithAcl);\n  } else {\n    return null;\n  }\n\n  return internal_setResourceAcl(resourceWithAcl, resourceAcl);\n}\n\nasync function saveUpdatedAcl<\n  T extends WithServerResourceInfo & WithAccessibleAcl & WithResourceAcl,\n>(\n  resource: T,\n  acl: AclDataset,\n  options?: { fetch?: typeof fetch },\n): Promise<T | null> {\n  let savedAcl: AclDataset | null = null;\n  try {\n    savedAcl = await saveAclFor(resource, acl, options);\n    return internal_setResourceAcl(resource, savedAcl);\n  } catch (e) {\n    return null;\n  }\n}\n\nasync function setActorClassAccess<T extends WithServerResourceInfo>(\n  resource: T,\n  access: Partial<WacAccess>,\n  getAccess: typeof getPublicAccessWac,\n  setAccess: typeof setPublicResourceAccessWac,\n  options?: { fetch?: typeof fetch },\n): Promise<(T & WithResourceAcl) | null> {\n  const resourceWithOldAcl = await prepareResourceAcl(resource, options);\n\n  if (resourceWithOldAcl === null) {\n    return null;\n  }\n\n  const resourceAcl = getResourceAcl(resourceWithOldAcl);\n  const currentAccess = getAccess(resourceWithOldAcl) as AclAccess;\n  const wacAccess = universalAccessToAcl(access, currentAccess);\n  const updatedResourceAcl = setAccess(resourceAcl, wacAccess);\n\n  return saveUpdatedAcl(resourceWithOldAcl, updatedResourceAcl, options);\n}\n\nasync function setActorAccess<T extends WithServerResourceInfo>(\n  resource: T,\n  actor: UrlString,\n  access: Partial<WacAccess>,\n  getAccess: typeof getAgentAccessWac,\n  setAccess: typeof setAgentResourceAccessWac,\n  options?: { fetch?: typeof fetch },\n): Promise<(T & WithResourceAcl) | null> {\n  const resourceWithOldAcl = await prepareResourceAcl(resource, options);\n\n  if (resourceWithOldAcl === null) {\n    return null;\n  }\n\n  const currentAccess = getAccess(resourceWithOldAcl, actor) as AclAccess;\n  const resourceAcl = getResourceAcl(resourceWithOldAcl);\n  const wacAccess = universalAccessToAcl(access, currentAccess);\n  const updatedResourceAcl = setAccess(resourceAcl, actor, wacAccess);\n\n  return saveUpdatedAcl(resourceWithOldAcl, updatedResourceAcl, options);\n}\n\n/**\n * Set the Access modes for a given Agent to a given Resource.\n *\n * Important note: if the target resource did not have a Resource ACL, and its\n * Access was regulated by its Fallback ACL, said Fallback ACL is copied to create\n * a new Resource ACL. This has the side effect that the next time the Fallback\n * ACL is updated, the changes _will not impact_ the target resource.\n *\n * If the target Resource's Access mode cannot be determined, e.g. the user does\n * not have Read and Write access to the target Resource's ACL, or to its\n * fallback ACL if it does not have a Resource ACL, then `null` is returned.\n *\n * @param resource The Resource for which Access is being set\n * @param agent The Agent for whom Access is being set\n * @param access The Access being set\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\n * @returns The Resource, with its ACL updated, or null if the new Access could not\n * be set.\n */\nexport async function setAgentResourceAccess<T extends WithServerResourceInfo>(\n  resource: T,\n  agent: WebId,\n  access: Partial<WacAccess>,\n  options?: { fetch?: typeof fetch },\n): Promise<(T & WithResourceAcl) | null> {\n  return setActorAccess(\n    resource,\n    agent,\n    access,\n    getAgentAccessWac,\n    setAgentResourceAccessWac,\n    options,\n  );\n}\n\n/**\n * Set the Access modes for a given Group to a given Resource.\n *\n * Important note: if the target resource did not have a Resource ACL, and its\n * Access was regulated by its Fallback ACL, said Fallback ACL is copied to create\n * a new Resource ACL. This has the side effect that the next time the Fallback\n * ACL is updated, the changes _will not impact_ the target resource.\n *\n * If the target Resource's Access mode cannot be determined, e.g. the user does\n * not have Read and Write access to the target Resource's ACL, or to its\n * fallback ACL if it does not have a Resource ACL, then `null` is returned.\n *\n * @param resource The Resource for which Access is being set\n * @param agent The Group for which Access is being set\n * @param access The Access being set\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\n * @returns The Resource, with its ACL updated, or null if the new Access could not\n * be set.\n */\nexport async function setGroupResourceAccess<T extends WithServerResourceInfo>(\n  resource: T,\n  group: UrlString,\n  access: Partial<WacAccess>,\n  options?: { fetch?: typeof fetch },\n): Promise<(T & WithResourceAcl) | null> {\n  return setActorAccess(\n    resource,\n    group,\n    access,\n    getGroupAccessWac,\n    setGroupResourceAccessWac,\n    options,\n  );\n}\n\n/**\n * Set the Access modes for everyone to a given Resource.\n *\n * Important note: if the target resource did not have a Resource ACL, and its\n * Access was regulated by its Fallback ACL, said Fallback ACL is copied to create\n * a new Resource ACL. This has the side effect that the next time the Fallback\n * ACL is updated, the changes _will not impact_ the target resource.\n *\n * If the target Resource's Access mode cannot be determined, e.g. the user does\n * not have Read and Write access to the target Resource's ACL, or to its\n * fallback ACL if it does not have a Resource ACL, then `null` is returned.\n *\n * @param resource The Resource for which Access is being set\n * @param access The Access being set\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\n * @returns The Resource, with its ACL updated, or null if the new Access could not\n * be set.\n */\nexport async function setPublicResourceAccess<T extends WithServerResourceInfo>(\n  resource: T,\n  access: Partial<WacAccess>,\n  options?: { fetch?: typeof fetch },\n): Promise<(T & WithResourceAcl) | null> {\n  return setActorClassAccess(\n    resource,\n    access,\n    getPublicAccessWac,\n    setPublicResourceAccessWac,\n    options,\n  );\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { UrlString, WithServerResourceInfo } from \"../../interfaces\";\nimport type { DefaultOptions } from \"../type/DefaultOptions\";\nimport { ACP } from \"../constants\";\nimport { getLinkedResourceUrlAll, getSourceUrl } from \"../../resource/resource\";\nimport { getAclServerResourceInfo } from \"../../universal/getAclServerResourceInfo\";\n\n/**\n * Retrieve the URL of an Access Control Resource as per the ACP Draft\n * specification.\n *\n * @param resource The Resource for which to retrieve the URL of the Access\n * Control Resource if it is accessible.\n * @returns The URL of the ACR or null.\n */\nexport async function getAcrUrl(\n  resource: WithServerResourceInfo,\n  options?: DefaultOptions,\n): Promise<UrlString | null> {\n  // The ACP Draft mandates a link rel=\"type\" header identifies Access Control Resources\n  const aclServerResourceInfo = await getAclServerResourceInfo(\n    resource,\n    options,\n  );\n\n  if (aclServerResourceInfo === null) {\n    return null;\n  }\n\n  const relTypeLinks = getLinkedResourceUrlAll(aclServerResourceInfo).type;\n  if (\n    Array.isArray(relTypeLinks) &&\n    relTypeLinks.includes(ACP.AccessControlResource)\n  ) {\n    return getSourceUrl(aclServerResourceInfo);\n  }\n\n  return null;\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { SolidDataset, WithServerResourceInfo } from \"../../interfaces\";\nimport type { DefaultOptions } from \"../type/DefaultOptions\";\nimport type { WithAccessibleAcr } from \"../acp\";\nimport { getAcrUrl } from \"./getAcrUrl\";\nimport { getSolidDataset } from \"../../resource/solidDataset\";\nimport { getSourceUrl } from \"../../resource/resource\";\n\n/**\n * Retrieve the Access Control Resource of a Resource as per the ACP Draft\n * specification.\n *\n * @param resource The Resource for which to retrieve the URL of the Access\n * Control Resource if it is accessible.\n * @param options Default Options such as a fetch function.\n * @returns The URL of the ACR or null.\n */\nexport async function getResourceAcr<T extends WithServerResourceInfo>(\n  resource: T,\n  options?: DefaultOptions,\n): Promise<(T & WithAccessibleAcr) | null> {\n  const acrUrl = await getAcrUrl(resource, options);\n  if (acrUrl === null) {\n    return null;\n  }\n\n  let acr: SolidDataset & WithServerResourceInfo;\n  try {\n    acr = await getSolidDataset(acrUrl, options);\n  } catch (e: unknown) {\n    return null;\n  }\n\n  return {\n    ...resource,\n    internal_acp: {\n      acr: {\n        ...acr,\n        accessTo: getSourceUrl(resource),\n      },\n    },\n  };\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { AccessModes, UrlString, WebId } from \"../interfaces\";\nimport type { DefaultOptions } from \"../acp/type/DefaultOptions\";\nimport { getResourceInfo } from \"../resource/resource\";\nimport { getAgentAccess as getAgentAccessAcp } from \"../acp/util/getAgentAccess\";\nimport { getAgentAccess as getAgentAccessWac } from \"../access/wac\";\nimport { getResourceAcr } from \"../acp/util/getResourceAcr\";\n\n/**\n * Get an overview of what access is defined for a given Agent.\n *\n * This function works with Solid Pods that implement either the Web Access\n * Control spec or the Access Control Policies proposal, with some caveats:\n *\n * - If access to the given Resource has been set using anything other than the\n *   functions in this module, it is possible that it has been set in a way that\n *   prevents this function from reliably reading access.\n * - It will only return access specified explicitly for the given Agent within\n *   the ACL linked to the resource. If additional restrictions or external\n *   resources are used, those will not be reflected in the return value of this\n *   function.\n * - It will only return access specified explicitly for the given Resource.\n *   In other words, if the Resource is a Container, the returned Access may not\n *   apply to contained Resources.\n * - If the current user does not have permission to view access for the given\n *   Resource, this function will resolve to `null`.\n *\n * @param resourceUrl URL of the Resource you want to read the access for.\n * @param webId WebID of the Agent you want to get the access for.\n * @param options Default Options such as a fetch function.\n * @since 1.19.0\n */\nexport async function getAgentAccess(\n  resourceUrl: UrlString,\n  webId: WebId,\n  options?: DefaultOptions,\n): Promise<AccessModes | null> {\n  const resourceInfo = await getResourceInfo(resourceUrl, options);\n  const acr = await getResourceAcr(resourceInfo, options);\n\n  if (acr === null) {\n    return getAgentAccessWac(resourceInfo, webId, options);\n  }\n\n  return getAgentAccessAcp(acr, webId);\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { WithAccessibleAcr } from \"../acp\";\nimport { internal_getAcr } from \"../control.internal\";\nimport { ACP } from \"../constants\";\nimport { getThingAll, getUrlAll } from \"../..\";\n\n/** @hidden */\nexport function getAgentUrlAll(acr: WithAccessibleAcr): string[] {\n  return Array.from(\n    new Set(\n      getThingAll(internal_getAcr(acr))\n        .map((thing) => {\n          return getUrlAll(thing, ACP.agent);\n        })\n        .reduce((flatArray, agentArray) => {\n          return flatArray.concat(agentArray);\n        }, []),\n    ),\n  );\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { AccessModes } from \"../../interfaces\";\nimport { getAgentAccess } from \"./getAgentAccess\";\nimport { getAgentUrlAll } from \"./getAgentUrlAll\";\nimport type { WithAccessibleAcr } from \"../acp\";\n\n/**\n * Get an overview of what access is defined for agents.\n *\n * This function works with Solid Pods that implement either the Web Access\n * Control spec or the Access Control Policies proposal, with some caveats:\n *\n * - If access to the given Resource has been set using anything other than the\n *   functions in this module, it is possible that it has been set in a way that\n *   prevents this function from reliably reading access.\n * - It will only return access specified explicitly for the given Agent within\n *   the ACL linked to the resource. If additional restrictions or external\n *   resources are used, those will not be reflected in the return value of this\n *   function.\n * - It will only return access specified explicitly for the given Resource.\n *   In other words, if the Resource is a Container, the returned Access may not\n *   apply to contained Resources.\n * - If the current user does not have permission to view access for the given\n *   Resource, this function will resolve to `null`.\n *\n * @param resourceUrl URL of the Resource you want to read the access for.\n * @param options Default Options such as a fetch function.\n * @since 1.21.0\n */\nexport async function getAgentAccessAll<T extends WithAccessibleAcr>(\n  resourceWithAcr: T,\n): Promise<Record<string, AccessModes> | null> {\n  return (\n    await Promise.all(\n      getAgentUrlAll(resourceWithAcr).map(async (agent) => ({\n        [agent]: await getAgentAccess(resourceWithAcr, agent),\n      })),\n    )\n  ).reduce(\n    (agentAccessAll, currentAgentAccess) => ({\n      ...agentAccessAll,\n      ...currentAgentAccess,\n    }),\n    {},\n  );\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { AccessModes, UrlString } from \"../interfaces\";\nimport type { DefaultOptions } from \"../acp/type/DefaultOptions\";\nimport { getResourceInfo } from \"../resource/resource\";\nimport { getAgentAccessAll as getAgentAccessAllAcp } from \"../acp/util/getAgentAccessAll\";\nimport { getAgentAccessAll as getAgentAccessAllWac } from \"../access/wac\";\nimport { getResourceAcr } from \"../acp/util/getResourceAcr\";\n\n/**\n * Get an overview of what access is defined for agents.\n *\n * This function works with Solid Pods that implement either the Web Access\n * Control spec or the Access Control Policies proposal, with some caveats:\n *\n * - If access to the given Resource has been set using anything other than the\n *   functions in this module, it is possible that it has been set in a way that\n *   prevents this function from reliably reading access.\n * - It will only return access specified explicitly for the given Agent within\n *   the ACL linked to the resource. If additional restrictions or external\n *   resources are used, those will not be reflected in the return value of this\n *   function.\n * - It will only return access specified explicitly for the given Resource.\n *   In other words, if the Resource is a Container, the returned Access may not\n *   apply to contained Resources.\n * - If the current user does not have permission to view access for the given\n *   Resource, this function will resolve to `null`.\n *\n * @param resourceUrl URL of the Resource you want to read the access for.\n * @param options Default Options such as a fetch function.\n * @since 1.21.0\n */\nexport async function getAgentAccessAll(\n  resourceUrl: UrlString,\n  options?: DefaultOptions,\n): Promise<Record<string, AccessModes> | null> {\n  const resourceInfo = await getResourceInfo(resourceUrl, options);\n  const acr = await getResourceAcr(resourceInfo, options);\n\n  if (acr === null) {\n    return getAgentAccessAllWac(resourceInfo, options);\n  }\n\n  return getAgentAccessAllAcp(acr);\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { AccessModes } from \"../../interfaces\";\nimport type { WithAccessibleAcr } from \"../acp\";\nimport { ACP } from \"../constants\";\nimport { getAgentAccess } from \"./getAgentAccess\";\n\n/**\n * Get an overview of what access is given to the public.\n *\n * @param resourceWithAcr URL of the Resource you want to read the access for.\n * @since 1.16.0\n */\nexport async function getPublicAccess<T extends WithAccessibleAcr>(\n  resourceWithAcr: T,\n): Promise<AccessModes> {\n  return getAgentAccess(resourceWithAcr, ACP.PublicAgent);\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { AccessModes, UrlString } from \"../interfaces\";\nimport type { DefaultOptions } from \"../acp/type/DefaultOptions\";\nimport { getResourceInfo } from \"../resource/resource\";\nimport { getPublicAccess as getPublicAccessAcp } from \"../acp/util/getPublicAccess\";\nimport { getPublicAccess as getPublicAccessWac } from \"../access/wac\";\nimport { getResourceAcr } from \"../acp/util/getResourceAcr\";\n\n/**\n * Get an overview of what access is defined for the Public.\n *\n * This function works with Solid Pods that implement either the Web Access\n * Control spec or the Access Control Policies proposal, with some caveats:\n *\n * - If access to the given Resource has been set using anything other than the\n *   functions in this module, it is possible that it has been set in a way that\n *   prevents this function from reliably reading access.\n * - It will only return access specified explicitly for the given Agent within\n *   the ACL linked to the resource. If additional restrictions or external\n *   resources are used, those will not be reflected in the return value of this\n *   function.\n * - It will only return access specified explicitly for the given Resource.\n *   In other words, if the Resource is a Container, the returned Access may not\n *   apply to contained Resources.\n * - If the current user does not have permission to view access for the given\n *   Resource, this function will resolve to `null`.\n *\n * @param resourceUrl URL of the Resource you want to read the access for.\n * @param options Default Options such as a fetch function.\n * @since 1.19.0\n */\nexport async function getPublicAccess(\n  resourceUrl: UrlString,\n  options?: DefaultOptions,\n): Promise<AccessModes | null> {\n  const resourceInfo = await getResourceInfo(resourceUrl, options);\n  const acr = await getResourceAcr(resourceInfo, options);\n\n  if (acr === null) {\n    return getPublicAccessWac(resourceInfo, options);\n  }\n\n  return getPublicAccessAcp(acr);\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { WithAccessibleAcr } from \"../acp\";\nimport type { ThingPersisted } from \"../..\";\nimport { setThing } from \"../..\";\nimport { internal_cloneResource as cloneResource } from \"../../resource/resource.internal\";\n\n/** @hidden */\nexport function setAccessControlResourceThing<T extends WithAccessibleAcr>(\n  resource: T,\n  thing: ThingPersisted,\n): T {\n  return Object.assign(cloneResource(resource), {\n    internal_acp: {\n      ...resource.internal_acp,\n      acr: setThing(resource.internal_acp.acr, thing),\n    },\n  });\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { WithAccessibleAcr } from \"../acp\";\nimport type { AccessModes } from \"../../interfaces\";\nimport type { DefaultAccessControlName } from \"./getDefaultAccessControlUrl\";\nimport { getDefaultAccessControlUrl } from \"./getDefaultAccessControlUrl\";\n\n/** @hidden */\nexport function getDefaultAgentMatcherPolicyUrl(\n  resource: WithAccessibleAcr,\n  name: DefaultAccessControlName,\n  mode: keyof AccessModes,\n): string {\n  return getDefaultAccessControlUrl(resource, name)\n    .concat(\"AgentMatcher\")\n    .concat(mode.charAt(0).toUpperCase() + mode.slice(1))\n    .concat(\"Policy\");\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { WithAccessibleAcr } from \"../acp\";\nimport { buildThing, createThing, getIriAll, getSourceUrl } from \"../..\";\nimport { ACP } from \"../constants\";\nimport { internal_getAcr as getAccessControlResource } from \"../control.internal\";\nimport { getAccessControlResourceThing } from \"./getAccessControlResourceThing\";\nimport type { DefaultAccessControlName } from \"./getDefaultAccessControlUrl\";\nimport { getDefaultAccessControlUrl } from \"./getDefaultAccessControlUrl\";\nimport { setAccessControlResourceThing } from \"./setAccessControlResourceThing\";\n\nfunction getAccessControlTypeFromDefaultAccessControlName(\n  name: DefaultAccessControlName,\n): string {\n  if (name.includes(\"Member\")) {\n    return ACP.memberAccessControl;\n  }\n  return ACP.accessControl;\n}\n\n/** @hidden */\nexport function setDefaultAccessControlThingIfNotExist<\n  T extends WithAccessibleAcr,\n>(resource: T, name: DefaultAccessControlName): T {\n  const defaultAccessControlThingUrl = getDefaultAccessControlUrl(\n    resource,\n    name,\n  );\n  const acr = getAccessControlResource(resource);\n\n  // Get the Access Control Resource Thing or create it\n  let accessControlResourceThing = getAccessControlResourceThing(resource);\n  if (\n    accessControlResourceThing === null ||\n    typeof accessControlResourceThing === \"undefined\"\n  ) {\n    accessControlResourceThing = createThing({ url: getSourceUrl(acr) });\n  }\n\n  // Get the Default Access Control Thing or create it and return\n  const accessControlUrlAll = getIriAll(\n    accessControlResourceThing,\n    getAccessControlTypeFromDefaultAccessControlName(name),\n  );\n\n  if (!accessControlUrlAll.includes(defaultAccessControlThingUrl)) {\n    accessControlResourceThing = buildThing(accessControlResourceThing)\n      .addUrl(\n        getAccessControlTypeFromDefaultAccessControlName(name),\n        defaultAccessControlThingUrl,\n      )\n      .build();\n\n    return setAccessControlResourceThing(resource, accessControlResourceThing);\n  }\n\n  // Return the original resource if the ACR and Default AC exist\n  return resource;\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { Url, UrlString } from \"../../interfaces\";\nimport type { WithAccessibleAcr } from \"../acp\";\nimport { ACP } from \"../constants\";\nimport { buildThing } from \"../../thing/build\";\nimport { getDefaultAccessControlThing } from \"../internal/getDefaultAccessControlThing\";\nimport { DEFAULT_ACR_ACCESS_CONTROL } from \"../internal/getDefaultAccessControlUrl\";\nimport { setAccessControlResourceThing } from \"../internal/setAccessControlResourceThing\";\nimport { setDefaultAccessControlThingIfNotExist } from \"../internal/setDefaultAccessControlThingIfNotExist\";\n\n/**\n * ```{note}\n * The ACP specification is a draft. As such, this function is experimental and\n * subject to change, even in a non-major release.\n * See also: https://solid.github.io/authorization-panel/acp-specification/\n * ```\n *\n * Add a policy applying to the ACR of the given resource.\n *\n * @param resourceWithAcr The resource for which to add the URL of a policy\n * applying to its access control resource.\n * @param policyUrl A Policy URL.\n * @returns The resource with its ammended access control resource.\n * @since 1.16.1\n */\nexport function addAcrPolicyUrl<T extends WithAccessibleAcr>(\n  resourceWithAcr: T,\n  policyUrl: Url | UrlString,\n): T {\n  const resourceWithAcrContainingDefaultAccessControl =\n    setDefaultAccessControlThingIfNotExist(\n      resourceWithAcr,\n      DEFAULT_ACR_ACCESS_CONTROL,\n    );\n\n  const defaultAccessControlThing = getDefaultAccessControlThing(\n    resourceWithAcrContainingDefaultAccessControl,\n    DEFAULT_ACR_ACCESS_CONTROL,\n  );\n\n  return setAccessControlResourceThing(\n    resourceWithAcrContainingDefaultAccessControl,\n    buildThing(defaultAccessControlThing).addUrl(ACP.access, policyUrl).build(),\n  );\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { Url, UrlString } from \"../../interfaces\";\nimport type { WithAccessibleAcr } from \"../acp\";\nimport { ACP } from \"../constants\";\nimport { buildThing } from \"../../thing/build\";\nimport { getDefaultAccessControlThing } from \"../internal/getDefaultAccessControlThing\";\nimport { DEFAULT_ACCESS_CONTROL } from \"../internal/getDefaultAccessControlUrl\";\nimport { setAccessControlResourceThing } from \"../internal/setAccessControlResourceThing\";\nimport { setDefaultAccessControlThingIfNotExist } from \"../internal/setDefaultAccessControlThingIfNotExist\";\n\n/**\n * ```{note}\n * The ACP specification is a draft. As such, this function is experimental and\n * subject to change, even in a non-major release.\n * See also: https://solid.github.io/authorization-panel/acp-specification/\n * ```\n *\n * Add a policy applying to the given resource.\n *\n * @param resourceWithAcr The resource for which to add the URL of a policy\n * applying to it.\n * @param policyUrl A Policy URL.\n * @returns The resource with its ammended access control resource.\n * @since 1.16.1\n */\nexport function addPolicyUrl<T extends WithAccessibleAcr>(\n  resourceWithAcr: T,\n  policyUrl: Url | UrlString,\n): T {\n  const resourceWithAcrContainingDefaultAccessControl =\n    setDefaultAccessControlThingIfNotExist(\n      resourceWithAcr,\n      DEFAULT_ACCESS_CONTROL,\n    );\n\n  const defaultAccessControlThing = getDefaultAccessControlThing(\n    resourceWithAcrContainingDefaultAccessControl,\n    DEFAULT_ACCESS_CONTROL,\n  );\n\n  return setAccessControlResourceThing(\n    resourceWithAcrContainingDefaultAccessControl,\n    buildThing(defaultAccessControlThing).addUrl(ACP.apply, policyUrl).build(),\n  );\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { WithAccessibleAcr } from \"../acp\";\nimport type { AccessModes } from \"../../interfaces\";\nimport type { DefaultAccessControlName } from \"./getDefaultAccessControlUrl\";\nimport { getDefaultAgentMatcherPolicyUrl } from \"./getDefaultAgentMatcherPolicyUrl\";\nimport { addAcrPolicyUrl } from \"../policy/addAcrPolicyUrl\";\nimport { addPolicyUrl } from \"../policy/addPolicyUrl\";\n\n/** @hidden */\nexport function setDefaultAgentMatcherPolicyThingIfNotExist<\n  T extends WithAccessibleAcr,\n>(resource: T, name: DefaultAccessControlName, mode: keyof AccessModes): T {\n  const policyUrl = getDefaultAgentMatcherPolicyUrl(resource, name, mode);\n\n  // TODO: Re-enable when we support setting agent access on member resources\n  // if (policyUrl.includes(\"Member\") && policyUrl.includes(\"Acr\")) {\n  //   return addMemberAcrPolicyUrl(resource, policyUrl);\n  // }\n\n  // if (policyUrl.includes(\"Member\")) {\n  //   return addMemberPolicyUrl(resource, policyUrl);\n  // }\n\n  if (policyUrl.includes(\"Acr\")) {\n    return addAcrPolicyUrl(resource, policyUrl);\n  }\n\n  return addPolicyUrl(resource, policyUrl);\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { WithAccessibleAcr } from \"../acp\";\nimport type { AccessModes } from \"../../interfaces\";\nimport type { DefaultAccessControlName } from \"./getDefaultAccessControlUrl\";\nimport { getDefaultAgentMatcherPolicyUrl } from \"./getDefaultAgentMatcherPolicyUrl\";\n\n/** @hidden */\nexport function getDefaultAgentMatcherPolicyMatcherUrl(\n  resource: WithAccessibleAcr,\n  name: DefaultAccessControlName,\n  mode: keyof AccessModes,\n): string {\n  return getDefaultAgentMatcherPolicyUrl(resource, name, mode).concat(\n    \"Matcher\",\n  );\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { WithAccessibleAcr } from \"../acp\";\nimport type { AccessModes } from \"../../interfaces\";\nimport { buildThing, createThing, getIriAll, getThing } from \"../..\";\nimport { ACP } from \"../constants\";\nimport { internal_getAcr as getAccessControlResource } from \"../control.internal\";\nimport type { DefaultAccessControlName } from \"./getDefaultAccessControlUrl\";\nimport { setAccessControlResourceThing } from \"./setAccessControlResourceThing\";\nimport { getDefaultAgentMatcherPolicyUrl } from \"./getDefaultAgentMatcherPolicyUrl\";\nimport { setDefaultAgentMatcherPolicyThingIfNotExist } from \"./setDefaultAgentMatcherPolicyThingIfNotExist\";\nimport { getDefaultAgentMatcherPolicyMatcherUrl } from \"./getDefaultAgentMatcherPolicyMatcherUrl\";\nimport { setModes } from \"./setModes\";\n\n/** @hidden */\nexport const DEFAULT_POLICY_MATCHER_PREDICATE = ACP.anyOf;\n\n/**\n * This functions scaffolds the default elements required for giving access to\n * an agent:\n * 1. If the Access Control Resource is empty, create the AccessControlResource\n *    element;\n * 2. If the current default Access Control doesn't exist (the one applying to\n *    one of: the Resource, the ACR, the Member Resources or the ACR of members)\n *    create it;\n * 3. If the default Policy for allowing the Access Modes for the current\n *    default Access Control doesn't exist, create it;\n * 4. If the default \"anyOf\" Agent Matcher for the current Policy creates it;\n * 5. Returns an ACR with a Matcher ready to add to.\n * @hidden\n * */\nexport function setDefaultAgentMatcherPolicyMatcherThingIfNotExist<\n  T extends WithAccessibleAcr,\n>(resource: T, name: DefaultAccessControlName, mode: keyof AccessModes): T {\n  const policyUrl = getDefaultAgentMatcherPolicyUrl(resource, name, mode);\n  const matcherUrl = getDefaultAgentMatcherPolicyMatcherUrl(\n    resource,\n    name,\n    mode,\n  );\n\n  let defaultAgentMatcherPolicyThing = getThing(\n    getAccessControlResource(resource),\n    policyUrl,\n  );\n\n  if (!defaultAgentMatcherPolicyThing) {\n    resource = setDefaultAgentMatcherPolicyThingIfNotExist(\n      resource,\n      name,\n      mode,\n    );\n    defaultAgentMatcherPolicyThing = createThing({ url: policyUrl });\n    defaultAgentMatcherPolicyThing = setModes(\n      defaultAgentMatcherPolicyThing,\n      { [mode]: true } as unknown as AccessModes,\n      ACP.allow,\n    );\n  }\n\n  // Get the Default Access Control Agent Matcher Policy Matcher Thing or create it and return\n  const agentMatcherPolicyUrlAll = getIriAll(\n    defaultAgentMatcherPolicyThing,\n    DEFAULT_POLICY_MATCHER_PREDICATE,\n  );\n\n  if (!agentMatcherPolicyUrlAll.includes(matcherUrl)) {\n    defaultAgentMatcherPolicyThing = buildThing(defaultAgentMatcherPolicyThing)\n      .addUrl(DEFAULT_POLICY_MATCHER_PREDICATE, matcherUrl)\n      .build();\n\n    return setAccessControlResourceThing(\n      resource,\n      defaultAgentMatcherPolicyThing,\n    );\n  }\n\n  return resource;\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport { acp, rdf, solid } from \"../constants\";\nimport { internal_isValidUrl, isNamedNode } from \"../datatypes\";\nimport type {\n  SolidDataset,\n  Thing,\n  ThingPersisted,\n  Url,\n  UrlString,\n  WebId,\n} from \"../interfaces\";\nimport { internal_toIriString } from \"../interfaces.internal\";\nimport { getSourceUrl } from \"../resource/resource\";\nimport { addIri, addStringNoLocale } from \"../thing/add\";\nimport { getIriAll, getStringNoLocaleAll } from \"../thing/get\";\nimport { removeIri, removeStringNoLocale } from \"../thing/remove\";\nimport { setIri, setUrl } from \"../thing/set\";\nimport {\n  asUrl,\n  createThing,\n  getThing,\n  getThingAll,\n  removeThing,\n  setThing,\n} from \"../thing/thing\";\nimport type { WithAccessibleAcr } from \"./acp\";\nimport { internal_getAcr, internal_setAcr } from \"./control.internal\";\nimport type { Policy, ResourcePolicy } from \"./policy\";\n\n/**\n * A Matcher can be applied to a [[Policy]] to determine under what circumstances that Policy is applied to a Resource.\n * @since Not released yet.\n */\nexport type Matcher = ThingPersisted;\n/**\n * A ResourceMatcher is like a [[Matcher]], but applied to a [[ResourcePolicy]] and therefore not re-used across different Resources, but only used for a single Resource and stored in that Resource's Access Control Resource.\n * @since Not released yet.\n */\nexport type ResourceMatcher = ThingPersisted;\n\n/**\n * @param thing the [[Thing]] to check to see if it's an ACP Matcher or not\n */\nfunction isMatcher(thing: Thing): thing is Matcher {\n  return getIriAll(thing, rdf.type).includes(acp.Matcher);\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Add a Matcher that refines the scope of a given the [[Policy]]. If an agent\n * requesting access to a resource is **not** present in **any** of the \"All Of\" Matchers,\n * they will not be granted access.\n *\n * Also see [[addAnyOfMatcherUrl]] and [[addNoneOfMatcherUrl]].\n *\n * @param policy The [[Policy]] to which the Matcher should be added.\n * @param matcher The Matcher to add to the policy.\n * @returns A new [[Policy]] clone of the original one, with the new Matcher added.\n * @since Not released yet.\n */\nexport function addAllOfMatcherUrl<P extends Policy | ResourcePolicy>(\n  policy: P,\n  matcher: Matcher | Url | UrlString,\n): P {\n  return addIri(policy, acp.allOf, matcher);\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Removes a Matcher that refines the scope of a given the [[Policy]]. If an agent\n * requesting access to a resource is **not** present in **any** of the \"All Of\" Matchers,\n * they will not be granted access.\n * @param policy The [[Policy]] from which the Matcher should be removed.\n * @param matcher The Matcher to remove from the policy.\n * @returns A new [[Policy]] clone of the original one, with the Matcher removed.\n * @since Not released yet.\n */\nexport function removeAllOfMatcherUrl<P extends Policy | ResourcePolicy>(\n  policy: P,\n  matcher: Matcher | Url | UrlString,\n): P {\n  return removeIri(policy, acp.allOf, matcher);\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Overwrites the Matcher refining the scope of a given the [[Policy]]. If an agent\n * requesting access to a resource is **not** present in **any** of the \"All Of\" Matchers,\n * they will not be granted access.\n * @param policy The [[Policy]] to which the Matcher should be added.\n * @param matcher The Matcher to set for the Policy.\n * @returns A new [[Policy]] clone of the original one, with the \"All Of\" Matchers replaced.\n * @since Not released yet.\n */\nexport function setAllOfMatcherUrl<P extends Policy | ResourcePolicy>(\n  policy: P,\n  matcher: Matcher | Url | UrlString,\n): P {\n  return setIri(policy, acp.allOf, matcher);\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Get the \"All Of\" [[Matcher]]s for the given [[Policy]]\n * @param policy The [[policy]] from which the Matchers should be read.\n * @returns A list of the \"All Of\" [[Matcher]]s\n * @since Not released yet.\n */\nexport function getAllOfMatcherUrlAll<P extends Policy | ResourcePolicy>(\n  policy: P,\n): UrlString[] {\n  return getIriAll(policy, acp.allOf);\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Add a Matcher that extends the scope of a given the [[Policy]]. If an agent\n * requesting access to a resource is present in **any** of the \"Any Of\" Matchers,\n * they will be granted access.\n *\n * Also see [[addAllOfMatcherUrl]] and [[addNoneOfMatcherUrl]].\n *\n * @param policy The [[Policy]] to which the Matcher should be added.\n * @param matcher The Matcher to add to the policy.\n * @returns A new [[Policy]] clone of the original one, with the new Matcher added.\n * @since Not released yet.\n */\nexport function addAnyOfMatcherUrl<P extends Policy | ResourcePolicy>(\n  policy: P,\n  matcher: Matcher | Url | UrlString,\n): P {\n  return addIri(policy, acp.anyOf, matcher);\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Removes a Matcher that extends the scope of a given the [[Policy]]. If an agent\n * requesting access to a resource is present in **any** of the \"Any Of\" Matchers,\n * they will be granted access.\n * @param policy The [[Policy]] from which the Matcher should be removed.\n * @param matcher The Matcher to remove from the policy.\n * @returns A new [[Policy]] clone of the original one, with the Matcher removed.\n * @since Not released yet.\n */\nexport function removeAnyOfMatcherUrl<P extends Policy | ResourcePolicy>(\n  policy: P,\n  matcher: Matcher | Url | UrlString,\n): P {\n  return removeIri(policy, acp.anyOf, matcher);\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Overwrite the Matcher extending the scope of a given the [[Policy]]. If an agent\n * requesting access to a resource is present in **any** of the \"Any Of\" Matchers,\n * they will be granted access.\n * @param policy The [[Policy]] to which the Matcher should be added.\n * @param matcher The Matcher to set for the Policy.\n * @returns A new [[Policy]] clone of the original one, with the \"Any Of\" Matchers replaced.\n * @since Not released yet.\n */\nexport function setAnyOfMatcherUrl<P extends Policy | ResourcePolicy>(\n  policy: P,\n  matcher: Matcher | Url | UrlString,\n): P {\n  return setIri(policy, acp.anyOf, matcher);\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Get the \"Any Of\" [[Matcher]]s for the given [[Policy]]\n * @param policy The [[policy]] from which the Matchers should be read.\n * @returns A list of the \"Any Of\" [[Matcher]]s\n * @since Not released yet.\n */\nexport function getAnyOfMatcherUrlAll<P extends Policy | ResourcePolicy>(\n  policy: P,\n): UrlString[] {\n  return getIriAll(policy, acp.anyOf);\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Add a Matcher that restricts the scope of a given the [[Policy]]. If an agent\n * requesting access to a resource is matched by another Matcher, but **also**\n * by the given Matcher, they will **not** be granted access.\n *\n * Also see [[addAllOfMatcherUrl]] and [[addAnyOfMatcherUrl]].\n *\n * @param policy The [[Policy]] to which the Matcher should be added.\n * @param matcher The Matcher to add to the policy.\n * @returns A new [[Policy]] clone of the original one, with the new Matcher added.\n * @since Not released yet.\n */\nexport function addNoneOfMatcherUrl<P extends Policy | ResourcePolicy>(\n  policy: P,\n  matcher: Matcher | Url | UrlString,\n): P {\n  return addIri(policy, acp.noneOf, matcher);\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Removes a Matcher that restricts the scope of a given the [[Policy]]. If an agent\n * requesting access to a resource is matched by another Matcher, but **also**\n * in any of the \"None Of\" Matchers, they will **not** be granted access.\n *\n * @param policy The [[Policy]] from which the Matcher should be removed.\n * @param matcher The Matcher to remove from the policy.\n * @returns A new [[Policy]] clone of the original one, with the Matcher removed.\n * @since Not released yet.\n */\nexport function removeNoneOfMatcherUrl<P extends Policy | ResourcePolicy>(\n  policy: P,\n  matcher: Matcher | Url | UrlString,\n): P {\n  return removeIri(policy, acp.noneOf, matcher);\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Set the Matchers restricting the scope of a given [[Policy]]. If an agent\n * requesting access to a resource is matched by another Matcher, but **also**\n * by any of the \"None Of\" Matchers, they will not be granted access.\n *\n * @param policy The [[Policy]] to which the Matcher should be added.\n * @param matcher The Matcher to set for the Policy.\n * @returns A new [[Policy]] clone of the original one, with the \"None Of\" Matchers replaced.\n * @since Not released yet.\n */\nexport function setNoneOfMatcherUrl<P extends Policy | ResourcePolicy>(\n  policy: P,\n  matcher: Matcher | Url | UrlString,\n): P {\n  return setIri(policy, acp.noneOf, matcher);\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Get the \"None Of\" [[Matcher]]s for the given [[Policy]]\n * @param policy The [[policy]] from which the Matchers should be read.\n * @returns A list of the forbidden [[Matcher]]s\n * @since Not released yet.\n */\nexport function getNoneOfMatcherUrlAll<P extends Policy | ResourcePolicy>(\n  policy: P,\n): UrlString[] {\n  return getIriAll(policy, acp.noneOf);\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Initialise a new, empty [[Matcher]].\n *\n * @param url URL that identifies this [[Matcher]].\n * @since Not released yet.\n */\nexport function createMatcher(url: Url | UrlString): Matcher {\n  const stringUrl = internal_toIriString(url);\n  let matcherThing = createThing({ url: stringUrl });\n  matcherThing = setUrl(matcherThing, rdf.type, acp.Matcher);\n  return matcherThing;\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Initialise a new, empty [[ResourceMatcher]] for the given Resource.\n *\n * @param resourceWithAcr The Resource to which the new Matcher is to apply.\n * @param name Name that identifies this [[Matcher]].\n * @since Not released yet.\n */\nexport function createResourceMatcherFor(\n  resourceWithAcr: WithAccessibleAcr,\n  name: string,\n): ResourceMatcher {\n  const acr = internal_getAcr(resourceWithAcr);\n  const url = new URL(getSourceUrl(acr));\n  url.hash = `#${name}`;\n  let matcherThing = createThing({ url: url.href });\n  matcherThing = setUrl(matcherThing, rdf.type, acp.Matcher);\n  return matcherThing;\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Get the [[Matcher]] with the given URL from an [[SolidDataset]].\n *\n * @param matcherResource The Resource that contains the given [[Matcher]].\n * @param url URL that identifies this [[Matcher]].\n * @returns The requested [[Matcher]], if it exists, or `null` if it does not.\n * @since Not released yet.\n */\nexport function getMatcher(\n  matcherResource: SolidDataset,\n  url: Url | UrlString,\n): Matcher | null {\n  const foundThing = getThing(matcherResource, url);\n  if (foundThing === null || !isMatcher(foundThing)) {\n    return null;\n  }\n  return foundThing;\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Get the [[ResourceMatcher]] with the given name from an Resource's Access Control\n * Resource.\n *\n * @param resourceWithAcr The Resource whose Access Control Resource contains the given [[ResourceMatcher]].\n * @param name Name that identifies this [[ResourceMatcher]].\n * @returns The requested [[ResourceMatcher]], if it exists, or `null` if it does not.\n * @since Not released yet.\n */\nexport function getResourceMatcher(\n  resourceWithAcr: WithAccessibleAcr,\n  name: string,\n): ResourceMatcher | null {\n  const acr = internal_getAcr(resourceWithAcr);\n  const acrUrl = getSourceUrl(acr);\n  const url = new URL(acrUrl);\n  url.hash = `#${name}`;\n  const foundThing = getThing(acr, url.href);\n  if (foundThing === null || !isMatcher(foundThing)) {\n    return null;\n  }\n  return foundThing;\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Gets the [[Matcher]]s from a [[SolidDataset]].\n *\n * @param matcherResource The Resource that contains (zero or more) [[Matcher]]s.\n * @returns The [[Matcher]]s contained in this resource.\n * @since Not released yet.\n */\nexport function getMatcherAll(matcherResource: SolidDataset): Matcher[] {\n  const things = getThingAll(matcherResource);\n  return things.filter(isMatcher);\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Gets the [[ResourceMatcher]]s from a Resource's Access Control Resource.\n *\n * @param resourceWithAcr The Resource whose Access Control Resource contains (zero or more) [[ResourceMatcher]]s.\n * @returns The [[ResourceMatcher]]s contained in this Resource's Access Control Resource.\n * @since Not released yet.\n */\nexport function getResourceMatcherAll(\n  resourceWithAcr: WithAccessibleAcr,\n): ResourceMatcher[] {\n  const acr = internal_getAcr(resourceWithAcr);\n  const things = getThingAll(acr);\n  return things.filter(isMatcher);\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Removes the given [[Matcher]] from the given [[SolidDataset]].\n *\n * @param matcherResource The Resource that contains (zero or more) [[Matcher]]s.\n * @returns A new SolidDataset equal to the given Matcher Resource, but without the given Matcher.\n * @since Not released yet.\n */\nexport function removeMatcher<Dataset extends SolidDataset>(\n  matcherResource: Dataset,\n  matcher: Url | UrlString | Matcher,\n): Dataset {\n  return removeThing(matcherResource, matcher);\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Removes the given [[ResourceMatcher]] from the given Resource's Access Control Resource.\n *\n * @param resourceWithAcr The Resource whose Access Control Resource contains (zero or more) [[ResourceMatcher]]s.\n * @returns A new Resource equal to the given Resource, but without the given Matcher in its ACR.\n * @since Not released yet.\n */\nexport function removeResourceMatcher<ResourceExt extends WithAccessibleAcr>(\n  resourceWithAcr: ResourceExt,\n  matcher: string | Url | UrlString | ResourceMatcher,\n): ResourceExt {\n  const acr = internal_getAcr(resourceWithAcr);\n  let matcherToRemove: UrlString;\n  if (typeof matcher === \"string\") {\n    if (internal_isValidUrl(matcher)) {\n      matcherToRemove = matcher;\n    } else {\n      // If the given Matcher to remove is the name of the Matcher,\n      // resolve it to its full URL — developers usually refer to either the\n      // Matcher itself, or by its name, as they do not have access to the ACR\n      // directly.\n      const matcherUrl = new URL(getSourceUrl(acr));\n      matcherUrl.hash = `#${matcher}`;\n      matcherToRemove = matcherUrl.href;\n    }\n  } else if (isNamedNode(matcher)) {\n    matcherToRemove = internal_toIriString(matcher);\n  } else {\n    matcherToRemove = asUrl(matcher);\n  }\n\n  // Check whether the actual Matcher (i.e. with the Matcher type) exists:\n  const matchingMatcher = getResourceMatcher(\n    resourceWithAcr,\n    new URL(matcherToRemove).hash.substring(1),\n  );\n  if (matchingMatcher === null) {\n    // No such Matcher exists yet, so return the Resource+ACR unchanged:\n    return resourceWithAcr;\n  }\n\n  const updatedAcr = removeThing(acr, matchingMatcher);\n  const updatedResource = internal_setAcr(resourceWithAcr, updatedAcr);\n  return updatedResource;\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Insert the given [[Matcher]] into the given [[SolidDataset]], replacing previous\n * instances of that Matcher.\n *\n * @param matcherResource The Resource that contains (zero or more) [[Matcher]]s.\n * @returns A new SolidDataset equal to the given Matcher Resource, but with the given Matcher.\n * @since Not released yet.\n */\nexport function setMatcher<Dataset extends SolidDataset>(\n  matcherResource: Dataset,\n  matcher: Matcher,\n): Dataset {\n  return setThing(matcherResource, matcher);\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Insert the given [[ResourceMatcher]] into the given Resource's Access Control Resource,\n * replacing previous instances of that Matcher.\n *\n * @param resourceWithAcr The Resource whose Access Control Resource contains (zero or more) [[ResourceMatcher]]s.\n * @returns A new Resource equal to the given Resource, but with the given Matcher in its ACR.\n * @since Not released yet.\n */\nexport function setResourceMatcher<ResourceExt extends WithAccessibleAcr>(\n  resourceWithAcr: ResourceExt,\n  matcher: ResourceMatcher,\n): ResourceExt {\n  const acr = internal_getAcr(resourceWithAcr);\n  const updatedAcr = setThing(acr, matcher);\n  const updatedResource = internal_setAcr(resourceWithAcr, updatedAcr);\n  return updatedResource;\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * List all the agents a [[Matcher]] applies **directly** to. This will not include agents\n * that are matched on a property other than their WebID.\n *\n * @param matcher The matcher from which agents are read.\n * @returns A list of the WebIDs of agents included in the matcher.\n * @since Not released yet.\n */\nexport function getAgentAll(matcher: Matcher): WebId[] {\n  return getIriAll(matcher, acp.agent).filter(\n    (agent: WebId) =>\n      agent !== acp.PublicAgent &&\n      agent !== acp.AuthenticatedAgent &&\n      agent !== acp.CreatorAgent,\n  );\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Overwrite the agents the [[Matcher]] applies to with the provided agents.\n *\n * @param matcher The matcher for which agents are set.\n * @param agent The agent the matcher should apply to.\n * @returns A copy of the input matcher, applying to a different set of agents.\n * @since Not released yet.\n */\nexport function setAgent(matcher: Matcher, agent: WebId): Matcher {\n  // Preserve the special agent classes authenticated and public, which we\n  // don't want to overwrite with this function.\n  const isPublic = hasPublic(matcher);\n  const isAuthenticated = hasAuthenticated(matcher);\n  const isCreator = hasCreator(matcher);\n  let result = setIri(matcher, acp.agent, agent);\n  // Restore public and authenticated\n  if (isPublic) {\n    result = setPublic(result);\n  }\n  if (isAuthenticated) {\n    result = setAuthenticated(result);\n  }\n  if (isCreator) {\n    result = setCreator(result);\n  }\n  return result;\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Apply the [[Matcher]] to an additional agent.\n *\n * @param matcher The [[Matcher]] to be applied to an additional agent.\n * @param agent The agent the [[Matcher]] should apply to.\n * @returns A copy of the [[Matcher]], applying to an additional agent.\n * @since Not released yet.\n */\nexport function addAgent(matcher: Matcher, agent: WebId): Matcher {\n  return addIri(matcher, acp.agent, agent);\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Prevent the [[Matcher]] from applying to a given agent directly. This will not\n * prevent the agent from matching on other properties than its WebID.\n *\n * @param matcher The [[Matcher]] that should no longer apply to a given agent.\n * @param agent The agent the Matcher should no longer apply to.\n * @returns A copy of the Matcher, not applying to the given agent.\n * @since Not released yet.\n */\nexport function removeAgent(matcher: Matcher, agent: WebId): Matcher {\n  return removeIri(matcher, acp.agent, agent);\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Check if the Matcher applies to any agent.\n *\n * @param matcher The Matcher checked for public access.\n * @returns Whether the Matcher applies to any agent or not.\n * @since Not released yet.\n */\nexport function hasPublic(matcher: Matcher): boolean {\n  return (\n    getIriAll(matcher, acp.agent).filter((agent) => agent === acp.PublicAgent)\n      .length > 0\n  );\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Set a Matcher to apply to any Agent.\n *\n * @param matcher The Matcher being modified.\n * @returns A copy of the Matcher, updated to apply to any agent.\n * @since Not released yet.\n */\nexport function setPublic(matcher: Matcher): Matcher {\n  // The second argument should not be part of the function signature,\n  // so it's not in the parameter list:\n  // eslint-disable-next-line prefer-rest-params\n  if (typeof arguments === \"object\" && typeof arguments[1] === \"boolean\") {\n    throw new Error(\n      \"The function `setPublic` no longer takes a second parameter. It is now used together with `removePublic` instead.\",\n    );\n  }\n  return addIri(matcher, acp.agent, acp.PublicAgent);\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Set a Matcher to no longer apply to any Agent.\n *\n * @param matcher The Matcher being modified.\n * @returns A copy of the Matcher, updated to no longer apply to any agent.\n * @since Not released yet.\n */\nexport function removePublic(matcher: Matcher): Matcher {\n  return removeIri(matcher, acp.agent, acp.PublicAgent);\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Check if the Matcher applies to any authenticated agent.\n *\n * @param matcher The Matcher checked for authenticated access.\n * @returns Whether the Matcher applies to any authenticated agent or not.\n * @since Not released yet.\n */\nexport function hasAuthenticated(matcher: Matcher): boolean {\n  return (\n    getIriAll(matcher, acp.agent).filter(\n      (agent) => agent === acp.AuthenticatedAgent,\n    ).length > 0\n  );\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Set a Matcher to apply to any authenticated Agent.\n *\n * @param matcher The Matcher being modified.\n * @returns A copy of the Matcher, updated to apply to any authenticated Agent.\n * @since Not released yet.\n */\nexport function setAuthenticated(matcher: Matcher): Matcher {\n  // The second argument should not be part of the function signature,\n  // so it's not in the parameter list:\n  // eslint-disable-next-line prefer-rest-params\n  if (typeof arguments === \"object\" && typeof arguments[1] === \"boolean\") {\n    throw new Error(\n      \"The function `setAuthenticated` no longer takes a second parameter. It is now used together with `removeAuthenticated` instead.\",\n    );\n  }\n  return addIri(matcher, acp.agent, acp.AuthenticatedAgent);\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Set a Matcher to no longer apply to any authenticated Agent.\n *\n * @param matcher The Matcher being modified.\n * @returns A copy of the Matcher, updated to apply/not apply to any authenticated agent.\n * @since Not released yet.\n */\nexport function removeAuthenticated(matcher: Matcher): Matcher {\n  return removeIri(matcher, acp.agent, acp.AuthenticatedAgent);\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Check if the Matcher applies to the creator of the Resource.\n *\n * @param matcher The Matcher checked for authenticated access.\n * @returns Whether the Matcher applies to the creator of the Resource or not.\n * @since Not released yet.\n */\nexport function hasCreator(matcher: Matcher): boolean {\n  return (\n    getIriAll(matcher, acp.agent).filter((agent) => agent === acp.CreatorAgent)\n      .length > 0\n  );\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Set a Matcher to apply to the creator of a Resource.\n *\n * @param matcher The Matcher being modified.\n * @returns A copy of the Matcher, updated to apply to the creator of a Resource.\n * @since Not released yet.\n */\nexport function setCreator(matcher: Matcher): Matcher {\n  // The second argument should not be part of the function signature,\n  // so it's not in the parameter list:\n  // eslint-disable-next-line prefer-rest-params\n  if (typeof arguments === \"object\" && typeof arguments[1] === \"boolean\") {\n    throw new Error(\n      \"The function `setCreator` no longer takes a second parameter. It is now used together with `removeCreator` instead.\",\n    );\n  }\n  return addIri(matcher, acp.agent, acp.CreatorAgent);\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Set a Matcher to no longer apply to the creator of a Resource.\n *\n * @param matcher The Matcher being modified.\n * @returns A copy of the Matcher, updated to apply/not apply to the creator of a Resource.\n * @since Not released yet.\n */\nexport function removeCreator(matcher: Matcher): Matcher {\n  return removeIri(matcher, acp.agent, acp.CreatorAgent);\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * List all the clients a [[Matcher]] applies **directly** to. This will not include\n * specific client classes, such as public clients.\n *\n * @param matcher The Matcher from which clients are read.\n * @returns A list of the WebIDs of clients included in the Matcher.\n * @since Not released yet.\n */\nexport function getClientAll(matcher: Matcher): WebId[] {\n  return getIriAll(matcher, acp.client)\n    .filter((client: WebId) => client !== solid.PublicOidcClient)\n    .concat(getStringNoLocaleAll(matcher, acp.client));\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Overwrite the clients the [[Matcher]] applies to with the provided Client.\n *\n * @param matcher The Matcher for which clients are set.\n * @param client The Client the Matcher should apply to.\n * @returns A copy of the input Matcher, applying to a different set of Clients.\n */\nexport function setClient(matcher: Matcher, client: Url | string): Matcher {\n  // Preserve the special \"any client\" class, which we\n  // don't want to overwrite with this function.\n  const anyClientEnabled = hasAnyClient(matcher);\n  let result = setIri(matcher, acp.client, client);\n  // Restore the \"any client\" class\n  if (anyClientEnabled) {\n    result = setAnyClient(result);\n  }\n  return result;\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Apply the [[Matcher]] to an additional Client.\n *\n * @param matcher The [[Matcher]] to be applied to an additional Client.\n * @param client The Client the [[Matcher]] should apply to.\n * @returns A copy of the [[Matcher]], applying to an additional Client.\n * @since Not released yet.\n */\nexport function addClient(matcher: Matcher, client: Url | string): Matcher {\n  if (!internal_isValidUrl(client)) {\n    return addStringNoLocale(matcher, acp.client, client);\n  }\n  return addIri(matcher, acp.client, client);\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Prevent the [[Matcher]] from applying to a given Client directly.\n *\n * @param matcher The [[Matcher]] that should no longer apply to a given Client.\n * @param client The Client the Matcher should no longer apply to.\n * @returns A copy of the Matcher, not applying to the given Client.\n * @since Not released yet.\n */\nexport function removeClient(matcher: Matcher, client: Url | string): Matcher {\n  if (!internal_isValidUrl(client)) {\n    return removeStringNoLocale(matcher, acp.client, client);\n  }\n  return removeIri(matcher, acp.client, client);\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Check if the Matcher applies to any client, i.e. all the applications\n * regardless of their identifier.\n *\n * @param matcher The Matcher checked for authenticated access.\n * @returns Whether the Matcher applies to public clients.\n * @since Not released yet.\n * @deprecated\n */\nexport function hasAnyClient(matcher: Matcher): boolean {\n  return (\n    getIriAll(matcher, acp.client).filter(\n      (client) => client === solid.PublicOidcClient,\n    ).length > 0\n  );\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Make the [[Matcher]] apply to any client application.\n *\n * @param matcher The Matcher for which clients are set.\n * @returns A copy of the Matcher, updated to apply to any client\n * @since Not released yet.\n * @deprecated\n */\nexport function setAnyClient(matcher: Matcher): Matcher {\n  return addIri(matcher, acp.client, solid.PublicOidcClient);\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Make the [[Matcher]] no longer apply to any client application.\n *\n * @param matcher The Matcher for which clients are set.\n * @returns A copy of the Matcher, updated to no longer apply to any client\n * @since Not released yet.\n * @deprecated\n */\nexport function removeAnyClient(matcher: Matcher): Matcher {\n  return removeIri(matcher, acp.client, solid.PublicOidcClient);\n}\n\n/**\n * Gets a human-readable representation of the given [[Matcher]] to aid debugging.\n *\n * Note that changes to the exact format of the return value are not considered a breaking change;\n * it is intended to aid in debugging, not as a serialisation method that can be reliably parsed.\n *\n * @param matcher The Matcher to get a human-readable representation of.\n * @since Not released yet.\n * @deprecated\n */\nexport function matcherAsMarkdown(matcher: Matcher): string {\n  let markdown = `## Matcher: ${asUrl(matcher)}\\n\\n`;\n\n  let targetEnumeration = \"\";\n  if (hasPublic(matcher)) {\n    targetEnumeration += \"- Everyone\\n\";\n  }\n  if (hasAuthenticated(matcher)) {\n    targetEnumeration += \"- All authenticated agents\\n\";\n  }\n  if (hasCreator(matcher)) {\n    targetEnumeration += \"- The creator of this resource\\n\";\n  }\n  if (hasAnyClient(matcher)) {\n    targetEnumeration += \"- Users of any client application\\n\";\n  }\n  const targetAgents = getAgentAll(matcher);\n  if (targetAgents.length > 0) {\n    targetEnumeration += \"- The following agents:\\n  - \";\n    targetEnumeration += `${targetAgents.join(\"\\n  - \")}\\n`;\n  }\n  const targetClients = getClientAll(matcher);\n  if (targetClients.length > 0) {\n    targetEnumeration += \"- Users of the following client applications:\\n  - \";\n    targetEnumeration += `${targetClients.join(\"\\n  - \")}\\n`;\n  }\n\n  markdown +=\n    targetEnumeration.length > 0\n      ? `This Matcher matches:\\n${targetEnumeration}`\n      : \"<empty>\\n\";\n\n  return markdown;\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { AccessModes, WebId } from \"../../interfaces\";\nimport type { WithAccessibleAcr } from \"../acp\";\nimport { createThing, getThing } from \"../..\";\nimport { internal_getAcr as getAccessControlResource } from \"../control.internal\";\nimport { getAgentAccess } from \"./getAgentAccess\";\nimport { setDefaultAgentMatcherPolicyMatcherThingIfNotExist } from \"../internal/setDefaultAgentMatcherPolicyMatcherThingIfNotExist\";\nimport type { DefaultAccessControlName } from \"../internal/getDefaultAccessControlUrl\";\nimport {\n  DEFAULT_ACCESS_CONTROL,\n  DEFAULT_ACR_ACCESS_CONTROL,\n} from \"../internal/getDefaultAccessControlUrl\";\nimport { getDefaultAgentMatcherPolicyMatcherUrl } from \"../internal/getDefaultAgentMatcherPolicyMatcherUrl\";\nimport { addAgent, removeAgent } from \"../matcher\";\nimport { setAccessControlResourceThing } from \"../internal/setAccessControlResourceThing\";\n\n/** @hidden */\nfunction setAgentAccessMode<T extends WithAccessibleAcr>(\n  resourceWithAcr: T,\n  webId: WebId,\n  name: DefaultAccessControlName,\n  mode: keyof AccessModes,\n  operation: \"add\" | \"remove\",\n): T {\n  const matcherUrl = getDefaultAgentMatcherPolicyMatcherUrl(\n    resourceWithAcr,\n    name,\n    mode,\n  );\n\n  // Set default Matcher if not exists\n  const resourceWithDefaultAgentMatcher =\n    setDefaultAgentMatcherPolicyMatcherThingIfNotExist(\n      resourceWithAcr,\n      name,\n      mode,\n    );\n\n  const defaultAgentMatcherThing =\n    getThing(\n      getAccessControlResource(resourceWithDefaultAgentMatcher),\n      matcherUrl,\n    ) ?? createThing({ url: matcherUrl });\n\n  return setAccessControlResourceThing<T>(\n    resourceWithDefaultAgentMatcher,\n    operation === \"add\"\n      ? addAgent(defaultAgentMatcherThing, webId)\n      : removeAgent(defaultAgentMatcherThing, webId),\n  );\n}\n\n/**\n * Set access for a given Agent.\n *\n * @param resourceWithAcr URL of the Resource you want to set the access for.\n * @param webId WebID of the Agent you want to set the access for.\n * @param access Access Modes you want to set for the agent.\n * @since 1.16.0\n */\nexport async function setAgentAccess<T extends WithAccessibleAcr>(\n  resourceWithAcr: T,\n  webId: WebId,\n  access: Partial<AccessModes>,\n): Promise<T> {\n  const agentAccessModes = await getAgentAccess(resourceWithAcr, webId);\n\n  // Add Agent to Default Matchers (including member) if access mode is different from what exists\n  if (\n    typeof access.read === \"boolean\" &&\n    agentAccessModes.read !== access.read\n  ) {\n    resourceWithAcr = setAgentAccessMode(\n      resourceWithAcr,\n      webId,\n      DEFAULT_ACCESS_CONTROL,\n      \"read\",\n      access.read ? \"add\" : \"remove\",\n    );\n  }\n  if (\n    typeof access.append === \"boolean\" &&\n    agentAccessModes.append !== access.append\n  ) {\n    resourceWithAcr = setAgentAccessMode(\n      resourceWithAcr,\n      webId,\n      DEFAULT_ACCESS_CONTROL,\n      \"append\",\n      access.append ? \"add\" : \"remove\",\n    );\n  }\n  if (\n    typeof access.write === \"boolean\" &&\n    agentAccessModes.write !== access.write\n  ) {\n    resourceWithAcr = setAgentAccessMode(\n      resourceWithAcr,\n      webId,\n      DEFAULT_ACCESS_CONTROL,\n      \"write\",\n      access.write ? \"add\" : \"remove\",\n    );\n  }\n  if (\n    typeof access.controlRead === \"boolean\" &&\n    agentAccessModes.controlRead !== access.controlRead\n  ) {\n    resourceWithAcr = setAgentAccessMode(\n      resourceWithAcr,\n      webId,\n      DEFAULT_ACR_ACCESS_CONTROL,\n      \"controlRead\",\n      access.controlRead ? \"add\" : \"remove\",\n    );\n  }\n  if (\n    typeof access.controlWrite === \"boolean\" &&\n    agentAccessModes.controlWrite !== access.controlWrite\n  ) {\n    resourceWithAcr = setAgentAccessMode(\n      resourceWithAcr,\n      webId,\n      DEFAULT_ACR_ACCESS_CONTROL,\n      \"controlWrite\",\n      access.controlWrite ? \"add\" : \"remove\",\n    );\n  }\n\n  return resourceWithAcr;\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { AccessModes, UrlString, WebId } from \"../interfaces\";\nimport type { DefaultOptions } from \"../acp/type/DefaultOptions\";\nimport { getResourceInfo } from \"../resource/resource\";\nimport { setAgentAccess as setAgentAccessAcp } from \"../acp/util/setAgentAccess\";\nimport type { WacAccess } from \"../access/wac\";\nimport {\n  setAgentResourceAccess as setAgentAccessWac,\n  getAgentAccess as getAgentAccessWac,\n} from \"../access/wac\";\nimport { getResourceAcr } from \"../acp/util/getResourceAcr\";\nimport { saveAcrFor } from \"../acp/acp\";\nimport { getAgentAccess } from \"./getAgentAccess\";\n\n/**\n * Set access to a resource for a given Agent.\n *\n * This function works with Solid Pods that implement either the Web Access\n * Control spec or the Access Control Policies proposal, with some caveats:\n *\n * - If access to the given Resource has been set using anything other than the\n *   functions in this module, it is possible that it has been set in a way that\n *   prevents this function from reliably setting access.\n * - It will only set access explicitly for the given Agent. In other words,\n *   additional restrictions could be present that further restrict or loosen\n *   what access the given Agent has in particular circumstances.\n * - The provided access will only apply to the given Resource. In other words,\n *   if the Resource is a Container, the configured Access will not apply to\n *   contained Resources.\n * - If the current user does not have permission to view or change access for\n *   the given Resource, this function will resolve to `null`.\n *\n * Additionally, two caveats apply to users with a Pod server that uses WAC:\n * - If the Resource did not have an ACL yet, a new one will be initialised.\n *   This means that changes to the ACL of a parent Container can no longer\n *   affect access people have to this Resource, although existing access will\n *   be preserved.\n * - Setting different values for `controlRead` and `controlWrite` is not\n *   supported, and **will throw an error**. If you expect (some of) your users\n *   to have Pods implementing WAC, be sure to pass the same value for both.\n *\n * @param resourceUrl URL of the Resource you want to set access for.\n * @param webId WebID of the Agent you want to set access for.\n * @param access The Access Modes to add (true) or remove (false).\n * @param options Default Options such as a fetch function.\n * @since 1.19.0\n */\nexport async function setAgentAccess(\n  resourceUrl: UrlString,\n  webId: WebId,\n  access: Partial<AccessModes>,\n  options?: DefaultOptions,\n): Promise<AccessModes | null> {\n  // TODO: Change the standard getAgentAccess signatures to all take a  T extends WithAcl\n  const resourceInfo = await getResourceInfo(resourceUrl, options);\n  const acr = await getResourceAcr(resourceInfo, options);\n\n  if (acr === null) {\n    await setAgentAccessWac(resourceInfo, webId, access as WacAccess, options);\n    return getAgentAccessWac(resourceInfo, webId, options);\n  }\n\n  // TODO: Make sure both setAgentAccessWac and setAgentAccessAcp don't save within the function, expose one standard saveAclFor function that is universal.\n  try {\n    await saveAcrFor(await setAgentAccessAcp(acr, webId, access), options);\n    return await getAgentAccess(resourceUrl, webId, options);\n  } catch (e) {\n    return null;\n  }\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { AccessModes } from \"../../interfaces\";\nimport type { WithAccessibleAcr } from \"../acp\";\nimport { ACP } from \"../constants\";\nimport { setAgentAccess } from \"./setAgentAccess\";\n\n/**\n * Set access for the public.\n *\n * @param resourceWithAcr URL of the Resource you want to read the access for.\n * @param access Access Modes you want to set for the agent.\n * @since 1.16.0\n */\nexport async function setPublicAccess<T extends WithAccessibleAcr>(\n  resourceWithAcr: T,\n  access: Partial<AccessModes>,\n): Promise<T> {\n  return setAgentAccess(resourceWithAcr, ACP.PublicAgent, access);\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { AccessModes, UrlString } from \"../interfaces\";\nimport type { DefaultOptions } from \"../acp/type/DefaultOptions\";\nimport { getResourceInfo } from \"../resource/resource\";\nimport { setPublicAccess as setPublicAccessAcp } from \"../acp/util/setPublicAccess\";\nimport type { WacAccess } from \"../access/wac\";\nimport {\n  setPublicResourceAccess as setPublicAccessWac,\n  getPublicAccess as getPublicAccessWac,\n} from \"../access/wac\";\nimport { getResourceAcr } from \"../acp/util/getResourceAcr\";\nimport { saveAcrFor } from \"../acp/acp\";\nimport { getPublicAccess as getPublicAccessAcp } from \"./getPublicAccess\";\n\n/**\n * Set access to a resource for the public.\n *\n * This function works with Solid Pods that implement either the Web Access\n * Control spec or the Access Control Policies proposal, with some caveats:\n *\n * - If access to the given Resource has been set using anything other than the\n *   functions in this module, it is possible that it has been set in a way that\n *   prevents this function from reliably setting access.\n * - It will only set access explicitly for the given Agent. In other words,\n *   additional restrictions could be present that further restrict or loosen\n *   what access the given Agent has in particular circumstances.\n * - The provided access will only apply to the given Resource. In other words,\n *   if the Resource is a Container, the configured Access will not apply to\n *   contained Resources.\n * - If the current user does not have permission to view or change access for\n *   the given Resource, this function will resolve to `null`.\n *\n * Additionally, two caveats apply to users with a Pod server that uses WAC:\n * - If the Resource did not have an ACL yet, a new one will be initialised.\n *   This means that changes to the ACL of a parent Container can no longer\n *   affect access people have to this Resource, although existing access will\n *   be preserved.\n * - Setting different values for `controlRead` and `controlWrite` is not\n *   supported, and **will throw an error**. If you expect (some of) your users\n *   to have Pods implementing WAC, be sure to pass the same value for both.\n *\n * @param resourceUrl URL of the Resource you want to set access for.\n * @param access The Access Modes to add (true) or remove (false).\n * @param options Default Options such as a fetch function.\n * @since 1.19.0\n */\nexport async function setPublicAccess(\n  resourceUrl: UrlString,\n  access: Partial<AccessModes>,\n  options?: DefaultOptions,\n): Promise<AccessModes | null> {\n  const resourceInfo = await getResourceInfo(resourceUrl, options);\n  const acr = await getResourceAcr(resourceInfo, options);\n\n  if (acr === null) {\n    await setPublicAccessWac(resourceInfo, access as WacAccess, options);\n    return getPublicAccessWac(resourceInfo, options);\n  }\n\n  try {\n    await saveAcrFor(await setPublicAccessAcp(acr, access), options);\n    return await getPublicAccessAcp(resourceUrl, options);\n  } catch (e) {\n    return null;\n  }\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\n/**\n * :::{admonition} Experimental API\n * :class: important\n *\n * This API is still experimental, and subject to change. It builds on top of\n * both ACP and WAC, aiming at being adaptable to any Access Control system that\n * may be implemented in Solid. That is why it is purely Resource-centric: the\n * library discovers metadata associated with the Resource itself, and calls the\n * appropriate underlying API to deal with the Access Control in place for the\n * target Resource.\n *\n * As it is still under development, the following export is *only* intended for\n * experimentation by early adopters, and is not recommended for production\n * applications.\n *\n * For more information see: [Tutorial: Managing\n * Access](https://docs.inrupt.com/developer-tools/javascript/client-libraries/tutorial/manage-access/)\n * :::\n *\n * This module can be imported as an object from the main package, which results\n * in tree-shaking not being supported (so all the exported APIs will likely end\n * up in your bundle). This import style is used for environments such as nextjs\n * or create-react-app.\n *\n * ```typescript\n * import { universalAccess } from \"@inrupt/solid-client\";\n * ```\n *\n * Alternatively, if your environment supports [export\n * maps](https://nodejs.org/dist/latest-v16.x/docs/api/packages.html#exports),\n * then you can import directly:\n *\n * ```typescript\n * import * as universalAccess from \"@inrupt/solid-client/universal\";\n * ```\n *\n * If you're using Typescript, and receive errors about type definitions not\n * being found, please see this\n * [documentation](https://www.typescriptlang.org/docs/handbook/esm-node.html)\n *\n * @packageDocumentation\n * @module universalAccess\n */\n\nexport { getAclServerResourceInfo } from \"./getAclServerResourceInfo\";\nexport { getAgentAccess } from \"./getAgentAccess\";\nexport { getAgentAccessAll } from \"./getAgentAccessAll\";\nexport { getPublicAccess } from \"./getPublicAccess\";\nexport { setAgentAccess } from \"./setAgentAccess\";\nexport { setPublicAccess } from \"./setPublicAccess\";\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { Url, UrlString } from \"../../interfaces\";\nimport type { WithAccessibleAcr } from \"../acp\";\nimport { ACP } from \"../constants\";\nimport { buildThing } from \"../../thing/build\";\nimport { getDefaultAccessControlThing } from \"../internal/getDefaultAccessControlThing\";\nimport { DEFAULT_MEMBER_ACR_ACCESS_CONTROL } from \"../internal/getDefaultAccessControlUrl\";\nimport { setAccessControlResourceThing } from \"../internal/setAccessControlResourceThing\";\nimport { setDefaultAccessControlThingIfNotExist } from \"../internal/setDefaultAccessControlThingIfNotExist\";\n\n/**\n * ```{note}\n * The ACP specification is a draft. As such, this function is experimental and\n * subject to change, even in a non-major release.\n * See also: https://solid.github.io/authorization-panel/acp-specification/\n * ```\n *\n * Add a policy applying to the ACRs of the given resource's children.\n *\n * @param resourceWithAcr The resource for which to add the URL of a policy\n * applying to its children's access control resources.\n * @param policyUrl A Policy URL.\n * @returns The resource with its ammended access control resource.\n * @since 1.16.1\n */\nexport function addMemberAcrPolicyUrl<T extends WithAccessibleAcr>(\n  resourceWithAcr: T,\n  policyUrl: Url | UrlString,\n): T {\n  const resourceWithAcrContainingDefaultAccessControl =\n    setDefaultAccessControlThingIfNotExist(\n      resourceWithAcr,\n      DEFAULT_MEMBER_ACR_ACCESS_CONTROL,\n    );\n\n  const defaultAccessControlThing = getDefaultAccessControlThing(\n    resourceWithAcrContainingDefaultAccessControl,\n    DEFAULT_MEMBER_ACR_ACCESS_CONTROL,\n  );\n\n  return setAccessControlResourceThing(\n    resourceWithAcrContainingDefaultAccessControl,\n    buildThing(defaultAccessControlThing).addUrl(ACP.access, policyUrl).build(),\n  );\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { Url, UrlString } from \"../../interfaces\";\nimport type { WithAccessibleAcr } from \"../acp\";\nimport { ACP } from \"../constants\";\nimport { buildThing } from \"../../thing/build\";\nimport { getDefaultAccessControlThing } from \"../internal/getDefaultAccessControlThing\";\nimport { DEFAULT_MEMBER_ACCESS_CONTROL } from \"../internal/getDefaultAccessControlUrl\";\nimport { setAccessControlResourceThing } from \"../internal/setAccessControlResourceThing\";\nimport { setDefaultAccessControlThingIfNotExist } from \"../internal/setDefaultAccessControlThingIfNotExist\";\n\n/**\n * ```{note}\n * The ACP specification is a draft. As such, this function is experimental and\n * subject to change, even in a non-major release.\n * See also: https://solid.github.io/authorization-panel/acp-specification/\n * ```\n *\n * Add a policy applying to the given resource's children.\n *\n * @param resourceWithAcr The resource for which to add the URL of a policy\n * applying to its children.\n * @param policyUrl A Policy URL.\n * @returns The resource with its ammended access control resource.\n * @since 1.16.1\n */\nexport function addMemberPolicyUrl<T extends WithAccessibleAcr>(\n  resourceWithAcr: T,\n  policyUrl: Url | UrlString,\n): T {\n  const resourceWithAcrContainingDefaultMemberAccessControl =\n    setDefaultAccessControlThingIfNotExist(\n      resourceWithAcr,\n      DEFAULT_MEMBER_ACCESS_CONTROL,\n    );\n  const defaultMemberAccessControlThing = getDefaultAccessControlThing(\n    resourceWithAcrContainingDefaultMemberAccessControl,\n    DEFAULT_MEMBER_ACCESS_CONTROL,\n  );\n\n  return setAccessControlResourceThing(\n    resourceWithAcrContainingDefaultMemberAccessControl,\n    buildThing(defaultMemberAccessControlThing)\n      .addUrl(ACP.apply, policyUrl)\n      .build(),\n  );\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport { ACP } from \"../constants\";\nimport type { UrlString } from \"../../interfaces\";\nimport { getIriAll } from \"../../thing/get\";\nimport type { WithAccessibleAcr } from \"../acp\";\nimport { getAccessControlResourceThing } from \"../internal/getAccessControlResourceThing\";\n\n/**\n * ```{note}\n * The ACP specification is a draft. As such, this function is experimental and\n * subject to change, even in a non-major release.\n * See also: https://solid.github.io/authorization-panel/acp-specification/\n * ```\n *\n * Get the URL of all member access controls linked to the given resource's ACR.\n *\n * @param resourceWithAcr The resource for which to retrieve URLs of access\n * controls inherited by its children.\n * @returns Access Control URL array\n * @since 1.6.0\n */\nexport function getMemberAccessControlUrlAll(\n  resourceWithAcr: WithAccessibleAcr,\n): UrlString[] {\n  const acrThing = getAccessControlResourceThing(resourceWithAcr);\n\n  if (acrThing === null) {\n    return [];\n  }\n\n  return getIriAll(acrThing, ACP.memberAccessControl);\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { UrlString } from \"../../interfaces\";\nimport type { WithAccessibleAcr } from \"../acp\";\nimport { ACP } from \"../constants\";\nimport { getMemberAccessControlUrlAll } from \"../accessControl/getMemberAccessControlUrlAll\";\nimport { getPolicyUrls } from \"../internal/getPolicyUrls\";\n\n/**\n * ```{note}\n * The ACP specification is a draft. As such, this function is experimental and\n * subject to change, even in a non-major release.\n * See also: https://solid.github.io/authorization-panel/acp-specification/\n * ```\n *\n * Get the URLs of policies applying to the ACRs of the given resource's\n * children.\n *\n * @param resourceWithAcr The resource for which to retrieve URLs of policies\n * applying to its children's access control resources.\n * @returns Policy URL array.\n * @since 1.16.1\n */\nexport function getMemberAcrPolicyUrlAll<T extends WithAccessibleAcr>(\n  resourceWithAcr: T,\n): UrlString[] {\n  return getPolicyUrls(\n    resourceWithAcr,\n    getMemberAccessControlUrlAll(resourceWithAcr),\n    ACP.access,\n  );\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { UrlString } from \"../../interfaces\";\nimport type { WithAccessibleAcr } from \"../acp\";\nimport { ACP } from \"../constants\";\nimport { getMemberAccessControlUrlAll } from \"../accessControl/getMemberAccessControlUrlAll\";\nimport { getPolicyUrls } from \"../internal/getPolicyUrls\";\n\n/**\n * ```{note}\n * The ACP specification is a draft. As such, this function is experimental and\n * subject to change, even in a non-major release.\n * See also: https://solid.github.io/authorization-panel/acp-specification/\n * ```\n *\n * Get the URLs of policies applying to the given resource's children.\n *\n * @param resourceWithAcr The resource for which to retrieve URLs policies\n * applying to its children.\n * @returns Policy URL array.\n * @since 1.16.1\n */\nexport function getMemberPolicyUrlAll<T extends WithAccessibleAcr>(\n  resourceWithAcr: T,\n): UrlString[] {\n  return getPolicyUrls(\n    resourceWithAcr,\n    getMemberAccessControlUrlAll(resourceWithAcr),\n    ACP.apply,\n  );\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { Url, UrlString } from \"../../interfaces\";\nimport type { WithAccessibleAcr } from \"../acp\";\nimport { ACP } from \"../constants\";\nimport { getDefaultAccessControlThing } from \"../internal/getDefaultAccessControlThing\";\nimport { DEFAULT_ACR_ACCESS_CONTROL } from \"../internal/getDefaultAccessControlUrl\";\nimport { setAccessControlResourceThing } from \"../internal/setAccessControlResourceThing\";\nimport { removeIri } from \"../../thing/remove\";\n\n/**\n * ```{note}\n * The ACP specification is a draft. As such, this function is experimental and\n * subject to change, even in a non-major release.\n * See also: https://solid.github.io/authorization-panel/acp-specification/\n * ```\n *\n * Remove a policy applying to the ACR of the given resource.\n *\n * @param resourceWithAcr The resource for which to remove the URL of a policy\n * applying to its access control resource.\n * @param policyUrl A Policy URL.\n * @returns The resource with its ammended access control resource.\n * @since 1.16.1\n */\nexport function removeAcrPolicyUrl<T extends WithAccessibleAcr>(\n  resourceWithAcr: T,\n  policyUrl: Url | UrlString,\n): T {\n  const defaultAccessControlThing = getDefaultAccessControlThing(\n    resourceWithAcr,\n    DEFAULT_ACR_ACCESS_CONTROL,\n  );\n\n  return setAccessControlResourceThing(\n    resourceWithAcr,\n    removeIri(defaultAccessControlThing, ACP.access, policyUrl),\n  );\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { Url, UrlString } from \"../../interfaces\";\nimport type { WithAccessibleAcr } from \"../acp\";\nimport { ACP } from \"../constants\";\nimport { getDefaultAccessControlThing } from \"../internal/getDefaultAccessControlThing\";\nimport { DEFAULT_MEMBER_ACR_ACCESS_CONTROL } from \"../internal/getDefaultAccessControlUrl\";\nimport { setAccessControlResourceThing } from \"../internal/setAccessControlResourceThing\";\nimport { removeIri } from \"../../thing/remove\";\n\n/**\n * ```{note}\n * The ACP specification is a draft. As such, this function is experimental and\n * subject to change, even in a non-major release.\n * See also: https://solid.github.io/authorization-panel/acp-specification/\n * ```\n *\n * Remove a policy applying to the ACRs of the given resource's children.\n *\n * @param resourceWithAcr The resource for which to remove the URL of a policy\n * applying to its children's access control resources.\n * @param policyUrl A Policy URL.\n * @returns The resource with its ammended access control resource.\n * @since 1.16.1\n */\nexport function removeMemberAcrPolicyUrl<T extends WithAccessibleAcr>(\n  resourceWithAcr: T,\n  policyUrl: Url | UrlString,\n): T {\n  const defaultAccessControlThing = getDefaultAccessControlThing(\n    resourceWithAcr,\n    DEFAULT_MEMBER_ACR_ACCESS_CONTROL,\n  );\n\n  return setAccessControlResourceThing(\n    resourceWithAcr,\n    removeIri(defaultAccessControlThing, ACP.access, policyUrl),\n  );\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { Url, UrlString } from \"../../interfaces\";\nimport type { WithAccessibleAcr } from \"../acp\";\nimport { ACP } from \"../constants\";\nimport { getDefaultAccessControlThing } from \"../internal/getDefaultAccessControlThing\";\nimport { DEFAULT_MEMBER_ACCESS_CONTROL } from \"../internal/getDefaultAccessControlUrl\";\nimport { setAccessControlResourceThing } from \"../internal/setAccessControlResourceThing\";\nimport { removeIri } from \"../../thing/remove\";\n\n/**\n * ```{note}\n * The ACP specification is a draft. As such, this function is experimental and\n * subject to change, even in a non-major release.\n * See also: https://solid.github.io/authorization-panel/acp-specification/\n * ```\n *\n * Remove a policy applying to the given resource's children.\n *\n * @param resourceWithAcr The resource for which to remove the URL of a policy\n * applying to its children.\n * @param policyUrl A Policy URL.\n * @returns The resource with its ammended access control resource.\n * @since 1.16.1\n */\nexport function removeMemberPolicyUrl<T extends WithAccessibleAcr>(\n  resourceWithAcr: T,\n  policyUrl: Url | UrlString,\n): T {\n  const defaultAccessControlThing = getDefaultAccessControlThing(\n    resourceWithAcr,\n    DEFAULT_MEMBER_ACCESS_CONTROL,\n  );\n\n  return setAccessControlResourceThing(\n    resourceWithAcr,\n    removeIri(defaultAccessControlThing, ACP.apply, policyUrl),\n  );\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { Url, UrlString } from \"../../interfaces\";\nimport type { WithAccessibleAcr } from \"../acp\";\nimport { ACP } from \"../constants\";\nimport { getDefaultAccessControlThing } from \"../internal/getDefaultAccessControlThing\";\nimport { DEFAULT_ACCESS_CONTROL } from \"../internal/getDefaultAccessControlUrl\";\nimport { setAccessControlResourceThing } from \"../internal/setAccessControlResourceThing\";\nimport { removeIri } from \"../../thing/remove\";\n\n/**\n * ```{note}\n * The ACP specification is a draft. As such, this function is experimental and\n * subject to change, even in a non-major release.\n * See also: https://solid.github.io/authorization-panel/acp-specification/\n * ```\n *\n * Remove a policy applying to the given resource.\n *\n * @param resourceWithAcr The resource for which to remove the URL of a policy\n * applying to it.\n * @param policyUrl A Policy URL.\n * @returns The resource with its ammended access control resource.\n * @since 1.16.1\n */\nexport function removePolicyUrl<T extends WithAccessibleAcr>(\n  resourceWithAcr: T,\n  policyUrl: Url | UrlString,\n): T {\n  const defaultAccessControlThing = getDefaultAccessControlThing(\n    resourceWithAcr,\n    DEFAULT_ACCESS_CONTROL,\n  );\n\n  return setAccessControlResourceThing(\n    resourceWithAcr,\n    removeIri(defaultAccessControlThing, ACP.apply, policyUrl),\n  );\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { ThingPersisted } from \"../../interfaces\";\nimport type { WithAccessibleAcr } from \"../acp\";\nimport { setAccessControlResourceThing } from \"../internal/setAccessControlResourceThing\";\n\n/**\n * ```{note}\n * The ACP specification is a draft. As such, this function is experimental and\n * subject to change, even in a non-major release.\n * See also: https://solid.github.io/authorization-panel/acp-specification/\n * ```\n *\n * Insert the given [[ResourcePolicy]] into the given Resource's Acccess Control\n * Resource, replacing previous instances of that Policy.\n *\n * @param resourceWithAcr The Resource whose Access Control Resource contains Access Policies.\n * @param policy The Policy to insert into the Resource's Access Control Resource.\n * @returns A new Resource equal to the given Resource, but with the given Policy in its Access Control Resource.\n * @since 1.18.0\n */\nexport function setResourcePolicy<T extends WithAccessibleAcr>(\n  resourceWithAcr: T,\n  policy: ThingPersisted,\n): T {\n  return setAccessControlResourceThing(resourceWithAcr, policy);\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport { internal_accessModeIriStrings } from \"../acl/acl.internal\";\nimport { acp, rdf } from \"../constants\";\nimport { internal_isValidUrl, isNamedNode } from \"../datatypes\";\nimport type {\n  SolidDataset,\n  ThingPersisted,\n  Url,\n  UrlString,\n} from \"../interfaces\";\nimport { internal_toIriString } from \"../interfaces.internal\";\nimport { getSourceUrl } from \"../resource/resource\";\nimport { addIri } from \"../thing/add\";\nimport { getIriAll } from \"../thing/get\";\nimport { removeAll } from \"../thing/remove\";\nimport { setUrl } from \"../thing/set\";\nimport {\n  asUrl,\n  createThing,\n  getThing,\n  getThingAll,\n  isThingLocal,\n  removeThing,\n  setThing,\n} from \"../thing/thing\";\nimport type { WithAccessibleAcr } from \"./acp\";\nimport {\n  addAcrPolicyUrl,\n  addPolicyUrl,\n  getAcrPolicyUrlAll,\n  getPolicyUrlAll,\n  removeAcrPolicyUrl,\n  removePolicyUrl,\n} from \"./control\";\nimport { internal_getAcr, internal_setAcr } from \"./control.internal\";\n\n/**\n * A Policy can be applied to Resources to grant or deny [[AccessModes]] to users who match the Policy's [[Rule]]s.\n * @since 1.6.0\n */\nexport type Policy = ThingPersisted;\n/**\n * A Resource Policy is like a regular [[Policy]], but rather than being re-used for different Resources, it is used for a single Resource and is stored in that Resource's Access Control Resource.\n * @since 1.6.0\n */\nexport type ResourcePolicy = ThingPersisted;\n/**\n * The different Access Modes that a [[Policy]] can allow or deny for a Resource.\n * @since 1.6.0\n */\nexport type AccessModes = {\n  read: boolean;\n  append: boolean;\n  write: boolean;\n};\n\n/**\n * @param thing the [[Thing]] to check to see if it's an ACP Policy or not\n */\nfunction isPolicy(thing: ThingPersisted): thing is Policy {\n  return getIriAll(thing, rdf.type).includes(acp.Policy);\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Initialise a new, empty [[Policy]].\n *\n * @param url URL that identifies this Policy.\n * @since 1.6.0\n */\nexport function createPolicy(url: Url | UrlString): Policy {\n  const stringUrl = internal_toIriString(url);\n  let policyThing = createThing({ url: stringUrl });\n  policyThing = setUrl(policyThing, rdf.type, acp.Policy);\n\n  return policyThing;\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Get the [[Policy]] with the given URL from an [[SolidDataset]].\n *\n * @param policyResource The Resource that contains the given Policy.\n * @param url URL that identifies this Policy.\n * @returns The requested Policy, if it exists, or `null` if it does not.\n * @since 1.6.0\n */\nexport function getPolicy(\n  policyResource: SolidDataset,\n  url: Url | UrlString,\n): Policy | null {\n  const foundThing = getThing(policyResource, url);\n  if (foundThing === null || !isPolicy(foundThing)) {\n    return null;\n  }\n\n  return foundThing;\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Get all [[Policy]]'s in a given [[SolidDataset]].\n *\n * @param policyResource The Resource that contains Access Policies.\n * @since 1.6.0\n */\nexport function getPolicyAll(policyResource: SolidDataset): Policy[] {\n  const foundThings = getThingAll(policyResource);\n  const foundPolicies = foundThings.filter(\n    (thing) => !isThingLocal(thing) && isPolicy(thing),\n  ) as Policy[];\n  return foundPolicies;\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Remove the given [[Policy]] from the given [[SolidDataset]].\n *\n * @param policyResource The Resource that contains Access Policies.\n * @param policy The Policy to remove from the resource.\n * @since 1.6.0\n */\nexport function removePolicy<Dataset extends SolidDataset>(\n  policyResource: Dataset,\n  policy: Url | UrlString | Policy,\n): Dataset {\n  return removeThing(policyResource, policy);\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Insert the given [[Policy]] into the given [[SolidDataset]], replacing previous instances of that Policy.\n *\n * @param policyResource The Resource that contains Access Policies.\n * @param policy The Policy to insert into the Resource.\n * @returns A new dataset equal to the given resource, but with the given Policy.\n * @since 1.6.0\n */\nexport function setPolicy<Dataset extends SolidDataset>(\n  policyResource: Dataset,\n  policy: Policy,\n): Dataset {\n  return setThing(policyResource, policy);\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Given a [[Policy]] and a set of [[AccessModes]], return a new Policy based on the given\n * Policy, but with the given Access Modes allowed on it.\n *\n * @param policy The Policy on which to set the modes to allow.\n * @param modes Modes to allow for this Policy.\n * @since Not released yet.\n */\nexport function setAllowModesV2<P extends Policy | ResourcePolicy>(\n  policy: P,\n  modes: AccessModes,\n): P {\n  let newPolicy = removeAll(policy, acp.allow);\n\n  if (modes.read === true) {\n    newPolicy = addIri(\n      newPolicy,\n      acp.allow,\n      internal_accessModeIriStrings.read,\n    );\n  }\n  if (modes.append === true) {\n    newPolicy = addIri(\n      newPolicy,\n      acp.allow,\n      internal_accessModeIriStrings.append,\n    );\n  }\n  if (modes.write === true) {\n    newPolicy = addIri(\n      newPolicy,\n      acp.allow,\n      internal_accessModeIriStrings.write,\n    );\n  }\n\n  return newPolicy;\n}\n/**\n * See [[setAllowModesV2]].\n */\nexport const setAllowModes = setAllowModesV2;\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Given a [[Policy]], return which [[AccessModes]] it allows.\n *\n * @param policy The Policy for which you want to know the Access Modes it allows.\n * @since Not released yet.\n */\nexport function getAllowModesV2<P extends Policy | ResourcePolicy>(\n  policy: P,\n): AccessModes {\n  const allowedModes = getIriAll(policy, acp.allow);\n  return {\n    read: allowedModes.includes(internal_accessModeIriStrings.read),\n    append: allowedModes.includes(internal_accessModeIriStrings.append),\n    write: allowedModes.includes(internal_accessModeIriStrings.write),\n  };\n}\n\n/**\n * See [[getAllowModesV2]].\n */\nexport const getAllowModes = getAllowModesV2;\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Given a [[Policy]] and a set of [[AccessModes]], return a new Policy based on the given\n * Policy, but with the given Access Modes disallowed on it.\n *\n * @param policy The Policy on which to set the modes to disallow.\n * @param modes Modes to disallow for this Policy.\n * @since Not released yet.\n */\nexport function setDenyModesV2<P extends Policy | ResourcePolicy>(\n  policy: P,\n  modes: AccessModes,\n): P {\n  let newPolicy = removeAll(policy, acp.deny);\n\n  if (modes.read === true) {\n    newPolicy = addIri(newPolicy, acp.deny, internal_accessModeIriStrings.read);\n  }\n  if (modes.append === true) {\n    newPolicy = addIri(\n      newPolicy,\n      acp.deny,\n      internal_accessModeIriStrings.append,\n    );\n  }\n  if (modes.write === true) {\n    newPolicy = addIri(\n      newPolicy,\n      acp.deny,\n      internal_accessModeIriStrings.write,\n    );\n  }\n\n  return newPolicy;\n}\n\n/**\n * See [[setDenyModesV2]].\n */\nexport const setDenyModes = setDenyModesV2;\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Given a [[Policy]], return which [[AccessModes]] it disallows.\n *\n * @param policy The Policy on which you want to know the Access Modes it disallows.\n * @since Not released yet.\n */\nexport function getDenyModesV2<P extends Policy | ResourcePolicy>(\n  policy: P,\n): AccessModes {\n  const deniedModes = getIriAll(policy, acp.deny);\n  return {\n    read: deniedModes.includes(internal_accessModeIriStrings.read),\n    append: deniedModes.includes(internal_accessModeIriStrings.append),\n    write: deniedModes.includes(internal_accessModeIriStrings.write),\n  };\n}\n\n/**\n * See [[getDenyModesV2]].\n */\nexport const getDenyModes = getDenyModesV2;\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Initialise a new, empty [[ResourcePolicy]] for the given Resource.\n *\n * @param resourceWithAcr The Resource to which the Policy is to apply.\n * @param name The name that identifies this Policy.\n * @since 1.6.0\n */\nexport function createResourcePolicyFor(\n  resourceWithAcr: WithAccessibleAcr,\n  name: string,\n): ResourcePolicy {\n  const acr = internal_getAcr(resourceWithAcr);\n  const url = new URL(getSourceUrl(acr));\n  url.hash = `#${name}`;\n  let policyThing = createThing({ url: url.href });\n  policyThing = setUrl(policyThing, rdf.type, acp.Policy);\n\n  return policyThing;\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Get the [[ResourcePolicy]] with the given name that applies to a Resource\n * from its Access Control Resource.\n *\n * @param resourceWithAcr The Resource whose ACR contains the given Policy.\n * @param name The name that identifies this Policy.\n * @returns The requested Policy, if it exists and applies to the given Resource, or `null` if it does not.\n * @since 1.6.0\n */\nexport function getResourcePolicy(\n  resourceWithAcr: WithAccessibleAcr,\n  name: string,\n): ResourcePolicy | null {\n  const acr = internal_getAcr(resourceWithAcr);\n  const acrUrl = getSourceUrl(acr);\n  const url = new URL(acrUrl);\n  url.hash = `#${name}`;\n  const foundThing = getThing(acr, url.href);\n  if (\n    !getPolicyUrlAll(resourceWithAcr).includes(url.href) ||\n    foundThing === null ||\n    !isPolicy(foundThing)\n  ) {\n    return null;\n  }\n\n  return foundThing;\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Get the [[ResourcePolicy]] with the given name that applies to a Resource's\n * Access Control Resource from that Access Control Resource.\n *\n * @param resourceWithAcr The Resource whose ACR contains the given Policy.\n * @param name The name that identifies this Policy.\n * @returns The requested Policy, if it exists and applies to the Resource's ACR, or `null` if it does not.\n * @since 1.6.0\n */\nexport function getResourceAcrPolicy(\n  resourceWithAcr: WithAccessibleAcr,\n  name: string,\n): ResourcePolicy | null {\n  const acr = internal_getAcr(resourceWithAcr);\n  const acrUrl = getSourceUrl(acr);\n  const url = new URL(acrUrl);\n  url.hash = `#${name}`;\n  const foundThing = getThing(acr, url.href);\n  if (\n    !getAcrPolicyUrlAll(resourceWithAcr).includes(url.href) ||\n    foundThing === null ||\n    !isPolicy(foundThing)\n  ) {\n    return null;\n  }\n\n  return foundThing;\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Get all [[ResourcePolicy]]'s that apply to a Resource in its Access Control\n * Resource.\n *\n * @param resourceWithAcr The Resource whose Access Control Resource contains Access Policies applying to it.\n * @since 1.6.0\n */\nexport function getResourcePolicyAll(\n  resourceWithAcr: WithAccessibleAcr,\n): ResourcePolicy[] {\n  const acr = internal_getAcr(resourceWithAcr);\n  const policyUrls = getPolicyUrlAll(resourceWithAcr);\n  const foundThings = policyUrls.map((policyUrl) => getThing(acr, policyUrl));\n  const foundPolicies = foundThings.filter(\n    (thing) => thing !== null && isPolicy(thing),\n  ) as ResourcePolicy[];\n  return foundPolicies;\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Get all [[ResourcePolicy]]'s that apply to a given Resource's Access Control\n * Resource from that Access Control Resource.\n *\n * @param resourceWithAcr The Resource whose Access Control Resource contains Access Policies.\n * @since 1.6.0\n */\nexport function getResourceAcrPolicyAll(\n  resourceWithAcr: WithAccessibleAcr,\n): ResourcePolicy[] {\n  const acr = internal_getAcr(resourceWithAcr);\n  const policyUrls = getAcrPolicyUrlAll(resourceWithAcr);\n  const foundThings = policyUrls.map((policyUrl) => getThing(acr, policyUrl));\n  const foundPolicies = foundThings.filter(\n    (thing) => thing !== null && isPolicy(thing),\n  ) as ResourcePolicy[];\n  return foundPolicies;\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Remove the given [[ResourcePolicy]] from the given Resource's Access Control\n * Resource.\n *\n * @param resourceWithAcr The Resource whose Access Control Resource contains Access Policies.\n * @param policy The Policy to remove from the Resource's Access Control Resource.\n * @since 1.6.0\n */\nexport function removeResourcePolicy<ResourceExt extends WithAccessibleAcr>(\n  resourceWithAcr: ResourceExt,\n  policy: string | Url | UrlString | ResourcePolicy,\n): ResourceExt {\n  const acr = internal_getAcr(resourceWithAcr);\n  let policyToRemove = policy;\n  if (typeof policyToRemove === \"string\") {\n    if (internal_isValidUrl(policyToRemove) === false) {\n      // If the given Policy to remove is the name of the Policy,\n      // resolve it to its full URL — developers usually refer to either the\n      // Policy itself, or by its name, as they do not have access to the ACR\n      // directly.\n      const policyUrl = new URL(getSourceUrl(acr));\n      policyUrl.hash = `#${policy}`;\n      policyToRemove = policyUrl.href;\n    }\n  }\n  let policyUrlString: UrlString;\n  if (typeof policyToRemove === \"string\") {\n    policyUrlString = policyToRemove;\n  } else if (isNamedNode(policyToRemove)) {\n    policyUrlString = internal_toIriString(policyToRemove);\n  } else {\n    policyUrlString = asUrl(policyToRemove, getSourceUrl(acr));\n  }\n\n  // Check whether the actual Policy (i.e. with the Policy type) exists:\n  const matchingRule = getResourcePolicy(\n    resourceWithAcr,\n    new URL(policyUrlString).hash.substring(1),\n  );\n  if (matchingRule === null) {\n    // No such Policy exists yet, so return the Resource+ACR unchanged:\n    return resourceWithAcr;\n  }\n\n  const updatedAcr = removeThing(acr, policyToRemove);\n  const updatedResource = internal_setAcr(resourceWithAcr, updatedAcr);\n  return removePolicyUrl(updatedResource, policyUrlString);\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Remove the given [[ResourcePolicy]] that applies to a given Resource's Access\n * Control Resource from that Access Control Resource.\n *\n * @param resourceWithAcr The Resource whose Access Control Resource contains Access Policies.\n * @param policy The ACR Policy to remove from the Resource's Access Control Resource.\n * @since 1.6.0\n */\nexport function removeResourceAcrPolicy<ResourceExt extends WithAccessibleAcr>(\n  resourceWithAcr: ResourceExt,\n  policy: string | Url | UrlString | ResourcePolicy,\n): ResourceExt {\n  const acr = internal_getAcr(resourceWithAcr);\n  let policyToRemove = policy;\n  if (typeof policyToRemove === \"string\") {\n    if (internal_isValidUrl(policyToRemove) === false) {\n      // If the given Policy to remove is the name of the Policy,\n      // resolve it to its full URL — developers usually refer to either the\n      // Policy itself, or by its name, as they do not have access to the ACR\n      // directly.\n      const policyUrl = new URL(getSourceUrl(acr));\n      policyUrl.hash = `#${policy}`;\n      policyToRemove = policyUrl.href;\n    }\n  }\n\n  let policyUrlString: string;\n  if (typeof policyToRemove === \"string\") {\n    policyUrlString = policyToRemove;\n  } else if (isNamedNode(policyToRemove)) {\n    policyUrlString = internal_toIriString(policyToRemove);\n  } else {\n    policyUrlString = asUrl(policyToRemove, getSourceUrl(acr));\n  }\n\n  // Check whether the actual Policy (i.e. with the Policy type) exists:\n  const matchingRule = getResourceAcrPolicy(\n    resourceWithAcr,\n    new URL(policyUrlString).hash.substring(1),\n  );\n  if (matchingRule === null) {\n    // No such Policy exists yet, so return the Resource+ACR unchanged:\n    return resourceWithAcr;\n  }\n\n  const updatedAcr = removeThing(acr, policyToRemove);\n  const updatedResource = internal_setAcr(resourceWithAcr, updatedAcr);\n  return removeAcrPolicyUrl(updatedResource, policyUrlString);\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Insert the given [[ResourcePolicy]] into the given Resource's Acccess Control\n * Resource, replacing previous instances of that Policy.\n *\n * @param resourceWithAcr The Resource whose Access Control Resource contains Access Policies.\n * @param policy The Policy to insert into the Resource's Access Control Resource.\n * @returns A new Resource equal to the given Resource, but with the given Policy in its Access Control Resource.\n * @since 1.6.0\n */\nexport function setResourcePolicy<ResourceExt extends WithAccessibleAcr>(\n  resourceWithAcr: ResourceExt,\n  policy: ResourcePolicy,\n): ResourceExt {\n  const acr = internal_getAcr(resourceWithAcr);\n  const updatedAcr = setThing(acr, policy);\n  const updatedResource = internal_setAcr(resourceWithAcr, updatedAcr);\n  const policyUrl = asUrl(policy, getSourceUrl(acr));\n  return addPolicyUrl(updatedResource, policyUrl);\n}\n\n/**\n * ```{note} There is no Access Control Policies specification yet. As such, this\n * function is still experimental and subject to change, even in a non-major release.\n * ```\n *\n * Insert the given [[ResourcePolicy]] into the given Resource's Acccess Control\n * Resource, replacing previous instances of that Policy, to apply to the Access\n * Control Resource itself.\n *\n * @param resourceWithAcr The Resource whose Access Control Resource contains Access Policies.\n * @param policy The Policy to insert into the Resource's Access Control Resource.\n * @returns A new Resource equal to the given Resource, but with the given Policy in its Access Control Resource, applying to that Access Control Resource.\n * @since 1.6.0\n */\nexport function setResourceAcrPolicy<ResourceExt extends WithAccessibleAcr>(\n  resourceWithAcr: ResourceExt,\n  policy: ResourcePolicy,\n): ResourceExt {\n  const acr = internal_getAcr(resourceWithAcr);\n  const updatedAcr = setThing(acr, policy);\n  const updatedResource = internal_setAcr(resourceWithAcr, updatedAcr);\n  const policyUrl = asUrl(policy, getSourceUrl(acr));\n  return addAcrPolicyUrl(updatedResource, policyUrl);\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport type { UrlString, WithResourceInfo } from \"../interfaces\";\nimport { mockSolidDatasetFrom } from \"../resource/mock\";\nimport { getSourceUrl } from \"../resource/resource\";\nimport { internal_cloneResource } from \"../resource/resource.internal\";\nimport type { WithAccessibleAcr } from \"./acp\";\nimport type { AccessControlResource } from \"./control\";\n\n/**\n *\n * ```{warning}\n * Do not use this function in production code.  For use in **unit tests** that require a\n * [[AccessControlResource]].\n * ```\n *\n * Initialises a new empty Access Control Resource for a given Resource for use\n * in **unit tests**.\n *\n * @param resourceUrl The URL of the Resource to which the mocked ACR should apply.\n * @returns The mocked empty Access Control Resource for the given Resource.\n * @since 1.6.0\n */\nexport function mockAcrFor(resourceUrl: UrlString): AccessControlResource {\n  const acrUrl = new URL(\"access-control-resource\", resourceUrl).href;\n  const acr: AccessControlResource = {\n    ...mockSolidDatasetFrom(acrUrl),\n    accessTo: resourceUrl,\n  };\n\n  return acr;\n}\n\n/**\n * ```{warning}\n * Do not use this function in production code.  For use in **unit tests** that require a\n * Resource with an [[AccessControlResource]].\n * ```\n *\n * Attaches an Access Control Resource to a given [[SolidDataset]] for use\n * in **unit tests**; e.g., unit tests that call [[getPolicyUrlAll]].\n *\n * @param resource The Resource to mock up with a new resource ACL.\n * @param accessControlResource The Access Control Resource to attach to the given Resource.\n * @returns The input Resource with an empty resource ACL attached.\n * @since 1.6.0\n */\nexport function addMockAcrTo<T extends WithResourceInfo>(\n  resource: T,\n  accessControlResource: AccessControlResource = mockAcrFor(\n    getSourceUrl(resource),\n  ),\n): T & WithAccessibleAcr {\n  const resourceWithAcr: typeof resource & WithAccessibleAcr = Object.assign(\n    internal_cloneResource(resource),\n    {\n      internal_acp: {\n        acr: accessControlResource,\n        aprs: {},\n      },\n    },\n  );\n\n  return resourceWithAcr;\n}\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\n/**\n * :::{admonition} Experimental API\n * :class: important\n *\n * The Access Control Policies proposal has not yet been reviewed for inclusion in the Solid spec.\n * To enable early experimentation, solid-client exposes a low-level API. However, this API can and\n * will include breaking changes in non-major releases. Additionally, for most applications, a\n * higher-level API that is planned will be more applicable.\n *\n * Thus, the following export is *only* intended for experimentation by early adopters, and is not\n * recommended for production applications. Because of this, all ACP-related API's are exported on a\n * single object, which does not facilitate tree-shaking: if you use one ACP-related API, all of\n * them will be included in your bundle.\n *\n * For more information see: [Tutorial: Managing\n * Access](https://docs.inrupt.com/developer-tools/javascript/client-libraries/tutorial/manage-access/)\n * :::\n *\n * This module supports Inrupt's ESS 2.0 ACP implementation.\n *\n * This module can be imported as an object from the main package, which results\n * in tree-shaking not being supported (so all the exported APIs will likely end\n * up in your bundle). This import style is used for environments such as nextjs\n * or create-react-app.\n *\n * ```typescript\n * import { acp_ess_2 } from \"@inrupt/solid-client\";\n * ```\n *\n * @packageDocumentation\n * @module acp_ess_2\n */\n\nexport {\n  getFileWithAccessDatasets,\n  getFileWithAcr,\n  getLinkedAcrUrl,\n  getReferencedPolicyUrlAll,\n  getResourceInfoWithAccessDatasets,\n  getResourceInfoWithAcr,\n  getSolidDatasetWithAccessDatasets,\n  getSolidDatasetWithAcr,\n  hasAccessibleAcr,\n  saveAcrFor,\n  isAcpControlled,\n} from \"./acp\";\nexport {\n  hasLinkedAcr,\n  removeAcrPolicyUrlAll,\n  removeMemberAcrPolicyUrlAll,\n  removeMemberPolicyUrlAll,\n  removePolicyUrlAll,\n} from \"./control\";\nexport { addAcrPolicyUrl } from \"./policy/addAcrPolicyUrl\";\nexport { addMemberAcrPolicyUrl } from \"./policy/addMemberAcrPolicyUrl\";\nexport { addMemberPolicyUrl } from \"./policy/addMemberPolicyUrl\";\nexport { addPolicyUrl } from \"./policy/addPolicyUrl\";\nexport { getAcrPolicyUrlAll } from \"./policy/getAcrPolicyUrlAll\";\nexport { getMemberAcrPolicyUrlAll } from \"./policy/getMemberAcrPolicyUrlAll\";\nexport { getMemberPolicyUrlAll } from \"./policy/getMemberPolicyUrlAll\";\nexport { getPolicyUrlAll } from \"./policy/getPolicyUrlAll\";\nexport { removeAcrPolicyUrl } from \"./policy/removeAcrPolicyUrl\";\nexport { removeMemberAcrPolicyUrl } from \"./policy/removeMemberAcrPolicyUrl\";\nexport { removeMemberPolicyUrl } from \"./policy/removeMemberPolicyUrl\";\nexport { removePolicyUrl } from \"./policy/removePolicyUrl\";\nexport { setResourcePolicy } from \"./policy/setResourcePolicy\";\nexport {\n  createPolicy,\n  getPolicy,\n  getPolicyAll,\n  removePolicy,\n  setPolicy,\n  createResourcePolicyFor,\n  getResourceAcrPolicy,\n  getResourceAcrPolicyAll,\n  getResourcePolicy,\n  getResourcePolicyAll,\n  removeResourceAcrPolicy,\n  removeResourcePolicy,\n  getAllowModesV2 as getAllowModes,\n  getDenyModesV2 as getDenyModes,\n  setAllowModesV2 as setAllowModes,\n  setDenyModesV2 as setDenyModes,\n} from \"./policy\";\nexport {\n  addAgent,\n  addNoneOfMatcherUrl,\n  addAnyOfMatcherUrl,\n  addAllOfMatcherUrl,\n  createMatcher,\n  getAgentAll,\n  getNoneOfMatcherUrlAll,\n  getAnyOfMatcherUrlAll,\n  getAllOfMatcherUrlAll,\n  getMatcher,\n  getMatcherAll,\n  hasAuthenticated,\n  hasCreator,\n  hasPublic,\n  removeAgent,\n  removeNoneOfMatcherUrl,\n  removeAnyOfMatcherUrl,\n  removeAllOfMatcherUrl,\n  removeMatcher,\n  setAgent,\n  setAuthenticated,\n  setCreator,\n  setNoneOfMatcherUrl,\n  setAnyOfMatcherUrl,\n  setPublic,\n  setAllOfMatcherUrl,\n  setMatcher,\n  addClient,\n  getClientAll,\n  removeClient,\n  removeAuthenticated,\n  removeCreator,\n  removePublic,\n  createResourceMatcherFor,\n  getResourceMatcher,\n  getResourceMatcherAll,\n  removeResourceMatcher,\n  setResourceMatcher,\n} from \"./matcher\";\nexport { addMockAcrTo, mockAcrFor } from \"./mock\";\nexport { getVcAccess } from \"./util/getVcAccess\";\nexport { setVcAccess } from \"./util/setVcAccess\";\n","//\n// Copyright Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport * as formats from \"./formats\";\n\nexport {\n  isContainer,\n  isRawData,\n  getSourceUrl,\n  getSourceIri,\n  getContentType,\n  getResourceInfo,\n  getPodOwner,\n  isPodOwner,\n  getLinkedResourceUrlAll,\n  getEffectiveAccess,\n  responseToResourceInfo,\n  FetchError,\n} from \"./resource/resource\";\nexport {\n  getFile,\n  deleteFile,\n  saveFileInContainer,\n  overwriteFile,\n} from \"./resource/file\";\nexport {\n  createSolidDataset,\n  getSolidDataset,\n  saveSolidDatasetAt,\n  deleteSolidDataset,\n  createContainerAt,\n  saveSolidDatasetInContainer,\n  createContainerInContainer,\n  deleteContainer,\n  getContainedResourceUrlAll,\n  validateContainedResourceAll,\n  solidDatasetAsMarkdown,\n  changeLogAsMarkdown,\n  Parser,\n  ParseOptions,\n  responseToSolidDataset,\n  getWellKnownSolid,\n} from \"./resource/solidDataset\";\nexport {\n  mockSolidDatasetFrom,\n  mockContainerFrom,\n  mockFileFrom,\n  mockFetchError,\n} from \"./resource/mock\";\nexport {\n  getThing,\n  getThingAll,\n  setThing,\n  removeThing,\n  createThing,\n  isThing,\n  isThingLocal,\n  asUrl,\n  asIri,\n  thingAsMarkdown,\n  ThingExpectedError,\n} from \"./thing/thing\";\nexport {\n  getPropertyAll,\n  getUrl,\n  getIri,\n  getBoolean,\n  getDatetime,\n  getDate,\n  getTime,\n  getDecimal,\n  getInteger,\n  getStringEnglish,\n  getStringWithLocale,\n  getStringNoLocale,\n  getUrlAll,\n  getIriAll,\n  getBooleanAll,\n  getDatetimeAll,\n  getDateAll,\n  getTimeAll,\n  getDecimalAll,\n  getIntegerAll,\n  getStringEnglishAll,\n  getStringWithLocaleAll,\n  getStringByLocaleAll,\n  getStringNoLocaleAll,\n  getLiteral,\n  getNamedNode,\n  getTerm,\n  getLiteralAll,\n  getNamedNodeAll,\n  getTermAll,\n} from \"./thing/get\";\nexport {\n  addUrl,\n  addIri,\n  addBoolean,\n  addDatetime,\n  addDate,\n  addTime,\n  addDecimal,\n  addInteger,\n  addStringEnglish,\n  addStringWithLocale,\n  addStringNoLocale,\n  addLiteral,\n  addNamedNode,\n  addTerm,\n} from \"./thing/add\";\nexport {\n  setUrl,\n  setIri,\n  setBoolean,\n  setDatetime,\n  setDate,\n  setTime,\n  setDecimal,\n  setInteger,\n  setStringWithLocale,\n  setStringNoLocale,\n  setLiteral,\n  setNamedNode,\n  setTerm,\n} from \"./thing/set\";\nexport {\n  removeAll,\n  removeUrl,\n  removeIri,\n  removeBoolean,\n  removeDatetime,\n  removeDate,\n  removeTime,\n  removeDecimal,\n  removeInteger,\n  removeStringEnglish,\n  removeStringWithLocale,\n  removeStringNoLocale,\n  removeLiteral,\n  removeNamedNode,\n} from \"./thing/remove\";\nexport { buildThing, ThingBuilder } from \"./thing/build\";\nexport { mockThingFrom } from \"./thing/mock\";\nexport {\n  hasAcl,\n  hasFallbackAcl,\n  getFallbackAcl,\n  hasResourceAcl,\n  getResourceAcl,\n  getSolidDatasetWithAcl,\n  getFileWithAcl,\n  getResourceInfoWithAcl,\n  createAcl,\n  createAclFromFallbackAcl,\n  saveAclFor,\n  deleteAclFor,\n  hasAccessibleAcl,\n  WithAccessibleAcl,\n  WithAcl,\n  WithFallbackAcl,\n  WithResourceAcl,\n  AclDataset,\n  AclRule as internal_AclRule,\n  Access,\n} from \"./acl/acl\";\nexport { WithAcp, WithAccessibleAcr } from \"./acp/acp\";\nexport {\n  AgentAccess,\n  getAgentAccess,\n  getAgentAccessAll,\n  getAgentResourceAccess,\n  getAgentResourceAccessAll,\n  setAgentResourceAccess,\n  getAgentDefaultAccess,\n  getAgentDefaultAccessAll,\n  setAgentDefaultAccess,\n} from \"./acl/agent\";\nexport {\n  getGroupAccess,\n  getGroupAccessAll,\n  getGroupResourceAccess,\n  getGroupResourceAccessAll,\n  getGroupDefaultAccess,\n  getGroupDefaultAccessAll,\n  setGroupDefaultAccess,\n  setGroupResourceAccess,\n} from \"./acl/group\";\nexport {\n  getPublicAccess,\n  getPublicResourceAccess,\n  getPublicDefaultAccess,\n  setPublicResourceAccess,\n  setPublicDefaultAccess,\n} from \"./acl/class\";\nexport { addMockResourceAclTo, addMockFallbackAclTo } from \"./acl/mock\";\nexport {\n  Url,\n  Iri,\n  UrlString,\n  IriString,\n  WebId,\n  SolidDataset,\n  Thing,\n  ThingPersisted,\n  ThingLocal,\n  LocalNode,\n  hasResourceInfo,\n  hasServerResourceInfo,\n  WithResourceInfo,\n  WithChangeLog,\n  WithServerResourceInfo,\n  UploadRequestInit,\n  SolidClientError,\n  AccessModes,\n} from \"./interfaces\";\nexport { fromRdfJsDataset, toRdfJsDataset } from \"./rdfjs\";\nexport { Time } from \"./datatypes\";\nexport {\n  addJwkToJwks,\n  addPublicKeyToProfileJwks,\n  getProfileJwksIri,\n  setProfileJwks,\n} from \"./profile/jwks\";\nexport {\n  getProfileAll,\n  ProfileAll,\n  getPodUrlAll,\n  getPodUrlAllFrom,\n  getAltProfileUrlAllFrom,\n  getWebIdDataset,\n} from \"./profile/webid\";\n\n// Export the different formats methods from @inrupt/solid-client import, these\n// are not part of our Public API, but are needed to be exported for usage from\n// our other packages.\n//\n// NOTE: We have to export like this, otherwise rollup does some sort of\n// tree-shaking and breaks the build where `dist/formats/index.mjs` is no longer\n// built, and this causes the `@inrupt/solid-client/formats` subpath export to\n// no longer work.\nexport const { getJsonLdParser, getTurtleParser, solidDatasetAsTurtle } =\n  formats;\n\n/**\n * This API is still experimental, and subject to change. It builds on top of both\n * ACP and WAC, aiming at being adaptable to any Access Control system that may be\n * implemented in Solid. That is why it is purely Resource-centric: the library\n * discovers metadata associated with the Resource itself, and calls the appropriate\n * underlying API to deal with the Access Control in place for the target Resource.\n *\n * As it is still under development, the following export is *only* intended for experimentation\n * by early adopters, and is not recommended yet for production applications. Because\n * of this, all of the Access-related API's are exported on a single object, which does\n * not facilitate tree-shaking: if you use one ACP-related API, all of them will be\n * included in your bundle.\n *\n * Note that the following object is exposed to be available for environments not\n * supporting export maps. For developers using Node 12+, Webpack 5+, or any tool\n * or environment with support for export maps, we recommend you import these\n * functions directly from @inrupt/solid-client/universal.\n */\nexport * as universalAccess from \"./universal\";\n\n/**\n * The Access Control Policies proposal has not yet been reviewed for inclusion in the Solid spec.\n * To enable early experimentation, solid-client exposes a low-level API. However, this API can and\n * will include breaking changes in non-major releases. Additionally, for most applications, a\n * higher-level API that is planned will be more applicable.\n * Thus, the following export is *only* intended for experimentation by early adopters, and is not\n * recommended for production applications. Because of this, all ACP-related API's are exported on a\n * single object, which does not facilitate tree-shaking: if you use one ACP-related API, all of\n * them will be included in your bundle.\n *\n * This version of the APIs contains changes that have not been implemented by a server yet. Only\n * switch to it when servers are updated.\n */\nexport * as acp_ess_2 from \"./acp/ess2\";\n"],"names":["getContentType","getJsonLdParser","getTurtleParser","N3Parser","N3Writer","solidDatasetAsTurtle","prefixes","defaultPrefixes","uuidv4","getAgentAccess","getAgentAccessAll","setAgentResourceAccess","getPublicAccess","setPublicResourceAccess","getAcrPolicyUrlAll","getMemberAcrPolicyUrlAll","removeAcrPolicyUrl","getPolicyUrlAll","getMemberPolicyUrlAll","removePolicyUrl","getAccessControlResource","getAgentAccessWac","getPublicAccessWac","getAgentAccessAllWac","setAgentResourceAccessWac","setPublicResourceAccessWac","getAgentAccessAcp","getAgentAccessAllAcp","getPublicAccessAcp","cloneResource","setAgentAccess","setAgentAccessWac","setAgentAccessAcp","setPublicAccess","setPublicAccessWac","setPublicAccessAcp"],"mappings":"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"}