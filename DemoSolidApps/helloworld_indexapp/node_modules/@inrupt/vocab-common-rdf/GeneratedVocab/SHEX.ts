/**
 * MIT License
 * 
 * Copyright 2022 Inrupt Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the &quot;Software&quot;), to deal in
 * the Software without restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the
 * Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
 * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

/**
 * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]
 * as part of artifact: [vocab-common-rdf], version: [1.0.5]
 * on 'Wednesday, June 1, 2022 7:54 PM'.
 *
 * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].
 *
 * This document describes the RDFS vocabulary description used in the Shape Expression Language (ShEx) [[shex-semantics]] along with the default JSON-LD Context and shape expression to validate RDF versions of shapes.
 */

// We prefix our local variables with underscores to (hopefully!) prevent
// potential names clashes with terms from vocabularies.
const _NAMESPACE = "http://www.w3.org/ns/shex#";
function _NS (localName: string): string {
  return (_NAMESPACE + localName);
}

/**
 * This document describes the RDFS vocabulary description used in the Shape Expression Language (ShEx) [[shex-semantics]] along with the default JSON-LD Context and shape expression to validate RDF versions of shapes.
 */
const SHEX = {
  PREFIX: "shex",
  NAMESPACE: _NAMESPACE,
  PREFIX_AND_NAMESPACE: { "shex": "http://www.w3.org/ns/shex#" },
  NS: _NS,

  // *****************
  // All the Classes.
  // *****************

  /**
   * Annotations provide a format-independent way to provide additional information about elements in a schema. 
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  Annotation: _NS("Annotation"),

  /**
   * A TripleExpression composed of one or more sub-expressions, all of which must match.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  EachOf: _NS("EachOf"),

  /**
   * The abstract class of Triple Expressions.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  TripleExpression: _NS("TripleExpression"),

  /**
   * An IRI prefix used for matching IRIs.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  IriStem: _NS("IriStem"),

  /**
   * Abstract class for Stems
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  Stem: _NS("Stem"),

  /**
   * An IRI prefix (or wildcard) along with a set of excluded values, used for node matching.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  IriStemRange: _NS("IriStemRange"),

  /**
   * Abstract Class for Stem Ranges
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  StemRange: _NS("StemRange"),

  /**
   * An Language tag used for matching Literal Languages.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  Language: _NS("Language"),

  /**
   * An Language prefix used for matching Literal Languages.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  LanguageStem: _NS("LanguageStem"),

  /**
   * An Language prefix (or wildcard) along with a set of excluded values, used for node matching.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  LanguageStemRange: _NS("LanguageStemRange"),

  /**
   * An Literal prefix used for matching Literals.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  LiteralStem: _NS("LiteralStem"),

  /**
   * An Literal prefix (or wildcard) along with a set of excluded values, used for node matching.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  LiteralStemRange: _NS("LiteralStemRange"),

  /**
   * A constraint on the type or value of an RDF Node.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  NodeConstraint: _NS("NodeConstraint"),

  /**
   * The abstract class of Shape Expressions.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  ShapeExpression: _NS("ShapeExpression"),

  /**
   * The set of kinds of RDF Nodes.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  NodeKind: _NS("NodeKind"),

  /**
   * A TripleExpression composed of one or more sub-expressions, one of which must match.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  OneOf: _NS("OneOf"),

  /**
   * A Schema contains the set of shapes, used for matching a focus node.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  Schema: _NS("Schema"),

  /**
   * A list of Semantic Actions that serve as an extension point for Shape Expressions. They appear in lists in Schema's startActs and Shape, OneOf, EachOf and TripleConstraint's semActs.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  SemAct: _NS("SemAct"),

  /**
   * A shapes schema is captured in a Schema object where shapes is a mapping from shape label to shape expression.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  Shape: _NS("Shape"),

  /**
   * A ShapeExpression composed of one or more sub-expressions, all of which must match.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  ShapeAnd: _NS("ShapeAnd"),

  /**
   * A reference to a shape defined in some external Schema.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  ShapeExternal: _NS("ShapeExternal"),

  /**
   * A ShapeNot is satisfied when it’s included ShapeExpression is not satisfied.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  ShapeNot: _NS("ShapeNot"),

  /**
   * A ShapeExpression composed of one or more sub-expressions, one of which must match.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  ShapeOr: _NS("ShapeOr"),

  /**
   * A constraint on a triple having a specific predicate and optionally a shape expression used for matching values.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  TripleConstraint: _NS("TripleConstraint"),

  /**
   * Indicates that a stem is a Wildcard, rather than a URI prefix.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  Wildcard: _NS("Wildcard"),


  // *******************
  // All the Properties.
  // *******************

  /**
   * Annotations on a TripleExpression.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  annotation: _NS("annotation"),

  /**
   * Indicates that a Shape is closed, meaning that it may contain no property values other than those used within TripleConstraints.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  closed: _NS("closed"),

  /**
   * Code executed by Semantic Action.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  code: _NS("code"),

  /**
   * A datatype constraint.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  datatype: _NS("datatype"),

  /**
   * Values that are excluded from value matching.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  exclusion: _NS("exclusion"),

  /**
   * Expression associated with the TripleExpression.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  expression: _NS("expression"),

  /**
   * List of 2 or more expressions associated with the TripleExpression.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  expressions: _NS("expressions"),

  /**
   * Properties which may have extra values beyond those matched through a constraint.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  extra: _NS("extra"),

  /**
   * Regular expression flags
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  flags: _NS("flags"),

  /**
   * for "fractiondigits" constraints, v is less than or equals the number of digits to the right of the decimal place in the XML Schema canonical form[xmlschema-2] of the value of n, ignoring trailing zeros.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  fractiondigits: _NS("fractiondigits"),

  /**
   * Abstract property of numeric facets on a NodeConstraint.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  numericFacet: _NS("numericFacet"),

  /**
   * An abstract property of string and numeric facets on a NodeConstraint.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  xsFacet: _NS("xsFacet"),

  /**
   * Constrains the subject of a triple, rather than the object.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  inverse: _NS("inverse"),

  /**
   * The value used to match the language tag of a language-tagged string.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  languageTag: _NS("languageTag"),

  /**
   * The exact length of the value of the cell.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  length: _NS("length"),

  /**
   * An abstract property of string facets on a NodeConstraint.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  stringFacet: _NS("stringFacet"),

  /**
   * Maximum number of times this TripleExpression may match; -1 for “*”
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  max: _NS("max"),

  /**
   * An atomic property that contains a single number that is the maximum valid value (exclusive).
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  maxexclusive: _NS("maxexclusive"),

  /**
   * An atomic property that contains a single number that is the maximum valid value (inclusive).
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  maxinclusive: _NS("maxinclusive"),

  /**
   * A numeric atomic property that contains a single integer that is the maximum length of the value.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  maxlength: _NS("maxlength"),

  /**
   * Minimum number of times this TripleExpression may match.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  min: _NS("min"),

  /**
   * An atomic property that contains a single number that is the minimum valid value (exclusive).
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  minexclusive: _NS("minexclusive"),

  /**
   * An atomic property that contains a single number that is the minimum valid value (inclusive).
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  mininclusive: _NS("mininclusive"),

  /**
   * An atomic property that contains a single integer that is the minimum length of the value.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  minlength: _NS("minlength"),

  /**
   * Identifier of SemAct extension.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  name: _NS("name"),

  /**
   * Restiction on the kind of node matched; restricted to the defined instances of NodeKind. One of shex:iri, shex:bnode, shex:literal, or shex:nonliteral.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  nodeKind: _NS("nodeKind"),

  /**
   * The object of an Annotation.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  object: _NS("object"),

  /**
   * A regular expression used for matching a value.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  pattern: _NS("pattern"),

  /**
   * The predicate of a TripleConstraint or Annotation.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  predicate: _NS("predicate"),

  /**
   * Semantic Actions on this TripleExpression.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  semActs: _NS("semActs"),

  /**
   * Shape Expression referenced by this shape.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  shapeExpr: _NS("shapeExpr"),

  /**
   * A list of 2 or more Shape Expressions referenced by this shape.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  shapeExprs: _NS("shapeExprs"),

  /**
   * Shapes in this Schema.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  shapes: _NS("shapes"),

  /**
   * A ShapeExpression matched against the focus node prior to any other mapped expressions.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  start: _NS("start"),

  /**
   * Semantic Actions run on the Schema.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  startActs: _NS("startActs"),

  /**
   * A stem value used for matching or excluding values.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  stem: _NS("stem"),

  /**
   * for "totaldigits" constraints, v equals the number of digits in the XML Schema canonical form[xmlschema-2] of the value of n
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  totaldigits: _NS("totaldigits"),

  /**
   * A ShapeExpression used for matching the object (or subject if inverted) of a TripleConstraint.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  valueExpr: _NS("valueExpr"),

  /**
   * A value restriction on a NodeConstraint.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/shex#
   */
  values: _NS("values"),

}

export default SHEX;
