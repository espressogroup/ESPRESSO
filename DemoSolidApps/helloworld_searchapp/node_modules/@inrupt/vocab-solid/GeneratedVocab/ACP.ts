/**
 * MIT License
 * 
 * Copyright 2022 Inrupt Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the &quot;Software&quot;), to deal in
 * the Software without restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the
 * Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
 * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

/**
 * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]
 * as part of artifact: [vocab-solid], version: [1.0.4]
 * on 'Wednesday, June 1, 2022 7:54 PM'.
 *
 * Vocabulary built from vocab list file: [solid-rdf/vocab-solid.yml].
 *
 * A vocabulary to structure policy-based access controls for the Solid ecosystem.
 */

// We prefix our local variables with underscores to (hopefully!) prevent
// potential names clashes with terms from vocabularies.
const _NAMESPACE = "http://www.w3.org/ns/solid/acp#";
function _NS (localName: string): string {
  return (_NAMESPACE + localName);
}

/**
 * A vocabulary to structure policy-based access controls for the Solid ecosystem.
 */
const ACP = {
  PREFIX: "acp",
  NAMESPACE: _NAMESPACE,
  PREFIX_AND_NAMESPACE: { "acp": "http://www.w3.org/ns/solid/acp#" },
  NS: _NS,

  // *****************
  // All the Classes.
  // *****************

  /**
   * Access Control statements associate an AccessControlResource with specific Policy definitions.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/solid/acp#
   */
  AccessControl: _NS("AccessControl"),

  /**
   * An RDF resource that includes AccessControl statements.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/solid/acp#
   */
  AccessControlResource: _NS("AccessControlResource"),

  /**
   * A Policy defines a collection of access modes along with the conditions under which the policy is applied.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/solid/acp#
   */
  Policy: _NS("Policy"),

  /**
   * A Rule defines which agent(s), group(s) and client application(s) match a Policy filter.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/solid/acp#
   */
  Rule: _NS("Rule"),

  /**
   * An abstract access mode. This class should not be used directly. Instead, please use Read, Write and Append.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/solid/acp#
   */
  AccessMode: _NS("AccessMode"),

  /**
   * An access mode indicating Read access
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/solid/acp#
   */
  Read: _NS("Read"),

  /**
   * An access mode indicating Write access.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/solid/acp#
   */
  Write: _NS("Write"),

  /**
   * An access mode indicating Append access. Append is a more limited form of Write in which data may only be added but not removed.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/solid/acp#
   */
  Append: _NS("Append"),


  // *******************
  // All the Properties.
  // *******************

  /**
   * An IRI representing an authenticated agent.
 Please note that in a decentralized authentication ecosystem, an authenticated agent may be ephemeral
 and, from a security standpoint, may not be significantly different than an anonymous agent.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/solid/acp#
   */
  AuthenticatedAgent: _NS("AuthenticatedAgent"),

  /**
   * An IRI representing the creator of a resource.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/solid/acp#
   */
  CreatorAgent: _NS("CreatorAgent"),

  /**
   * An IRI representing a public or anonymous agent.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/solid/acp#
   */
  PublicAgent: _NS("PublicAgent"),

  /**
   * The object of this relationship is the access control resource associated with the subject resource.
 This relationship is intended to be used as the rel type of a Link, via HTTP Link Headers rfc5988 for Linked Data resources.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/solid/acp#
   */
  accessControl: _NS("accessControl"),

  /**
   * The access property identifies the access policies that apply to the ACR itself.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/solid/acp#
   */
  access: _NS("access"),

  /**
   * The accessLocked property identifies the access policies that apply to the ACR itself.
 These policies may not be removed except by an agent with write access to the root ACR.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/solid/acp#
   */
  accessLocked: _NS("accessLocked"),

  /**
   * The accessProtected property identifies the access policies that apply to the ACR itself.
 These policies may not be removed except by an agent with write access to the ACR where the policy was initially applied.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/solid/acp#
   */
  accessProtected: _NS("accessProtected"),

  /**
   * The accessMembers property identifies the access policies that apply to the ACR itself, recursively.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/solid/acp#
   */
  accessMembers: _NS("accessMembers"),

  /**
   * The accessMembersLocked property identifies the access policies that apply to the ACR itself, recursively.
 These policies may not be removed except by an agent with write access to the root ACR.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/solid/acp#
   */
  accessMembersLocked: _NS("accessMembersLocked"),

  /**
   * The accessMembersProtected property identifies the access policies that apply to the ACR itself, recursively.
 These policies may not be removed except by an agent with write access to the ACR where the policy was initially applied.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/solid/acp#
   */
  accessMembersProtected: _NS("accessMembersProtected"),

  /**
   * The apply property identifies the access policies to apply to a resource.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/solid/acp#
   */
  apply: _NS("apply"),

  /**
   * The applyProtected property identifies the access policies to apply to a resource's members recursively.
 These policies may not be removed except by an agent with write access to the ACR where the policy was initially applied.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/solid/acp#
   */
  applyProtected: _NS("applyProtected"),

  /**
   * The applyLocked property identifies the access policies to apply to a resource's members recursively.
 These policies may not be removed except by an agent with write access to the root ACR.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/solid/acp#
   */
  applyLocked: _NS("applyLocked"),

  /**
   * The applyMembers property identifies the access policies to apply to a resource's members recursively.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/solid/acp#
   */
  applyMembers: _NS("applyMembers"),

  /**
   * The applyMembersProtected property identifies the access policies to apply to a resource's members recursively.
 These policies may not be removed except by an agent with write access to the ACR where the policy was initially applied.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/solid/acp#
   */
  applyMembersProtected: _NS("applyMembersProtected"),

  /**
   * The applyMembersLocked property identifies the access policies to apply to a resource's members recursively.
 These policies may not be removed except by an agent with write access to the root ACR.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/solid/acp#
   */
  applyMembersLocked: _NS("applyMembersLocked"),

  /**
   * The allOf property identifies a collection of Matchers, each of which must match in order for the Policy to take effect.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/solid/acp#
   */
  allOf: _NS("allOf"),

  /**
   * The anyOf property identifies a collection of Matchers, one of which must match in order for the Policy to take effect.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/solid/acp#
   */
  anyOf: _NS("anyOf"),

  /**
   * The noneOf property identifies a collection of Matchers, none of which must match in order for the Policy to take effect.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/solid/acp#
   */
  noneOf: _NS("noneOf"),

  /**
   * The allow property identifies the access modes a Policy allows.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/solid/acp#
   */
  allow: _NS("allow"),

  /**
   * The deny property identifies the access modes a Policy denies.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/solid/acp#
   */
  deny: _NS("deny"),

  /**
   * The agent property identifies the agent WebID(s) to which a Matcher matches.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/solid/acp#
   */
  agent: _NS("agent"),

  /**
   * The client property identifies the client WebID(s) to which a Matcher matches.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/solid/acp#
   */
  client: _NS("client"),

  /**
   * The group property identifies the vCard group(s) to which a Matcher matches.
   *
   * This term provides descriptions only in English.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/solid/acp#
   */
  group: _NS("group"),

}

export default ACP;
