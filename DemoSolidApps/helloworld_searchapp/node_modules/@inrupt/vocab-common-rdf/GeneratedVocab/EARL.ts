/**
 * MIT License
 * 
 * Copyright 2022 Inrupt Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the &quot;Software&quot;), to deal in
 * the Software without restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the
 * Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
 * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

/**
 * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]
 * as part of artifact: [vocab-common-rdf], version: [1.0.5]
 * on 'Wednesday, June 1, 2022 7:54 PM'.
 *
 * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].
 *
 * [Generator provided] - Evaluation and Report Language (EARL)
 */

// We prefix our local variables with underscores to (hopefully!) prevent
// potential names clashes with terms from vocabularies.
const _NAMESPACE = "http://www.w3.org/ns/earl#";
function _NS (localName: string): string {
  return (_NAMESPACE + localName);
}

/**
 * [Generator provided] - Evaluation and Report Language (EARL)
 */
const EARL = {
  PREFIX: "earl",
  NAMESPACE: _NAMESPACE,
  PREFIX_AND_NAMESPACE: { "earl": "http://www.w3.org/ns/earl#" },
  NS: _NS,

  // *****************
  // All the Classes.
  // *****************

  /**
   * a statement that embodies the results of a test
   *
   * This term provides descriptions only in English.
   */
  Assertion: _NS("Assertion"),

  /**
   * an entity such as a person, a software tool, an organization, or any other grouping that carries out a test collectively
   *
   * This term provides descriptions only in English.
   */
  Assertor: _NS("Assertor"),

  /**
   * the class of things that have been tested against some test criterion
   *
   * This term provides descriptions only in English.
   */
  TestSubject: _NS("TestSubject"),

  /**
   * a testable statement, usually one that can be passed or failed
   *
   * This term provides descriptions only in English.
   */
  TestCriterion: _NS("TestCriterion"),

  /**
   * a higher-level requirement that is tested by executing one or more sub-tests
   *
   * This term provides descriptions only in English.
   */
  TestRequirement: _NS("TestRequirement"),

  /**
   * an atomic test, usually one that is a partial test for a requirement
   *
   * This term provides descriptions only in English.
   */
  TestCase: _NS("TestCase"),

  /**
   * the actual result of performing the test
   *
   * This term provides descriptions only in English.
   */
  TestResult: _NS("TestResult"),

  /**
   * describes how a test was carried out
   *
   * This term provides descriptions only in English.
   */
  TestMode: _NS("TestMode"),

  /**
   * a discrete value that describes a resulting condition from carrying out the test
   *
   * This term provides descriptions only in English.
   */
  OutcomeValue: _NS("OutcomeValue"),

  /**
   * the class of outcomes to denote passing a test
   *
   * This term provides descriptions only in English.
   */
  Pass: _NS("Pass"),

  /**
   * the class of outcomes to denote failing a test
   *
   * This term provides descriptions only in English.
   */
  Fail: _NS("Fail"),

  /**
   * the class of outcomes to denote an undetermined outcome
   *
   * This term provides descriptions only in English.
   */
  CannotTell: _NS("CannotTell"),

  /**
   * the class of outcomes to denote the test is not applicable
   *
   * This term provides descriptions only in English.
   */
  NotApplicable: _NS("NotApplicable"),

  /**
   * the class of outcomes to denote the test has not been carried out
   *
   * This term provides descriptions only in English.
   */
  NotTested: _NS("NotTested"),

  /**
   * any piece of software such as an authoring tool, browser, or evaluation tool
   *
   * This term provides descriptions only in English.
   */
  Software: _NS("Software"),


  // *******************
  // All the Properties.
  // *******************

  /**
   * assertor of an assertion
   *
   * This term provides descriptions only in English.
   */
  assertedBy: _NS("assertedBy"),

  /**
   * test subject of an assertion
   *
   * This term provides descriptions only in English.
   */
  subject: _NS("subject"),

  /**
   * test criterion of an assertion
   *
   * This term provides descriptions only in English.
   */
  test: _NS("test"),

  /**
   * result of an assertion
   *
   * This term provides descriptions only in English.
   */
  result: _NS("result"),

  /**
   * mode in which the test was performed
   *
   * This term provides descriptions only in English.
   */
  mode: _NS("mode"),

  /**
   * assertor that is primarily responsible for performing the test
   *
   * This term provides descriptions only in English.
   */
  mainAssertor: _NS("mainAssertor"),

  /**
   * outcome of performing the test
   *
   * This term provides descriptions only in English.
   */
  outcome: _NS("outcome"),

  /**
   * location within a test subject that are most relevant to a test result
   *
   * This term provides descriptions only in English.
   */
  pointer: _NS("pointer"),

  /**
   * additional warnings or error messages in a human-readable form
   *
   * This term provides descriptions only in English.
   */
  info: _NS("info"),

}

export default EARL;
