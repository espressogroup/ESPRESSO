/**
 * MIT License
 * 
 * Copyright 2022 Inrupt Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the &quot;Software&quot;), to deal in
 * the Software without restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the
 * Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
 * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

/**
 * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]
 * as part of artifact: [vocab-common-rdf], version: [1.0.5]
 * on 'Wednesday, June 1, 2022 7:54 PM'.
 *
 * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].
 *
 * [Generator provided] - SPARQL Service Description vocabulary
 */

// We prefix our local variables with underscores to (hopefully!) prevent
// potential names clashes with terms from vocabularies.
const _NAMESPACE = "http://www.w3.org/ns/sparql-service-description#";
function _NS (localName: string): string {
  return (_NAMESPACE + localName);
}

/**
 * [Generator provided] - SPARQL Service Description vocabulary
 */
const SD = {
  PREFIX: "sd",
  NAMESPACE: _NAMESPACE,
  PREFIX_AND_NAMESPACE: { "sd": "http://www.w3.org/ns/sparql-service-description#" },
  NS: _NS,

  // *****************
  // All the Classes.
  // *****************

  /**
   * An instance of sd:Service represents a SPARQL service made available via the SPARQL Protocol.
   *
   * This term provides descriptions only with no explicit locale.
   */
  Service: _NS("Service"),

  /**
   * An instance of sd:Feature represents a feature of a SPARQL service. Specific types of features include functions, aggregates, languages, and entailment regimes and profiles. This document defines five instances of sd:Feature: sd:DereferencesURIs, sd:UnionDefaultGraph, sd:RequiresDataset, sd:EmptyGraphs, and sd:BasicFederatedQuery.
   *
   * This term provides descriptions only with no explicit locale.
   */
  Feature: _NS("Feature"),

  /**
   * An instance of sd:EntailmentRegime represents an entailment regime used in basic graph pattern matching (as described by SPARQL 1.1 Query Language).
   *
   * This term provides descriptions only with no explicit locale.
   */
  EntailmentRegime: _NS("EntailmentRegime"),

  /**
   * An instance of sd:NamedGraph represents a named graph having a name (via sd:name) and an optional graph description (via sd:graph).
   *
   * This term provides descriptions only with no explicit locale.
   */
  NamedGraph: _NS("NamedGraph"),

  /**
   * An instance of sd:EntailmentProfile represents a profile of an entailment regime. An entailment profile MAY impose restrictions on what constitutes valid RDF with respect to entailment.
   *
   * This term provides descriptions only with no explicit locale.
   */
  EntailmentProfile: _NS("EntailmentProfile"),

  /**
   * An instance of sd:Function represents a function that may be used in a SPARQL SELECT expression or a FILTER, HAVING, GROUP BY, ORDER BY, or BIND clause.
   *
   * This term provides descriptions only with no explicit locale.
   */
  Function: _NS("Function"),

  /**
   * An instance of sd:Aggregate represents an aggregate that may be used in a SPARQL aggregate query (for instance in a HAVING clause or SELECT expression) besides the standard list of supported aggregates COUNT, SUM, MIN, MAX, AVG, GROUP_CONCAT, and SAMPLE.
   *
   * This term provides descriptions only with no explicit locale.
   */
  Aggregate: _NS("Aggregate"),

  /**
   * An instance of sd:Language represents one of the SPARQL languages, including specific configurations providing particular features or extensions. This document defines three instances of sd:Language: sd:SPARQL10Query, sd:SPARQL11Query, and sd:SPARQL11Update.
   *
   * This term provides descriptions only with no explicit locale.
   */
  Language: _NS("Language"),

  /**
   * An instance of sd:Dataset represents a RDF Dataset comprised of a default graph and zero or more named graphs.
   *
   * This term provides descriptions only with no explicit locale.
   */
  Dataset: _NS("Dataset"),

  /**
   * An instance of sd:GraphCollection represents a collection of zero or more named graph descriptions. Each named graph description belonging to an sd:GraphCollection MUST be linked with the sd:namedGraph predicate.
   *
   * This term provides descriptions only with no explicit locale.
   */
  GraphCollection: _NS("GraphCollection"),

  /**
   * An instance of sd:Graph represents the description of an RDF graph.
   *
   * This term provides descriptions only with no explicit locale.
   */
  Graph: _NS("Graph"),


  // *******************
  // All the Properties.
  // *******************

  /**
   * The SPARQL endpoint of an sd:Service that implements the SPARQL Protocol service. The object of the sd:endpoint property is an IRI.
   *
   * This term provides descriptions only with no explicit locale.
   */
  endpoint: _NS("endpoint"),

  /**
   * Relates an instance of sd:Service with a resource representing a supported feature.
   *
   * This term provides descriptions only with no explicit locale.
   */
  feature: _NS("feature"),

  /**
   * Relates an instance of sd:Service with a resource representing an entailment regime used for basic graph pattern matching. This property is intended for use when a single entailment regime by default applies to all graphs in the default dataset of the service. In situations where a different entailment regime applies to a specific graph in the dataset, the sd:entailmentRegime property should be used to indicate this fact in the description of that graph.
   *
   * This term provides descriptions only with no explicit locale.
   */
  defaultEntailmentRegime: _NS("defaultEntailmentRegime"),

  /**
   * Relates a named graph description with a resource representing an entailment regime used for basic graph pattern matching over that graph.
   *
   * This term provides descriptions only with no explicit locale.
   */
  entailmentRegime: _NS("entailmentRegime"),

  /**
   * Relates an instance of sd:Service with a resource representing a supported profile of the default entailment regime (as declared by sd:defaultEntailmentRegime).
   *
   * This term provides descriptions only with no explicit locale.
   */
  defaultSupportedEntailmentProfile: _NS("defaultSupportedEntailmentProfile"),

  /**
   * Relates a named graph description with a resource representing a supported profile of the entailment regime (as declared by sd:entailmentRegime) used for basic graph pattern matching over that graph.
   *
   * This term provides descriptions only with no explicit locale.
   */
  supportedEntailmentProfile: _NS("supportedEntailmentProfile"),

  /**
   * Relates an instance of sd:Service to a function that may be used in a SPARQL SELECT expression or a FILTER, HAVING, GROUP BY, ORDER BY, or BIND clause.
   *
   * This term provides descriptions only with no explicit locale.
   */
  extensionFunction: _NS("extensionFunction"),

  /**
   * Relates an instance of sd:Service to an aggregate that may be used in a SPARQL aggregate query (for instance in a HAVING clause or SELECT expression) besides the standard list of supported aggregates COUNT, SUM, MIN, MAX, AVG, GROUP_CONCAT, and SAMPLE
   *
   * This term provides descriptions only with no explicit locale.
   */
  extensionAggregate: _NS("extensionAggregate"),

  /**
   * Relates an instance of sd:Service to a resource representing an implemented extension to the SPARQL Query or Update language.
   *
   * This term provides descriptions only with no explicit locale.
   */
  languageExtension: _NS("languageExtension"),

  /**
   * Relates an instance of sd:Service to a SPARQL language (e.g. Query and Update) that it implements.
   *
   * This term provides descriptions only with no explicit locale.
   */
  supportedLanguage: _NS("supportedLanguage"),

  /**
   * Relates an instance of sd:Service to a resource representing an implemented feature that extends the SPARQL Query or Update language and that is accessed by using the named property.
   *
   * This term provides descriptions only with no explicit locale.
   */
  propertyFeature: _NS("propertyFeature"),

  /**
   * Relates an instance of sd:Service to a description of the default dataset available when no explicit dataset is specified in the query, update request or via protocol parameters.
   *
   * This term provides descriptions only with no explicit locale.
   */
  defaultDataset: _NS("defaultDataset"),

  /**
   * Relates an instance of sd:Service to a description of the graphs which are allowed in the construction of a dataset either via the SPARQL Protocol, with FROM/FROM NAMED clauses in a query, or with USING/USING NAMED in an update request, if the service limits the scope of dataset construction.
   *
   * This term provides descriptions only with no explicit locale.
   */
  availableGraphs: _NS("availableGraphs"),

  /**
   * Relates an instance of sd:Service to a format that is supported for serializing query results.
   *
   * This term provides descriptions only with no explicit locale.
   */
  resultFormat: _NS("resultFormat"),

  /**
   * Relates an instance of sd:Service to a format that is supported for parsing RDF input; for example, via a SPARQL 1.1 Update LOAD statement, or when URIs are dereferenced in FROM/FROM NAMED/USING/USING NAMED clauses.
   *
   * This term provides descriptions only with no explicit locale.
   */
  inputFormat: _NS("inputFormat"),

  /**
   * Relates an instance of sd:Dataset to the description of its default graph.
   *
   * This term provides descriptions only with no explicit locale.
   */
  defaultGraph: _NS("defaultGraph"),

  /**
   * Relates an instance of sd:GraphCollection (or its subclass sd:Dataset) to the description of one of its named graphs. The description of such a named graph MUST include the sd:name property and MAY include the sd:graph property.
   *
   * This term provides descriptions only with no explicit locale.
   */
  namedGraph: _NS("namedGraph"),

  /**
   * Relates a named graph to the name by which it may be referenced in a FROM/FROM NAMED clause. The object of the sd:name property is an IRI.
   *
   * This term provides descriptions only with no explicit locale.
   */
  name: _NS("name"),

  /**
   * Relates a named graph to its graph description.
   *
   * This term provides descriptions only with no explicit locale.
   */
  graph: _NS("graph"),

}

export default SD;
